{"version":3,"sources":["roducate/pages/video/Video.js","roducate/components/MediaCard/MediaCard.js"],"names":["moment","require","BootstrapCheckbox","forwardRef","_ref","ref","onClick","rest","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","_objectSpread","type","Video","dispatch","useDispatch","MySwal","useSelector","state","modal","withReactContent","Swal","_useState","useState","_useState2","_slicedToArray","recentVideo","setRecentVideo","_useState3","_useState4","videoCnt","setVideoCnt","_useState5","_useState6","mediaList","setMediaList","_useState7","_useState8","selectedList","setSelectedList","_useState9","_useState10","searchStr","setSearchStr","_useState11","sortBy","sortOrder","_useState12","sort","setSort","_useState13","_useState14","pageSize","setPageSize","_useState15","_useState16","pageNumber","setPageNumber","_useState17","_useState18","totalPages","setTotalPages","_useState19","undefined","_useState20","editingRow","setEditingRow","columns","name","selector","sortable","minWidth","cell","row","width","height","viewBox","fill","xmlns","d","title","_row$mediaURL","mediaURL","includes","split","length","size","updatedAt","format","style","color","commentsCount","Avatar","img","concat","process","uploadedUserAvatar","imgHeight","imgWidth","status","uploadedUserFristName","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","DropdownMenu","right","DropdownItem","href","e","showMediaPlayModal","description","_id","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","showLoadingScreen","axios","post","videoId","sent","t0","toast","error","message","transition","Slide","hideProgressBar","autoClose","data","videoDetails","showAddMediaModal","stop","_x","apply","arguments","_ref3","_callee2","_context2","_x2","Trash","cursor","preventDefault","deleteMediaList","useEffect","_callee3","_context3","loadRecentInfo","loadData","_ref5","_callee4","_context4","success","videos","totalVideoStoreCount","totalViews","removedCount","_ref6","_callee5","_context5","_ref7","_callee7","ids","_context7","fire","text","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","_ref8","_callee6","result","res","_context6","value","timer","position","_x4","_x3","Fragment","Button","PlusCircle","class","overflowX","map","item","idx","MediaCard","media","Card","CardHeader","UncontrolledButtonDropdown","caret","outline","Row","Col","md","sm","Label","for","Input","id","onChange","parseInt","target","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","onSort","AddMedia","_media$description","_media$educationLevel","_ref$type","_ref$media","store","backgroundColor","padding","borderRadius","thumbnail","src","Math","floor","random","marginLeft","videoCount","podcastCount","secondsToHMS","duration","avatar","creatorFirstName","educationLevel","level","isPlaying","mediaId","podcasts"],"mappings":"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","file":"static/js/41.59196879.chunk.js","sourcesContent":["// ** React Imports\nimport React, {forwardRef, Fragment, useEffect, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, MoreVertical, PlusCircle, Trash} from 'react-feather'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport {showAddMediaModal} from '@store/actions/modal'\nimport {showMediaPlayModal} from '@store/actions/media'\nimport './Video.css'\nimport MediaCard from \"../../components/MediaCard/MediaCard\";\nimport {AddMedia} from \"../../modals/AddMedia/AddMedia\";\nimport Avatar from \"../../../@core/components/avatar\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst Video = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    const [recentVideo, setRecentVideo] = useState([])\n    const [videoCnt, setVideoCnt] = useState([0, 0, 0])\n\n    // data table model\n    const [mediaList, setMediaList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    const columns = [\n        {\n            name: 'Title',\n            selector: 'title',\n            sortable: true,\n            minWidth: '350px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                                  d=\"M20 3C20.5046 2.99984 20.9906 3.19041 21.3605 3.5335C21.7305 3.87659 21.9572 4.34684 21.995 4.85L22 5V19C22.0002 19.5046 21.8096 19.9906 21.4665 20.3605C21.1234 20.7305 20.6532 20.9572 20.15 20.995L20 21H4C3.49542 21.0002 3.00943 20.8096 2.63945 20.4665C2.26947 20.1234 2.04284 19.6532 2.005 19.15L2 19V5C1.99984 4.49542 2.19041 4.00943 2.5335 3.63945C2.87659 3.26947 3.34684 3.04284 3.85 3.005L4 3H20ZM20 5H4V19H20V5ZM10.34 7.638L10.858 7.868L11.196 8.028L11.583 8.218L12.013 8.436L12.483 8.686L12.99 8.966L13.256 9.118L13.774 9.423L14.248 9.715L14.678 9.988L15.058 10.241L15.538 10.571L15.902 10.834L15.997 10.904C16.1513 11.0188 16.2767 11.1682 16.363 11.34C16.4494 11.5119 16.4943 11.7016 16.4943 11.894C16.4943 12.0864 16.4494 12.2761 16.363 12.448C16.2767 12.6198 16.1513 12.7692 15.997 12.884L15.674 13.119L15.234 13.427L14.878 13.666L14.473 13.929L14.02 14.212L13.521 14.512L12.987 14.821L12.478 15.103L12.007 15.353L11.577 15.573L11.191 15.761L10.569 16.049L10.339 16.149C10.1624 16.2251 9.97051 16.2589 9.77856 16.2476C9.58662 16.2364 9.39995 16.1805 9.23346 16.0843C9.06696 15.9881 8.92524 15.8544 8.8196 15.6937C8.71396 15.5331 8.64732 15.35 8.625 15.159L8.567 14.594L8.535 14.22L8.493 13.556L8.47 13.048L8.455 12.493C8.45322 12.395 8.45189 12.297 8.451 12.199L8.449 11.894C8.449 11.687 8.451 11.487 8.455 11.294L8.47 10.739L8.493 10.232L8.52 9.775L8.55 9.374L8.625 8.63C8.64719 8.43882 8.71376 8.25547 8.81939 8.09458C8.92502 7.93369 9.0668 7.79972 9.2334 7.70335C9.4 7.60698 9.58682 7.55089 9.77896 7.53954C9.97109 7.5282 10.1632 7.56191 10.34 7.638ZM10.951 10.139L10.515 9.921L10.486 10.408L10.464 10.959L10.451 11.569L10.449 11.894L10.451 12.219L10.464 12.828L10.474 13.111L10.5 13.631L10.515 13.866L10.949 13.648L11.436 13.392L11.971 13.098L12.255 12.936L12.806 12.61L13.3 12.304L13.736 12.024L13.932 11.894L13.525 11.624L13.059 11.33C12.7938 11.1658 12.5261 11.0058 12.256 10.85L11.973 10.689L11.439 10.395L10.951 10.139Z\"\n                                  fill=\"grey\"/>\n                        </svg>\n                        &nbsp;\n                        <span>{row.title}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'File Type',\n            selector: 'orginalName',\n            sortable: false,\n            minWidth: '50px',\n            cell: row => {\n                return (\n                    <div>\n                        {row.mediaURL?.includes('.') ? row.mediaURL.split('.')[row.mediaURL.split('.').length - 1] : ''}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Views',\n            selector: 'viewsCount',\n            sortable: true,\n            minWidth: '50px'\n        },\n        {\n            name: 'Size',\n            selector: 'size',\n            sortable: true,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <div>\n                        {(row.size / 1000000) + ' Mb'}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Last updated',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '200px',\n            cell: row => {\n                return <div>{moment(row.updatedAt).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Comment',\n            selector: 'commentsCount',\n            sortable: true,\n            minWidth: '50px',\n            cell: row => {\n                return <div style={{color: '#8840E5'}}>{row.commentsCount}</div>\n            }\n        },\n        {\n            name: 'Uploaded by',\n            selector: 'duration',\n            sortable: true,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${row.uploadedUserAvatar}`}\n                                imgHeight='30' imgWidth='30' status='online'/>&nbsp;\n                        <span>{row.uploadedUserFristName}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100' onClick={(e) => {\n                                    dispatch(showMediaPlayModal(true, 'video', [row.mediaURL], row.title, row.description, row._id))\n                                }}>\n                                    <span className='align-middle ml-50'>View</span>\n                                </DropdownItem>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={async (e) => {\n                                                  dispatch(showLoadingScreen(true))\n                                                  let response;\n                                                  try {\n                                                      response = await axios.post(`/resource/video/${row.videoId}/detail`)\n                                                  } catch (e) {\n                                                      dispatch(showLoadingScreen(false))\n\n                                                      toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                                                          transition: Slide,\n                                                          hideProgressBar: true,\n                                                          autoClose: 2000\n                                                      })\n                                                  }\n\n                                                  dispatch(showLoadingScreen(false))\n\n                                                  setEditingRow(response.data.videoDetails)\n                                                  dispatch(showAddMediaModal())\n                                              }}>\n                                    <span className='align-middle ml-50'>Edit</span>\n                                </DropdownItem>\n                                <DropdownItem tag='a' href='#' className='w-100' onClick={async (e) => {\n                                    dispatch(showLoadingScreen(true))\n                                    let response;\n                                    try {\n                                        response = await axios.post(`/resource/video/${row.videoId}/detail`)\n                                    } catch (e) {\n                                        dispatch(showLoadingScreen(false))\n\n                                        toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                                            transition: Slide,\n                                            hideProgressBar: true,\n                                            autoClose: 2000\n                                        })\n                                    }\n\n                                    dispatch(showLoadingScreen(false))\n\n                                    setEditingRow(response.data.videoDetails)\n                                    dispatch(showAddMediaModal())\n                                }}>\n                                    <span className='align-middle ml-50' style={{color: '#8840E5'}}>Upload</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Trash size={15} style={{cursor: 'pointer'}} onClick={(e) => {\n                            e.preventDefault()\n                            deleteMediaList([row._id])\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    useEffect(async () => {\n        loadRecentInfo()\n        loadData()\n    }, [pageNumber, pageSize, sort])\n\n    const loadRecentInfo = async () => {\n        let response = undefined\n        try {\n            response = await axios.post('/resource/video/getRecentlyVideosAndTotoalInfo')\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        if (response && response.data.success) {\n            setRecentVideo(response.data.videos)\n            setVideoCnt([response.data.totalVideoStoreCount, response.data.totalViews, response.data.removedCount])\n        }\n    }\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/resource/video/getAllVideos', {pageNumber, pageSize, searchStr, sort})\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        if (response && response.data.success) {\n            setTotalPages(response.data.videos.totalPages)\n            setMediaList(response.data.videos.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteMediaList = async (ids) => {\n        await MySwal.fire({\n            title: 'Oh No, Delete',\n            text: \"Do you want to delete this content?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Delete',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(async function (result) {\n            if (result.value) {\n                dispatch(showLoadingScreen(true))\n                try {\n                    const res = await axios.post(`/resource/videoStore/delete`, {ids})\n                    dispatch(showLoadingScreen(false))\n                    if (res.data.success) {\n                        await MySwal.fire({\n                            title: 'Good job!',\n                            text: 'You deleted video successfully!',\n                            icon: 'success',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                        loadData()\n                    } else {\n                        MySwal.fire({\n                            title: 'Error!',\n                            text: 'Something went wrong!',\n                            icon: 'error',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                    }\n                } catch (e) {\n                    dispatch(showLoadingScreen(false))\n                    toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                        transition: Slide,\n                        hideProgressBar: true,\n                        autoClose: 2000\n                    })\n                }\n                setSelectedList([])\n            }\n        })\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Fragment>\n            <div>\n                <div className=\"d-flex justify-content-between mb-2\">\n                    <span className=\"video-head-text\">Recently Added</span>\n                    <div className=\"d-flex\">\n                        <span className=\"video-head-text\">All Videos</span>\n                        <span className=\"video-head-all-cnt\">{videoCnt[0]}\n                            <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                                 fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M16.086 6.99982L6.136 16.9498C5.95384 17.1384 5.85305 17.391 5.85533 17.6532C5.8576 17.9154 5.96277 18.1662 6.14818 18.3516C6.33359 18.537 6.5844 18.6422 6.8466 18.6445C7.1088 18.6468 7.3614 18.546 7.55 18.3638L17.5 8.41382L17.5 13.9998C17.5 14.265 17.6054 14.5194 17.7929 14.7069C17.9804 14.8945 18.2348 14.9998 18.5 14.9998C18.7652 14.9998 19.0196 14.8945 19.2071 14.7069C19.3946 14.5194 19.5 14.265 19.5 13.9998L19.5 5.99982C19.5 5.7346 19.3946 5.48025 19.2071 5.29271C19.0196 5.10518 18.7652 4.99982 18.5 4.99982L10.5 4.99982C10.2348 4.99982 9.98043 5.10518 9.79289 5.29271C9.60536 5.48025 9.5 5.7346 9.5 5.99982C9.5 6.26504 9.60536 6.51939 9.79289 6.70693C9.98043 6.89446 10.2348 6.99982 10.5 6.99982L16.086 6.99982Z\"\n                                fill=\"#00AB5F\"/>\n                            </svg>\n                        </span>\n                        <span className=\"video-head-text\">Removed</span>\n                        <span className=\"video-head-removed-cnt\">{videoCnt[1]}\n                            <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                                 fill=\"none\"\n                                 xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M8.914 17.0002L18.864 7.05018C19.0462 6.86158 19.147 6.60898 19.1447 6.34678C19.1424 6.08458 19.0372 5.83377 18.8518 5.64836C18.6664 5.46295 18.4156 5.35778 18.1534 5.35551C17.8912 5.35323 17.6386 5.45402 17.45 5.63618L7.5 15.5862V10.0002C7.5 9.73496 7.39464 9.48061 7.20711 9.29307C7.01957 9.10554 6.76522 9.00018 6.5 9.00018C6.23478 9.00018 5.98043 9.10554 5.79289 9.29307C5.60536 9.48061 5.5 9.73496 5.5 10.0002V18.0002C5.5 18.2654 5.60536 18.5198 5.79289 18.7073C5.98043 18.8948 6.23478 19.0002 6.5 19.0002H14.5C14.7652 19.0002 15.0196 18.8948 15.2071 18.7073C15.3946 18.5198 15.5 18.2654 15.5 18.0002C15.5 17.735 15.3946 17.4806 15.2071 17.2931C15.0196 17.1055 14.7652 17.0002 14.5 17.0002H8.914Z\"\n                                    fill=\"#FC7753\"/>\n                            </svg>\n                        </span>\n                        <span className=\"video-head-text\">Views</span>\n                        <span className=\"video-head-views-cnt\">{videoCnt[2]}\n                            <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                                 fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M12.5 4C15.287 4 17.763 5.257 19.526 6.813C20.411 7.594 21.14 8.471 21.654 9.344C22.159 10.201 22.5 11.13 22.5 12C22.5 12.87 22.16 13.799 21.654 14.656C21.14 15.529 20.411 16.406 19.526 17.187C17.763 18.743 15.286 20 12.5 20C9.713 20 7.237 18.743 5.474 17.187C4.589 16.406 3.86 15.529 3.346 14.656C2.84 13.799 2.5 12.87 2.5 12C2.5 11.13 2.84 10.201 3.346 9.344C3.86 8.471 4.589 7.594 5.474 6.813C7.237 5.257 9.714 4 12.5 4ZM12.5 6C10.316 6 8.292 6.993 6.798 8.312C6.054 8.968 5.466 9.685 5.069 10.359C4.663 11.049 4.5 11.62 4.5 12C4.5 12.38 4.663 12.951 5.069 13.641C5.466 14.315 6.054 15.031 6.798 15.688C8.292 17.007 10.316 18 12.5 18C14.684 18 16.708 17.007 18.202 15.688C18.946 15.031 19.534 14.315 19.931 13.641C20.337 12.951 20.5 12.38 20.5 12C20.5 11.62 20.337 11.049 19.931 10.359C19.534 9.685 18.946 8.969 18.202 8.312C16.708 6.993 14.684 6 12.5 6ZM12.5 9C12.588 9 12.675 9.004 12.761 9.011C12.5439 9.39185 12.4579 9.8335 12.5163 10.268C12.5747 10.7025 12.7743 11.1057 13.0843 11.4157C13.3943 11.7257 13.7975 11.9253 14.232 11.9837C14.6665 12.0421 15.1081 11.9561 15.489 11.739C15.5416 12.3412 15.411 12.9452 15.1145 13.4719C14.8179 13.9986 14.3692 14.4234 13.827 14.6907C13.2849 14.958 12.6746 15.0553 12.0762 14.9699C11.4778 14.8844 10.9192 14.6202 10.4736 14.2118C10.0279 13.8034 9.71603 13.27 9.57876 12.6813C9.44149 12.0926 9.48524 11.4762 9.70429 10.9128C9.92334 10.3495 10.3075 9.8654 10.8063 9.52407C11.3052 9.18274 11.8955 9.00008 12.5 9Z\"\n                                    fill=\"#8840E6\"/>\n                            </svg>\n                        </span>\n                    </div>\n                    <Button className='ml-2' color='primary' onClick={() => dispatch(showAddMediaModal())}>\n                        <PlusCircle size={15}/>\n                        <span className='align-middle ml-50'>Add Video</span>\n                    </Button>\n                </div>\n\n                <div class=\"d-flex mb-1\" style={{overflowX: 'auto'}}>\n                    {recentVideo.map((item, idx) => <div class=\"mr-2\"><MediaCard media={item}/></div>)}\n                </div>\n            </div>\n            <Card>\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteMediaList(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={pageNumber + 1}\n                    paginationComponent={CustomPagination}\n                    data={mediaList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n\n            <AddMedia type=\"video\" media={editingRow} onChange={() => {\n                loadData();\n                loadRecentInfo()\n            }}/>\n        </Fragment>\n    )\n}\n\nexport default Video","import {showMediaPlayModal} from '@store/actions/media'\r\nimport './MediaCard.css'\r\nimport Avatar from \"../../../@core/components/avatar\";\r\nimport {secondsToHMS} from \"../../../utility/Utils\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst MediaCard = ({type = \"video\", media = undefined}) => {\r\n    const store = useSelector(state => state.media)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div style={{width: '250px', backgroundColor: 'white', padding: '8px', borderRadius: '10px'}}>\r\n            {media?.thumbnail && <img style={{width: '100%', height: '150px', borderRadius: '10px'}}\r\n                                      src={`${process.env.REACT_APP_3BUCKET_URL}${media?.thumbnail}?version=${Math.floor(Math.random() * 50000) + 1}`}/>}\r\n            <p className=\"media-card-title mt-1\">{media?.title}</p>\r\n            <p className=\"media-card-des\">{media?.description ?? 'No description'}</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    {type === 'video' &&\r\n                        <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                                  d=\"M13.333 2.5C13.6694 2.49989 13.9934 2.62694 14.24 2.85566C14.4867 3.08439 14.6378 3.3979 14.663 3.73333L14.6663 3.83333V13.1667C14.6664 13.5031 14.5394 13.827 14.3107 14.0737C14.082 14.3204 13.7684 14.4714 13.433 14.4967L13.333 14.5H2.66634C2.32996 14.5001 2.00596 14.3731 1.75931 14.1443C1.51265 13.9156 1.36157 13.6021 1.33634 13.2667L1.33301 13.1667V3.83333C1.3329 3.49695 1.45995 3.17296 1.68867 2.9263C1.9174 2.67965 2.2309 2.52856 2.56634 2.50333L2.66634 2.5H13.333ZM13.333 3.83333H2.66634V13.1667H13.333V3.83333ZM6.89301 5.592L7.23834 5.74533L7.46367 5.852L7.72167 5.97867L8.00834 6.124L8.32167 6.29067L8.65967 6.47733L8.83701 6.57867L9.18234 6.782L9.49834 6.97667L9.78501 7.15867L10.0383 7.32733L10.3583 7.54733L10.601 7.72267L10.6643 7.76933C10.7672 7.84589 10.8508 7.94544 10.9084 8.06003C10.9659 8.17463 10.9959 8.30109 10.9959 8.42933C10.9959 8.55758 10.9659 8.68404 10.9084 8.79864C10.8508 8.91323 10.7672 9.01278 10.6643 9.08933L10.449 9.246L10.1557 9.45133L9.91834 9.61067L9.64834 9.786L9.34634 9.97467L9.01367 10.1747L8.65767 10.3807L8.31834 10.5687L8.00434 10.7353L7.71767 10.882L7.46034 11.0073L7.04567 11.1993L6.89234 11.266C6.77462 11.3167 6.64668 11.3392 6.51872 11.3318C6.39075 11.3243 6.26631 11.287 6.15531 11.2229C6.04432 11.1588 5.94984 11.0696 5.87941 10.9625C5.80898 10.8554 5.76456 10.7333 5.74967 10.606L5.71101 10.2293L5.68967 9.98L5.66167 9.53733L5.64634 9.19867L5.63634 8.82867C5.63515 8.76334 5.63426 8.698 5.63367 8.63267L5.63234 8.42933C5.63234 8.29133 5.63367 8.158 5.63634 8.02933L5.64634 7.65933L5.66167 7.32133L5.67968 7.01667L5.69967 6.74933L5.74967 6.25333C5.76447 6.12588 5.80885 6.00364 5.87927 5.89639C5.94969 5.78913 6.04421 5.69981 6.15528 5.63557C6.26634 5.57132 6.39089 5.53393 6.51898 5.52636C6.64707 5.5188 6.77515 5.54127 6.89301 5.592ZM7.30034 7.25933L7.00968 7.114L6.99034 7.43867L6.97567 7.806L6.96701 8.21267L6.96567 8.42933L6.96701 8.646L6.97567 9.052L6.98234 9.24067L6.99967 9.58733L7.00968 9.744L7.29901 9.59867L7.62367 9.428L7.98034 9.232L8.16967 9.124L8.53701 8.90667L8.86634 8.70267L9.15701 8.516L9.28767 8.42933L9.01634 8.24933L8.70567 8.05333C8.5289 7.9439 8.35043 7.83722 8.17034 7.73333L7.98167 7.626L7.62567 7.43L7.30034 7.25933Z\"\r\n                                  fill=\"#CACACC\"/>\r\n                        </svg>}\r\n\r\n                    {type === 'podcast' &&\r\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M8 2C8.16329 2.00002 8.32089 2.05997 8.44291 2.16848C8.56494 2.27698 8.6429 2.4265 8.662 2.58867L8.66667 2.66667V13.3333C8.66648 13.5033 8.60141 13.6667 8.48477 13.7902C8.36812 13.9138 8.2087 13.9882 8.03907 13.9981C7.86944 14.0081 7.70241 13.9529 7.57211 13.8438C7.44181 13.7348 7.35807 13.5801 7.338 13.4113L7.33333 13.3333V2.66667C7.33333 2.48986 7.40357 2.32029 7.5286 2.19526C7.65362 2.07024 7.82319 2 8 2ZM5.33333 4C5.51014 4 5.67971 4.07024 5.80474 4.19526C5.92976 4.32029 6 4.48986 6 4.66667V11.3333C6 11.5101 5.92976 11.6797 5.80474 11.8047C5.67971 11.9298 5.51014 12 5.33333 12C5.15652 12 4.98695 11.9298 4.86193 11.8047C4.7369 11.6797 4.66667 11.5101 4.66667 11.3333V4.66667C4.66667 4.48986 4.7369 4.32029 4.86193 4.19526C4.98695 4.07024 5.15652 4 5.33333 4ZM10.6667 4C10.8435 4 11.013 4.07024 11.1381 4.19526C11.2631 4.32029 11.3333 4.48986 11.3333 4.66667V11.3333C11.3333 11.5101 11.2631 11.6797 11.1381 11.8047C11.013 11.9298 10.8435 12 10.6667 12C10.4899 12 10.3203 11.9298 10.1953 11.8047C10.0702 11.6797 10 11.5101 10 11.3333V4.66667C10 4.48986 10.0702 4.32029 10.1953 4.19526C10.3203 4.07024 10.4899 4 10.6667 4ZM2.66667 6C2.84348 6 3.01305 6.07024 3.13807 6.19526C3.2631 6.32029 3.33333 6.48986 3.33333 6.66667V9.33333C3.33333 9.51014 3.2631 9.67971 3.13807 9.80474C3.01305 9.92976 2.84348 10 2.66667 10C2.48986 10 2.32029 9.92976 2.19526 9.80474C2.07024 9.67971 2 9.51014 2 9.33333V6.66667C2 6.48986 2.07024 6.32029 2.19526 6.19526C2.32029 6.07024 2.48986 6 2.66667 6ZM13.3333 6C13.4966 6.00002 13.6542 6.05997 13.7762 6.16848C13.8983 6.27698 13.9762 6.4265 13.9953 6.58867L14 6.66667V9.33333C13.9998 9.50325 13.9347 9.66669 13.8181 9.79025C13.7015 9.9138 13.542 9.98816 13.3724 9.99811C13.2028 10.0081 13.0357 9.95288 12.9054 9.84382C12.7751 9.73476 12.6914 9.58006 12.6713 9.41133L12.6667 9.33333V6.66667C12.6667 6.48986 12.7369 6.32029 12.8619 6.19526C12.987 6.07024 13.1565 6 13.3333 6Z\"\r\n                                fill=\"#CACACC\"/>\r\n                        </svg>}\r\n\r\n                    <span className=\"media-card-category\"\r\n                          style={{marginLeft: 5}}>{type === 'video' ? 'Videos' : 'Podcasts'}: </span>\r\n                    <span className=\"media-card-cnt\">{type === 'video' ? media?.videoCount : media?.podcastCount}</span>\r\n                </div>\r\n                <span className=\"media-card-time\">{secondsToHMS(media?.duration)}</span>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between mt-2\">\r\n                <div className=\"d-flex\">\r\n                    <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${media?.avatar}`} imgHeight='40'\r\n                            imgWidth='40'\r\n                            status='online'/>\r\n                    <span className=\"media-card-username\">{media?.creatorFirstName}</span>\r\n                </div>\r\n                <span className=\"media-card-level\">{media?.educationLevel?.level}</span>\r\n                {((!store.isPlaying && store.mediaId === media?._id) || store.mediaId === '' || (store.mediaId !== media?._id)) &&\r\n                    <span className=\"media-card-play\">\r\n                    <svg\r\n                        onClick={() => dispatch(showMediaPlayModal(true, 'video', type === 'video' ? media.videos : media.podcasts, media.title, media.description, media._id))}\r\n                        width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                        fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M7.57541 5.70772C7.36906 7.79698 7.26827 9.89531 7.27341 11.9947C7.27341 14.7957 7.44341 16.9917 7.57541 18.2837C9.48757 17.4157 11.3549 16.4521 13.1704 15.3967C14.9916 14.3524 16.7591 13.2173 18.4664 11.9957C16.7594 10.773 14.9922 9.63661 13.1714 8.59072C11.3554 7.5369 9.48771 6.57469 7.57541 5.70772ZM5.67041 4.75972C5.69722 4.53257 5.7767 4.31481 5.90253 4.1238C6.02835 3.93278 6.19704 3.77379 6.39516 3.65948C6.59328 3.54518 6.81536 3.47871 7.0437 3.46539C7.27204 3.45206 7.50034 3.49224 7.71041 3.58272C8.77241 4.03672 11.1524 5.11572 14.1724 6.85872C17.1934 8.60272 19.3184 10.1257 20.2414 10.8167C21.0294 11.4077 21.0314 12.5797 20.2424 13.1727C19.3284 13.8597 17.2294 15.3627 14.1724 17.1287C11.1124 18.8947 8.76041 19.9607 7.70841 20.4087C6.80241 20.7957 5.78841 20.2087 5.67041 19.2317C5.53241 18.0897 5.27441 15.4967 5.27441 11.9947C5.27441 8.49472 5.53141 5.90272 5.67041 4.75972Z\"\r\n                          fill=\"white\"/>\r\n                    </svg>\r\n                    </span>}\r\n                {store.isPlaying && media._id === store.mediaId && <span className=\"media-card-play\">\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M8 4C8.24493 4.00003 8.48134 4.08996 8.66437 4.25272C8.84741 4.41547 8.96434 4.63975 8.993 4.883L9 5V19C8.99972 19.2549 8.90212 19.5 8.72715 19.6854C8.55218 19.8707 8.31305 19.9822 8.05861 19.9972C7.80416 20.0121 7.55362 19.9293 7.35817 19.7657C7.16271 19.6021 7.0371 19.3701 7.007 19.117L7 19V5C7 4.73478 7.10536 4.48043 7.29289 4.29289C7.48043 4.10536 7.73478 4 8 4ZM16 4C16.2449 4.00003 16.4813 4.08996 16.6644 4.25272C16.8474 4.41547 16.9643 4.63975 16.993 4.883L17 5V19C16.9997 19.2549 16.9021 19.5 16.7272 19.6854C16.5522 19.8707 16.313 19.9822 16.0586 19.9972C15.8042 20.0121 15.5536 19.9293 15.3582 19.7657C15.1627 19.6021 15.0371 19.3701 15.007 19.117L15 19V5C15 4.73478 15.1054 4.48043 15.2929 4.29289C15.4804 4.10536 15.7348 4 16 4Z\"\r\n                            fill=\"white\"/>\r\n                    </svg>\r\n                </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MediaCard"],"sourceRoot":""}