{"version":3,"sources":["roducate/components/BadgeComp/BadgeComp.js","roducate/components/RewardComp/RewardComp.js","roducate/pages/badges_rewards/BadgeReward.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js"],"names":["moment","require","BootstrapCheckbox","forwardRef","_ref","ref","onClick","rest","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","_objectSpread","type","BadgeComp","dispatch","useDispatch","store","useSelector","state","modal","_useState","useState","_useState2","_slicedToArray","dataList","setDataList","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","searchStr","setSearchStr","_useState7","sortBy","sortOrder","_useState8","sort","setSort","_useState9","_useState10","pageSize","setPageSize","_useState11","_useState12","pageNumber","setPageNumber","_useState13","_useState14","totalPages","setTotalPages","_useState15","undefined","_useState16","setEditingRow","columns","name","sortable","width","cell","row","style","height","src","process","coverImage","selector","minWidth","_isActive$row$isPubli","_isActive$false","isDeleted","isActive","isPublished","icon","color","createdAt","format","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","size","DropdownMenu","right","DropdownItem","href","e","preventDefault","deleteData","_id","Trash","Edit","find","item","showAddSubjectModal","MySwal","withReactContent","Swal","Avatar","viewBox","fill","xmlns","d","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isVisibleAddSubject","loadData","stop","_ref3","_callee2","response","_context2","showLoadingScreen","axios","post","sent","t0","toast","error","message","transition","Slide","hideProgressBar","autoClose","data","success","badges","apply","arguments","_ref4","_callee3","ids","res","_context3","fire","title","text","timer","position","customClass","confirmButton","buttonsStyling","_x","Card","CardHeader","UncontrolledButtonDropdown","caret","outline","Row","Col","md","sm","Label","for","Input","id","value","onChange","parseInt","target","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","map","onSort","RewardComp","editingRow","img","concat","creatorAvatar","imgHeight","imgWidth","status","creatorName","showAddSyllabus","isVisibleAddSyllabus","Fragment","AddSyllabus","syllabus","onUpdate","BadgeReward","active","setActive","toggle","tab","Nav","tabs","justifyContent","NavItem","NavLink","TabContent","activeTab","TabPane","tabId","TabContext","React","createContext","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","navbar","card","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","this","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","Component","getClasses","Consumer"],"mappings":"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","file":"static/js/33.c1f02f83.chunk.js","sourcesContent":["// ** React Imports\nimport React, {forwardRef, useEffect, useState} from 'react'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, Edit, MoreVertical, Trash} from 'react-feather'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport Avatar from \"../../../@core/components/avatar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport './BadgeComp.css'\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst BadgeComp = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    // data table model\n    const [dataList, setDataList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    // data table columns\n    const columns = [\n        {\n            name: 'Badge',\n            sortable: false,\n            width: '70px',\n            cell: row => {\n                return (\n                    <img style={{height: '40px'}} src={process.env.REACT_APP_3BUCKET_URL + row.coverImage}/>\n                )\n            }\n        },\n        {\n            name: 'Title',\n            selector: 'title',\n            sortable: false,\n            minWidth: '60px'\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            width: '100px',\n            cell: row => {\n                return (\n                    <div>\n                        {!row.isDeleted && <div>\n                            {isActive[row.isPublished]?.icon}&nbsp;&nbsp;&nbsp;\n                            {row.isPublished && <span style={{color: \"#00AB5F\"}}>Live</span>}\n                            {!row.isPublished && <span style={{color: \"#FC7753\"}}>Draft</span>}\n                        </div>}\n                        {row.isDeleted && <div>\n                            {isActive[false]?.icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FC7753\"}}>Deleted</span>}\n                        </div>}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Description',\n            selector: 'description',\n            sortable: false,\n            minWidth: '400px'\n        },\n        {\n            name: 'Date & Time',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return <div>{moment(row.createdAt).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={(e) => {\n                                                  e.preventDefault()\n                                                  deleteData([row._id])\n                                              }}>\n                                    <Trash size={15}/>\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Edit size={15} onClick={() => {\n                            setEditingRow(dataList.find(item => item._id === row._id))\n                            dispatch(showAddSubjectModal())\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const MySwal = withReactContent(Swal)\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#00C56D\"/>\n            </svg>\n            }/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#fc7753\"/>\n            </svg>\n            }/>\n        }\n    }\n\n    useEffect(async () => {\n        if (!store.isVisibleAddSubject)\n            loadData()\n    }, [store.isVisibleAddSubject, pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/badgereward/badge/getAll', {\n                pageNumber,\n                pageSize,\n                searchStr,\n                sort\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n\n        if (response && response.data.success) {\n            setTotalPages(response.data.badges.totalPages)\n            setDataList(response.data.badges.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteData = async (ids) => {\n        dispatch(showLoadingScreen(true))\n        try {\n            const res = await axios.post('/badgereward/badge/deleteBadge', {ids})\n            dispatch(showLoadingScreen(false))\n            if (res.data.success) {\n                await MySwal.fire({\n                    title: 'Good job!',\n                    text: 'You deleted badge successfully!',\n                    icon: 'success',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n\n                loadData()\n            } else {\n                MySwal.fire({\n                    title: 'Error!',\n                    text: 'Something went wrong!',\n                    icon: 'error',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n            }\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        setSelectedList([])\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Card>\n            <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                <UncontrolledButtonDropdown>\n                    <DropdownToggle color='secondary' caret outline>\n                        <span className='align-middle ml-50'>Action</span>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem className='w-100' onClick={() => deleteData(selectedList)}>\n                            <span className='align-middle ml-50'>Delete</span>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledButtonDropdown>\n            </CardHeader>\n            <Row className='justify-content-end mx-0'>\n                <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                    <div className='d-flex align-items-center'>\n                        <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                        <Input\n                            className='dataTable-select'\n                            type='select'\n                            id='sort-select'\n                            value={pageSize}\n                            onChange={e => setPageSize(parseInt(e.target.value))}\n                        >\n                            <option value={5}>5</option>\n                            <option value={10}>10</option>\n                            <option value={25}>25</option>\n                            <option value={50}>50</option>\n                            <option value={75}>75</option>\n                            <option value={100}>100</option>\n                        </Input>\n                    </div>\n                </Col>\n\n                <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                    <Label className='mr-1' for='search-input'>\n                        Search\n                    </Label>\n                    <Input\n                        className='dataTable-filter mb-50'\n                        type='text'\n                        bsSize='sm'\n                        id='search-input'\n                        value={searchStr}\n                        onChange={(e) => setSearchStr(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                    />\n                </Col>\n            </Row>\n            <DataTable\n                noHeader\n                pagination\n                paginationServer\n                selectableRows\n                columns={columns}\n                paginationPerPage={7}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10}/>}\n                paginationDefaultPage={1}\n                paginationComponent={CustomPagination}\n                data={dataList}\n                selectableRowsComponent={BootstrapCheckbox}\n                onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n            />\n        </Card>\n    )\n}\n\nexport default BadgeComp","// ** React Imports\nimport React, {forwardRef, Fragment, useEffect, useState} from 'react'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, Edit, MoreVertical, Trash} from 'react-feather'\nimport {\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport Avatar from \"../../../@core/components/avatar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport {showAddSyllabus} from \"../../../redux/actions/modal\";\nimport {AddSyllabus} from \"../../modals/AddSyllabus/AddSyllabus\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst RewardComp = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    // data table model\n    const [dataList, setDataList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    // data table columns\n    const columns = [\n        {\n            name: 'Syllabus',\n            selector: 'title',\n            sortable: false,\n            minWidth: '400px'\n        },\n        {\n            name: 'Users count',\n            selector: 'usersCount',\n            sortable: true,\n            minWidth: '100px'\n        },\n        {\n            name: 'Last updated',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '200px',\n            cell: row => {\n                return <div>{moment(row.createdAt).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Created by',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${row.creatorAvatar}`}\n                                imgHeight='30' imgWidth='30' status='online'/>&nbsp;\n                        <span>{row.creatorName}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return (\n                    <div>\n                        {!row.isDeleted && <div>\n                            {isActive[row.isPublished].icon}&nbsp;&nbsp;&nbsp;\n                            {row.isPublished && <span style={{color: \"#00AB5F\"}}>Live</span>}\n                            {!row.isPublished && <span style={{color: \"#FC7753\"}}>No Live</span>}\n                        </div>}\n                        {row.isDeleted && <div>\n                            {isActive[false].icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FC7753\"}}>Deleted</span>}\n                        </div>}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={(e) => {\n                                                  e.preventDefault()\n                                                  deleteData([row._id])\n                                              }}>\n                                    <Trash size={15}/>\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Edit size={15} onClick={() => {\n                            setEditingRow(dataList.find(item => item._id === row._id))\n                            dispatch(showAddSyllabus(true))\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const MySwal = withReactContent(Swal)\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#00C56D\"/>\n            </svg>\n            }/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#fc7753\"/>\n            </svg>\n            }/>\n        }\n    }\n\n    useEffect(async () => {\n        if (!store.isVisibleAddSyllabus)\n            loadData()\n    }, [store.isVisibleAddSyllabus, pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/library/syllabus/allWithPg', {\n                pageNumber,\n                pageSize,\n                searchStr,\n                sort\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n\n        if (response) {\n            setTotalPages(response.data.totalPages)\n            setDataList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteData = async (ids) => {\n        dispatch(showLoadingScreen(true))\n        try {\n            const res = await axios.post('/library/syllabus/deleteSyllabus', {ids})\n            dispatch(showLoadingScreen(false))\n            if (res.data.success) {\n                await MySwal.fire({\n                    title: 'Good job!',\n                    text: 'You deleted syllabus successfully!',\n                    icon: 'success',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n\n                loadData()\n            } else {\n                MySwal.fire({\n                    title: 'Error!',\n                    text: 'Something went wrong!',\n                    icon: 'error',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n            }\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        setSelectedList([])\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Fragment>\n            <Card>\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteData(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={1}\n                    paginationComponent={CustomPagination}\n                    data={dataList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n\n            <AddSyllabus syllabus={editingRow} onUpdate={loadData}/>\n        </Fragment>\n    )\n}\n\nexport default RewardComp","// ** React Imports\nimport React, {Fragment, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport './BadgeReward.css'\nimport BadgeComp from \"../../components/BadgeComp/BadgeComp\";\nimport RewardComp from \"../../components/RewardComp/RewardComp\";\n\nconst BadgeReward = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    const [active, setActive] = useState('badge')\n\n    const toggle = tab => {\n        if (active !== tab) {\n            setActive(tab)\n        }\n    }\n\n    return (\n        <Fragment>\n            <Nav tabs style={{height: 'fit-content', justifyContent: 'center'}}>\n                <NavItem>\n                    <NavLink\n                        active={active === 'badge'}\n                        onClick={() => {\n                            toggle('badge')\n                        }}\n                    >\n                        Badges\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        active={active === 'reward'}\n                        onClick={() => {\n                            toggle('reward')\n                        }}\n                    >\n                        Rewards\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        active={active === 'referral'}\n                        onClick={() => {\n                            toggle('referral')\n                        }}\n                    >\n                        Referrals\n                    </NavLink>\n                </NavItem>\n            </Nav>\n\n            <TabContent className='py-50' activeTab={active}>\n                <TabPane tabId='badge'>\n                    <BadgeComp/>\n                </TabPane>\n                <TabPane tabId='reward'>\n                    <RewardComp/>\n                </TabPane>\n                <TabPane tabId='referral'>\n                    <BadgeComp/>\n                </TabPane>\n            </TabContent>\n\n        </Fragment>\n    )\n}\n\nexport default BadgeReward","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"sourceRoot":""}