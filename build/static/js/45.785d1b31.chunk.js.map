{"version":3,"sources":["roducate/pages/community/Community.js"],"names":["moment","require","BootstrapCheckbox","forwardRef","_ref","ref","onClick","rest","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","_objectSpread","type","Community","dispatch","useDispatch","store","useSelector","state","modal","_useState","useState","_useState2","_slicedToArray","dataList","setDataList","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","searchStr","setSearchStr","_useState7","sortBy","sortOrder","_useState8","sort","setSort","_useState9","_useState10","pageSize","setPageSize","_useState11","_useState12","pageNumber","setPageNumber","_useState13","_useState14","totalPages","setTotalPages","_useState15","undefined","_useState16","editingRow","setEditingRow","columns","name","sortable","minWidth","cell","row","style","height","src","process","coverImages","selector","_row$createdBy","_row$createdBy2","Avatar","img","concat","createdBy","avatar","imgHeight","imgWidth","status","firstName","updatedAt","format","_isActive$row$isPubli","_isActive$false","isDeleted","isActive","isPublished","icon","color","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","size","DropdownMenu","right","DropdownItem","href","e","preventDefault","deleteData","_id","Trash","Edit","find","item","showAddSubjectModal","MySwal","withReactContent","Swal","width","viewBox","fill","xmlns","d","_useState17","_useState18","overViewData","setOverViewData","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","isVisibleAddSubject","loadData","axios","get","sent","data","stop","_ref3","_callee2","_context2","showLoadingScreen","post","t0","toast","error","message","transition","Slide","hideProgressBar","autoClose","success","posts","apply","arguments","_ref4","_callee3","ids","res","_context3","fire","title","text","timer","position","customClass","confirmButton","buttonsStyling","_x","allPostCount","publishedCount","draftCount","totalViewsCount","Button","showAddCommunity","PlusCircle","Card","CardHeader","UncontrolledButtonDropdown","caret","outline","Row","Col","md","sm","Label","for","Input","id","value","onChange","parseInt","target","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","map","onSort","AddCommunity","community","onUpdate"],"mappings":"6jBAkCMA,EAASC,EAAQ,KAGjBC,EAAoBC,sBAAW,SAAAC,EAAqBC,GAAG,IAAtBC,EAAOF,EAAPE,QAAYC,EAAIC,YAAAJ,EAAAK,GAAA,OACnDC,eAAA,OAAKC,UAAU,iCAAgCC,SAAA,CAC3CC,cAAA,QAAAC,YAAA,CAAOC,KAAK,WAAWJ,UAAU,uBAAuBN,IAAKA,GAASE,IACtEM,cAAA,SAAOF,UAAU,uBAAuBL,QAASA,MAC/C,IAmXKU,UAhXG,WACd,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK,IAG9CC,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAGpCG,EAAkCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAwBb,mBAAS,CAACc,OAAQ,MAAOC,UAAW,QAAOC,EAAAd,YAAAW,EAAA,GAA5DI,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAgCnB,mBAAS,GAAEoB,GAAAlB,YAAAiB,EAAA,GAApCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,GAAoCvB,mBAAS,GAAEwB,GAAAtB,YAAAqB,GAAA,GAAxCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,GAAoC3B,mBAAS,GAAE4B,GAAA1B,YAAAyB,GAAA,GAAxCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAGhCG,GAAoC/B,wBAASgC,GAAUC,GAAA/B,YAAA6B,GAAA,GAAhDG,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAG1BG,GAAU,CACZ,CACIC,KAAM,MACNC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAC,GACF,OACIpD,cAAA,OAAKqD,MAAO,CAACC,OAAQ,QAASC,IAAKC,2DAAoCJ,EAAIK,YAAY,IAE/F,GAEJ,CACIT,KAAM,aACNU,SAAU,QACVT,UAAU,EACVC,SAAU,SAEd,CACIF,KAAM,OACNU,SAAU,OACVT,UAAU,EACVC,SAAU,SAEd,CACIF,KAAM,YACNC,UAAU,EACVC,SAAU,OACVC,KAAM,SAAAC,GAAQ,IAADO,EAAAC,EACT,OACI/D,eAAA,OAAKC,UAAU,mDAAkDC,SAAA,CAC7DC,cAAC6D,IAAM,CAACC,IAAG,GAAAC,OAAKP,4DAAiCO,OAAgB,QAAhBJ,EAAGP,EAAIY,iBAAS,IAAAL,OAAA,EAAbA,EAAeM,QAC3DC,UAAU,KAAKC,SAAS,KAAKC,OAAO,WAAU,OACtDpE,cAAA,QAAAD,SAAoB,QAApB6D,EAAOR,EAAIY,iBAAS,IAAAJ,OAAA,EAAbA,EAAeS,cAGlC,GAEJ,CACIrB,KAAM,cACNU,SAAU,YACVT,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAC,GACF,OAAOpD,cAAA,OAAAD,SAAMZ,EAAOiE,EAAIkB,WAAWC,OAAO,uBAC9C,GAEJ,CACIvB,KAAM,SACNC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAC,GAAQ,IAADoB,EAAAC,EACT,OACI5E,eAAA,OAAAE,SAAA,EACMqD,EAAIsB,WAAa7E,eAAA,OAAAE,SAAA,CACW,QADXyE,EACdG,GAASvB,EAAIwB,oBAAY,IAAAJ,OAAA,EAAzBA,EAA2BK,KAAK,eAChCzB,EAAIwB,aAAe5E,cAAA,QAAMqD,MAAO,CAACyB,MAAO,WAAW/E,SAAC,UACnDqD,EAAIwB,aAAe5E,cAAA,QAAMqD,MAAO,CAACyB,MAAO,WAAW/E,SAAC,aAEzDqD,EAAIsB,WAAa7E,eAAA,OAAAE,SAAA,CACE,QADF0E,EACbE,IAAS,UAAM,IAAAF,OAAA,EAAfA,EAAiBI,KAAK,eACtB7E,cAAA,QAAMqD,MAAO,CAACyB,MAAO,WAAW/E,SAAC,iBAIlD,GAEJ,CACIiD,KAAM,UACN+B,eAAe,EACf5B,KAAM,SAAAC,GACF,OACIvD,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBF,eAACmF,IAAoB,CAAAjF,SAAA,CACjBC,cAACiF,IAAc,CAACnF,UAAU,OAAOoF,IAAI,OAAMnF,SACvCC,cAACmF,IAAY,CAACC,KAAM,OAExBpF,cAACqF,IAAY,CAACC,OAAK,EAAAvF,SACfF,eAAC0F,IAAY,CAACL,IAAI,IAAIM,KAAK,IAAI1F,UAAU,QAC3BL,QAAS,SAACgG,GACNA,EAAEC,iBACFC,GAAW,CAACvC,EAAIwC,KACpB,EAAE7F,SAAA,CACZC,cAAC6F,IAAK,CAACT,KAAM,KACbpF,cAAA,QAAMF,UAAU,qBAAoBC,SAAC,mBAIjDC,cAAC8F,IAAI,CAACV,KAAM,GAAI3F,QAAS,WACrBqD,GAAchC,EAASiF,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,MAAQxC,EAAIwC,GAAG,KACxDxF,EAAS6F,sBACb,MAGZ,IAIFC,GAASC,IAAiBC,KAE1BzB,GAAW,CACb,KAAQ,CACJE,KAAM7E,cAAC6D,IAAM,CAACiB,MAAM,gBAAgBD,KAAM7E,cAAA,OAAKqG,MAAM,KAAK/C,OAAO,KAAKgD,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BAA4BzG,SAC7EC,cAAA,QACIyG,EAAE,uuQACFF,KAAK,iBAIjB,MAAS,CACL1B,KAAM7E,cAAC6D,IAAM,CAACiB,MAAM,eAAeD,KAAM7E,cAAA,OAAKqG,MAAM,KAAK/C,OAAO,KAAKgD,QAAQ,YAAYC,KAAK,OAChDC,MAAM,6BAA4BzG,SAC5EC,cAAA,QACIyG,EAAE,uuQACFF,KAAK,kBAMrBG,GAAwC/F,wBAASgC,GAAUgE,GAAA9F,YAAA6F,GAAA,GAApDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAEpCG,oBAASC,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEQ,OADTjH,EAAMkH,qBACPC,KAAUJ,EAAAE,KAAA,EAESG,IAAMC,IAAI,uBAAsB,QAAjDR,EAAQE,EAAAO,OACAf,GAAgBM,EAASU,MAAK,wBAAAR,EAAAS,OAAA,GAAAZ,EAAA,KAE7C,CAAC5G,EAAMkH,oBAAqBpF,GAAYJ,GAAUJ,IAErD,IAAM6F,GAAQ,eAAAM,EAAAhB,YAAAC,cAAAC,MAAG,SAAAe,IAAA,IAAAb,EAAA,OAAAH,cAAAI,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAEW,OADxBnH,EAAS8H,aAAkB,IACvBf,OAAWxE,EAASsF,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAEHG,IAAMS,KAAK,8BAA+B,CACvD/F,cACAJ,YACAV,YACAM,SACF,OALFuF,EAAQc,EAAAL,KAAAK,EAAAV,KAAA,gBAAAU,EAAAX,KAAA,EAAAW,EAAAG,GAAAH,EAAA,SAOR7H,EAAS8H,aAAkB,IAE3BG,IAAMC,MAAMtI,cAAA,QAAMqD,MAAO,CAACyB,MAAO,SAAS/E,SAAEkI,EAAAG,GAAEG,UAAiB,CAC3DC,WAAYC,IACZC,iBAAiB,EACjBC,UAAW,MACb,QAGFxB,GAAYA,EAASU,KAAKe,UAC1BnG,GAAc0E,EAASU,KAAKgB,MAAMrG,YAClCzB,EAAYoG,EAASU,KAAKgB,MAAMhB,OAGpCzH,EAAS8H,aAAkB,IAAO,yBAAAD,EAAAH,OAAA,GAAAE,EAAA,kBACrC,kBA1Ba,OAAAD,EAAAe,MAAA,KAAAC,UAAA,KA4BRpD,GAAU,eAAAqD,EAAAjC,YAAAC,cAAAC,MAAG,SAAAgC,EAAOC,GAAG,IAAAC,EAAA,OAAAnC,cAAAI,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OACQ,OAAjCnH,EAAS8H,aAAkB,IAAMkB,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAEXG,IAAMS,KAAK,mCAAoC,CAACe,QAAK,OACrC,GAD5BC,EAAGC,EAAAxB,KACTxH,EAAS8H,aAAkB,KACvBiB,EAAItB,KAAKe,QAAQ,CAADQ,EAAA7B,KAAA,gBAAA6B,EAAA7B,KAAA,EACVrB,GAAOmD,KAAK,CACdC,MAAO,YACPC,KAAM,qCACN1E,KAAM,UACN2E,MAAO,IACPC,SAAU,SACVC,YAAa,CACTC,cAAe,mBAEnBC,gBAAgB,IAClB,OAEFnC,KAAU2B,EAAA7B,KAAA,iBAEVrB,GAAOmD,KAAK,CACRC,MAAO,SACPC,KAAM,wBACN1E,KAAM,QACN2E,MAAO,IACPC,SAAU,SACVC,YAAa,CACTC,cAAe,mBAEnBC,gBAAgB,IAClB,QAAAR,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAhB,GAAAgB,EAAA,SAGNhJ,EAAS8H,aAAkB,IAC3BG,IAAMC,MAAMtI,cAAA,QAAMqD,MAAO,CAACyB,MAAO,SAAS/E,SAAEqJ,EAAAhB,GAAEG,UAAiB,CAC3DC,WAAYC,IACZC,iBAAiB,EACjBC,UAAW,MACb,QAENxH,EAAgB,IAAG,yBAAAiI,EAAAtB,OAAA,GAAAmB,EAAA,mBACtB,gBAzCeY,GAAA,OAAAb,EAAAF,MAAA,KAAAC,UAAA,KAuEhB,OACIlJ,eAAA,OAAAE,SAAA,CACIF,eAAA,OAAKC,UAAU,0CAAyCC,SAAA,CACpDF,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBC,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,cAClCF,eAAA,QAAMC,UAAU,qBAAoBC,SAAA,CAAc,OAAZ6G,SAAY,IAAZA,QAAY,EAAZA,GAAckD,aAChD9J,cAAA,OAAKqG,MAAM,KAAK/C,OAAO,KAAKgD,QAAQ,YAC/BC,KAAK,OAAOC,MAAM,6BAA4BzG,SAC/CC,cAAA,QACIyG,EAAE,otBACFF,KAAK,iBAGjBvG,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,cAClCF,eAAA,QAAMC,UAAU,qBAAoBC,SAAA,CAAc,OAAZ6G,SAAY,IAAZA,QAAY,EAAZA,GAAcmD,eAChD/J,cAAA,OAAKqG,MAAM,KAAK/C,OAAO,KAAKgD,QAAQ,YAC/BC,KAAK,OAAOC,MAAM,6BAA4BzG,SAC/CC,cAAA,QACIyG,EAAE,otBACFF,KAAK,iBAGjBvG,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,UAClCF,eAAA,QAAMC,UAAU,yBAAwBC,SAAA,CAAc,OAAZ6G,SAAY,IAAZA,QAAY,EAAZA,GAAcoD,WACpDhK,cAAA,OAAKqG,MAAM,KAAK/C,OAAO,KAAKgD,QAAQ,YAC/BC,KAAK,OACLC,MAAM,6BAA4BzG,SAC/BC,cAAA,QACIyG,EAAE,gsBACFF,KAAK,iBAGrBvG,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,UAClCF,eAAA,QAAMC,UAAU,uBAAsBC,SAAA,CAAc,OAAZ6G,SAAY,IAAZA,QAAY,EAAZA,GAAcqD,gBAClDjK,cAAA,OAAKqG,MAAM,KAAK/C,OAAO,KAAKgD,QAAQ,YAC/BC,KAAK,OAAOC,MAAM,6BAA4BzG,SAC3CC,cAAA,QACIyG,EAAE,m7CACFF,KAAK,oBAIzB1G,eAACqK,IAAM,CAACpK,UAAU,OAAOgF,MAAM,UAAUrF,QAAS,kBAAMW,EAAS+J,cAAmB,EAACpK,SAAA,CACjFC,cAACoK,IAAU,CAAChF,KAAM,KAClBpF,cAAA,QAAMF,UAAU,qBAAoBC,SAAC,wBAG7CF,eAACwK,IAAI,CAACvK,UAAU,MAAKC,SAAA,CACjBC,cAACsK,IAAU,CAACxK,UAAU,gFAA+EC,SACjGF,eAAC0K,IAA0B,CAAAxK,SAAA,CACvBC,cAACiF,IAAc,CAACH,MAAM,YAAY0F,OAAK,EAACC,SAAO,EAAA1K,SAC3CC,cAAA,QAAMF,UAAU,qBAAoBC,SAAC,aAEzCC,cAACqF,IAAY,CAACC,OAAK,EAAAvF,SACfC,cAACuF,IAAY,CAACzF,UAAU,QAAQL,QAAS,kBAAMkG,GAAWzE,EAAa,EAACnB,SACpEC,cAAA,QAAMF,UAAU,qBAAoBC,SAAC,oBAKrDF,eAAC6K,IAAG,CAAC5K,UAAU,2BAA0BC,SAAA,CACrCC,cAAC2K,IAAG,CAAC7K,UAAU,kDAAkD8K,GAAG,IAAIC,GAAG,KAAI9K,SAC3EF,eAAA,OAAKC,UAAU,4BAA2BC,SAAA,CACtCC,cAAC8K,IAAK,CAACC,IAAI,cAAcjL,UAAU,OAAMC,SAAC,oBAC1CF,eAACmL,IAAK,CACFlL,UAAU,mBACVI,KAAK,SACL+K,GAAG,cACHC,MAAOlJ,GACPmJ,SAAU,SAAA1F,GAAC,OAAIxD,GAAYmJ,SAAS3F,EAAE4F,OAAOH,OAAO,EAACnL,SAAA,CAErDC,cAAA,UAAQkL,MAAO,EAAEnL,SAAC,MAClBC,cAAA,UAAQkL,MAAO,GAAGnL,SAAC,OACnBC,cAAA,UAAQkL,MAAO,GAAGnL,SAAC,OACnBC,cAAA,UAAQkL,MAAO,GAAGnL,SAAC,OACnBC,cAAA,UAAQkL,MAAO,GAAGnL,SAAC,OACnBC,cAAA,UAAQkL,MAAO,IAAInL,SAAC,gBAKhCF,eAAC8K,IAAG,CAAC7K,UAAU,qDAAqD8K,GAAG,IAAIC,GAAG,KAAI9K,SAAA,CAC9EC,cAAC8K,IAAK,CAAChL,UAAU,OAAOiL,IAAI,eAAchL,SAAC,WAG3CC,cAACgL,IAAK,CACFlL,UAAU,yBACVI,KAAK,OACLoL,OAAO,KACPL,GAAG,eACHC,MAAO5J,EACP6J,SAAU,SAAC1F,GAAC,OAAKlE,EAAakE,EAAE4F,OAAOH,MAAM,EAC7CK,WAAY,SAAC9F,GAAC,MAAe,UAAVA,EAAE+F,KAAmB/D,IAAU,UAI9DzH,cAACyL,IAAS,CACNC,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChBC,gBAAc,EACd9I,QAASA,GACT+I,kBAAmB,EACnBhM,UAAU,kBACViM,SAAU/L,cAACgM,IAAW,CAAC5G,KAAM,KAC7B6G,sBAAuB,EACvBC,oBArIS,WACrB,OACIlM,cAACmM,IAAa,CACVC,cAAe,GACfC,UAAW,GACXC,WAAW,MACXC,UAAW/J,IAAc,EACzBgK,qBAAsB,EACtBC,mBAAoB,EACpBC,gBAAgB,SAChBC,UAA0B,IAAfvK,GAAmB,EAAIA,GAAa,EAC/CwK,aAAc,SAAAC,GAAI,OAAIxK,KAAgBwK,EAAKC,SAAS,EACpDC,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,eAAe,YACfC,mBAAmB,YACnBC,mBACI,8FAIhB,EA6GgB1F,KAAM/G,EACN0M,wBAAyBnO,EACzBoO,qBAAsB,SAAChI,GAAC,OAAKtE,EAAgBsE,EAAEiI,aAAaC,KAAI,SAAA3H,GAAI,OAAIA,EAAKJ,GAAG,IAAE,EAClFgI,OAAQ,SAACnI,EAAG/D,GAAS,OAAKG,EAAQ,CAACJ,OAAQgE,EAAE/B,SAAUhC,aAAW,OAI1E1B,cAAC6N,IAAY,CAACC,UAAWjL,GAAYkL,SAAUtG,OAG3D,C","file":"static/js/45.785d1b31.chunk.js","sourcesContent":["// ** React Imports\nimport React, {forwardRef, useEffect, useState} from 'react'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, Edit, MoreVertical, PlusCircle, Trash} from 'react-feather'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport Avatar from \"../../../@core/components/avatar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport {showAddCommunity} from \"../../../redux/actions/modal\";\nimport {AddCommunity} from \"../../modals/AddCommunityContent/AddCommunity\";\nimport './Comunity.css'\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst Community = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    // data table model\n    const [dataList, setDataList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    // data table columns\n    const columns = [\n        {\n            name: 'IMG',\n            sortable: false,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <img style={{height: '40px'}} src={process.env.REACT_APP_3BUCKET_URL + row.coverImages[0]}/>\n                )\n            }\n        },\n        {\n            name: 'Post title',\n            selector: 'title',\n            sortable: false,\n            minWidth: '200px'\n        },\n        {\n            name: 'Link',\n            selector: 'link',\n            sortable: false,\n            minWidth: '200px'\n        },\n        {\n            name: 'Posted by',\n            sortable: true,\n            minWidth: '50px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${row.createdBy?.avatar}`}\n                                imgHeight='30' imgWidth='30' status='online'/>&nbsp;\n                        <span>{row.createdBy?.firstName}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Date & Time',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return <div>{moment(row.updatedAt).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return (\n                    <div>\n                        {!row.isDeleted && <div>\n                            {isActive[row.isPublished]?.icon}&nbsp;&nbsp;&nbsp;\n                            {row.isPublished && <span style={{color: \"#00AB5F\"}}>Live</span>}\n                            {!row.isPublished && <span style={{color: \"#FC7753\"}}>Draft</span>}\n                        </div>}\n                        {row.isDeleted && <div>\n                            {isActive[false]?.icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FC7753\"}}>Deleted</span>}\n                        </div>}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={(e) => {\n                                                  e.preventDefault()\n                                                  deleteData([row._id])\n                                              }}>\n                                    <Trash size={15}/>\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Edit size={15} onClick={() => {\n                            setEditingRow(dataList.find(item => item._id === row._id))\n                            dispatch(showAddSubjectModal())\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const MySwal = withReactContent(Swal)\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#00C56D\"/>\n            </svg>\n            }/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#fc7753\"/>\n            </svg>\n            }/>\n        }\n    }\n\n    const [overViewData, setOverViewData] = useState(undefined)\n\n    useEffect(async () => {\n        if (!store.isVisibleAddSubject)\n            loadData()\n\n        const response = await axios.get('/community/overview')\n        if (response) setOverViewData(response.data)\n\n    }, [store.isVisibleAddSubject, pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/community/post/getAllPosts', {\n                pageNumber,\n                pageSize,\n                searchStr,\n                sort\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n\n        if (response && response.data.success) {\n            setTotalPages(response.data.posts.totalPages)\n            setDataList(response.data.posts.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteData = async (ids) => {\n        dispatch(showLoadingScreen(true))\n        try {\n            const res = await axios.post('/library/syllabus/deleteSyllabus', {ids})\n            dispatch(showLoadingScreen(false))\n            if (res.data.success) {\n                await MySwal.fire({\n                    title: 'Good job!',\n                    text: 'You deleted syllabus successfully!',\n                    icon: 'success',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n\n                loadData()\n            } else {\n                MySwal.fire({\n                    title: 'Error!',\n                    text: 'Something went wrong!',\n                    icon: 'error',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n            }\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        setSelectedList([])\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <div>\n            <div className=\"row d-flex justify-content-between mb-2\">\n                <div className=\"d-flex\">\n                    <span className=\"video-head-text\">All Posts</span>\n                    <span className=\"video-head-all-cnt\">{overViewData?.allPostCount}\n                        <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                             fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M16.086 6.99982L6.136 16.9498C5.95384 17.1384 5.85305 17.391 5.85533 17.6532C5.8576 17.9154 5.96277 18.1662 6.14818 18.3516C6.33359 18.537 6.5844 18.6422 6.8466 18.6445C7.1088 18.6468 7.3614 18.546 7.55 18.3638L17.5 8.41382L17.5 13.9998C17.5 14.265 17.6054 14.5194 17.7929 14.7069C17.9804 14.8945 18.2348 14.9998 18.5 14.9998C18.7652 14.9998 19.0196 14.8945 19.2071 14.7069C19.3946 14.5194 19.5 14.265 19.5 13.9998L19.5 5.99982C19.5 5.7346 19.3946 5.48025 19.2071 5.29271C19.0196 5.10518 18.7652 4.99982 18.5 4.99982L10.5 4.99982C10.2348 4.99982 9.98043 5.10518 9.79289 5.29271C9.60536 5.48025 9.5 5.7346 9.5 5.99982C9.5 6.26504 9.60536 6.51939 9.79289 6.70693C9.98043 6.89446 10.2348 6.99982 10.5 6.99982L16.086 6.99982Z\"\n                                fill=\"#00AB5F\"/>\n                            </svg>\n                        </span>\n                    <span className=\"video-head-text\">Published</span>\n                    <span className=\"video-head-all-cnt\">{overViewData?.publishedCount}\n                        <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                             fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M16.086 6.99982L6.136 16.9498C5.95384 17.1384 5.85305 17.391 5.85533 17.6532C5.8576 17.9154 5.96277 18.1662 6.14818 18.3516C6.33359 18.537 6.5844 18.6422 6.8466 18.6445C7.1088 18.6468 7.3614 18.546 7.55 18.3638L17.5 8.41382L17.5 13.9998C17.5 14.265 17.6054 14.5194 17.7929 14.7069C17.9804 14.8945 18.2348 14.9998 18.5 14.9998C18.7652 14.9998 19.0196 14.8945 19.2071 14.7069C19.3946 14.5194 19.5 14.265 19.5 13.9998L19.5 5.99982C19.5 5.7346 19.3946 5.48025 19.2071 5.29271C19.0196 5.10518 18.7652 4.99982 18.5 4.99982L10.5 4.99982C10.2348 4.99982 9.98043 5.10518 9.79289 5.29271C9.60536 5.48025 9.5 5.7346 9.5 5.99982C9.5 6.26504 9.60536 6.51939 9.79289 6.70693C9.98043 6.89446 10.2348 6.99982 10.5 6.99982L16.086 6.99982Z\"\n                                fill=\"#00AB5F\"/>\n                            </svg>\n                        </span>\n                    <span className=\"video-head-text\">Draft</span>\n                    <span className=\"video-head-removed-cnt\">{overViewData?.draftCount}\n                        <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                             fill=\"none\"\n                             xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M8.914 17.0002L18.864 7.05018C19.0462 6.86158 19.147 6.60898 19.1447 6.34678C19.1424 6.08458 19.0372 5.83377 18.8518 5.64836C18.6664 5.46295 18.4156 5.35778 18.1534 5.35551C17.8912 5.35323 17.6386 5.45402 17.45 5.63618L7.5 15.5862V10.0002C7.5 9.73496 7.39464 9.48061 7.20711 9.29307C7.01957 9.10554 6.76522 9.00018 6.5 9.00018C6.23478 9.00018 5.98043 9.10554 5.79289 9.29307C5.60536 9.48061 5.5 9.73496 5.5 10.0002V18.0002C5.5 18.2654 5.60536 18.5198 5.79289 18.7073C5.98043 18.8948 6.23478 19.0002 6.5 19.0002H14.5C14.7652 19.0002 15.0196 18.8948 15.2071 18.7073C15.3946 18.5198 15.5 18.2654 15.5 18.0002C15.5 17.735 15.3946 17.4806 15.2071 17.2931C15.0196 17.1055 14.7652 17.0002 14.5 17.0002H8.914Z\"\n                                    fill=\"#FC7753\"/>\n                            </svg>\n                        </span>\n                    <span className=\"video-head-text\">Views</span>\n                    <span className=\"video-head-views-cnt\">{overViewData?.totalViewsCount}\n                        <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"\n                             fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M12.5 4C15.287 4 17.763 5.257 19.526 6.813C20.411 7.594 21.14 8.471 21.654 9.344C22.159 10.201 22.5 11.13 22.5 12C22.5 12.87 22.16 13.799 21.654 14.656C21.14 15.529 20.411 16.406 19.526 17.187C17.763 18.743 15.286 20 12.5 20C9.713 20 7.237 18.743 5.474 17.187C4.589 16.406 3.86 15.529 3.346 14.656C2.84 13.799 2.5 12.87 2.5 12C2.5 11.13 2.84 10.201 3.346 9.344C3.86 8.471 4.589 7.594 5.474 6.813C7.237 5.257 9.714 4 12.5 4ZM12.5 6C10.316 6 8.292 6.993 6.798 8.312C6.054 8.968 5.466 9.685 5.069 10.359C4.663 11.049 4.5 11.62 4.5 12C4.5 12.38 4.663 12.951 5.069 13.641C5.466 14.315 6.054 15.031 6.798 15.688C8.292 17.007 10.316 18 12.5 18C14.684 18 16.708 17.007 18.202 15.688C18.946 15.031 19.534 14.315 19.931 13.641C20.337 12.951 20.5 12.38 20.5 12C20.5 11.62 20.337 11.049 19.931 10.359C19.534 9.685 18.946 8.969 18.202 8.312C16.708 6.993 14.684 6 12.5 6ZM12.5 9C12.588 9 12.675 9.004 12.761 9.011C12.5439 9.39185 12.4579 9.8335 12.5163 10.268C12.5747 10.7025 12.7743 11.1057 13.0843 11.4157C13.3943 11.7257 13.7975 11.9253 14.232 11.9837C14.6665 12.0421 15.1081 11.9561 15.489 11.739C15.5416 12.3412 15.411 12.9452 15.1145 13.4719C14.8179 13.9986 14.3692 14.4234 13.827 14.6907C13.2849 14.958 12.6746 15.0553 12.0762 14.9699C11.4778 14.8844 10.9192 14.6202 10.4736 14.2118C10.0279 13.8034 9.71603 13.27 9.57876 12.6813C9.44149 12.0926 9.48524 11.4762 9.70429 10.9128C9.92334 10.3495 10.3075 9.8654 10.8063 9.52407C11.3052 9.18274 11.8955 9.00008 12.5 9Z\"\n                                    fill=\"#8840E6\"/>\n                            </svg>\n                        </span>\n                </div>\n                <Button className='ml-2' color='primary' onClick={() => dispatch(showAddCommunity())}>\n                    <PlusCircle size={15}/>\n                    <span className='align-middle ml-50'>Add Community</span>\n                </Button>\n            </div>\n            <Card className=\"row\">\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteData(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={1}\n                    paginationComponent={CustomPagination}\n                    data={dataList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n\n            <AddCommunity community={editingRow} onUpdate={loadData}/>\n        </div>\n    )\n}\n\nexport default Community"],"sourceRoot":""}