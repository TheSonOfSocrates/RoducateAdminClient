{"version":3,"sources":["roducate/modals/CreateMockExam/CreateMockExam.js","roducate/pages/mock_exam/MockExam.js","../../src/components/RefTrackerProvider.tsx","../../src/core/eventManager.ts","../../src/hooks/useRefTracker.ts","../../src/core/contextMenu.ts","../../src/hooks/useContextMenu.ts","../../src/components/menuController.ts","../../src/constants.ts","../../src/components/utils.ts","../../src/components/Menu.tsx","../../src/hooks/usePrevious.ts","../../src/components/Item.tsx","roducate/components/ResourceRecentCard/ResourceRecentCard.js"],"names":["CreateMockExam","_ref","task","_ref$inlineMode","onChange","inlineMode","_ref$qaInsertMode","qaInsertMode","onFinished","MySwal","withReactContent","Swal","store","useSelector","state","modal","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","subject","setSubject","_useState3","_useState4","examList","setExamList","_useState5","undefined","_useState6","selectedExam","setSelectedExam","_useState7","_useState8","examCode","setExamCode","_useState9","_useState10","examYear","setExamYear","_useState11","_useState12","instruction","setInstruction","_useState13","hours","minutes","seconds","_useState14","duration","setDuration","_useState15","_useState16","initialDuration","setInitialDuration","_useState17","index","isExpanding","_useState18","questions","setQuestions","useEffect","_task$questions","Math","floor","taskInstruction","map","item","questionTitle","questionType","optionStyle","sbsg","questionContent","options","correctAnswers","optionType","theoryCorrectAnswer","_id","subjectId","title","subjectTitle","educationLevel","educationLevelTitle","syllabus","syllabusTitle","getExamList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","post","sent","data","stop","apply","arguments","publish","_ref3","_callee2","_questions$","link","_context2","length","abrupt","fire","text","icon","timer","position","customClass","confirmButton","buttonsStyling","concat","examId","value","isTimed","filter","question","_question$sbsg$id","_question$sbsg","_question$questionCon","_question$questionCon2","_question$sbsg$id2","_question$sbsg2","_question$questionCon3","_question$questionCon4","_question$sbsg$id3","_question$sbsg3","_question$questionCon5","_question$questionCon6","_question$sbsg$id4","_question$sbsg4","_question$questionCon7","_question$questionCon8","_question$sbsg$id5","_question$sbsg5","answer","id","_objectSpread","split","t0","success","then","result","showCreateMockExam","_jsxs","Modal","toggle","isOpen","style","maxWidth","className","children","ModalBody","margin","_jsx","Button","color","onClick","_questions$2","Ripple","X","size","QuestionWrapper","onQuestionUpdated","newQuestion","_toConsumableArray","cursor","_questions","isCompleted","PlusCircle","SelectOutlinedWrapper","showSubjectSelectModal","text1","Select","theme","selectThemeColors","classNamePrefix","label","name","isClearable","placeholder","Input","type","e","target","DurationPicker","newDuration","maxHours","rows","SubjectSelectModal","onSelected","subjectItem","moment","require","BootstrapCheckbox","forwardRef","ref","rest","_objectWithoutProperties","_excluded","MockExam","recentData","setRecentData","mediaList","setMediaList","selectedList","setSelectedList","searchStr","setSearchStr","sortBy","sortOrder","sort","setSort","pageSize","setPageSize","pageNumber","setPageNumber","totalPages","setTotalPages","setEditingRow","columns","sortable","minWidth","cell","row","exam","selector","Avatar","img","process","createdBy","avatar","imgHeight","imgWidth","status","firstName","updatedAt","format","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","DropdownMenu","right","DropdownItem","href","_x","Trash","preventDefault","deleteMediaList","loadRecentInfo","loadData","_ref4","_callee3","response","_context3","showLoadingScreen","_ref5","_callee4","_context4","toast","error","message","transition","Slide","hideProgressBar","autoClose","_ref6","_callee6","ids","_context6","showCancelButton","confirmButtonText","cancelButton","_ref7","_callee5","_context5","_x3","_x2","Fragment","class","overflowX","paddingBottom","idx","ResourceRecentCard","des","topics","join","date","creatorName","creatorFirstName","creatorAvatar","level","onEdit","onDelete","onDuplicate","Card","CardHeader","UncontrolledButtonDropdown","caret","outline","Row","Col","md","sm","Label","for","parseInt","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","onSort","Context","createContext","useRefTrackerContext","useContext","RefTrackerProvider","props","React","createElement","Provider","refTracker","createEventManager","eventList","Map","on","event","handler","has","_eventList$get","get","add","set","Set","this","off","emit","args","NODE","currentEv","console","forEach","eventManager","useRefTracker","useRef","current","contextMenu","show","nativeEvent","hideAll","useContextMenu","params","createMenuController","focusedIndex","parentNode","isAtRoot","currentItems","menuList","forceCloseSubmenu","focusSelectedItem","node","focus","isFocused","moveDown","closeSubmenu","_menuList$get","isRoot","items","parentFocusedIndex","menuParentNode","classList","remove","clear","init","rootMenu","moveUp","openSubmenu","isSubmenu","submenuItems","Array","from","submenuRefTracker","values","currentNode","NOOP","isFn","v","isStr","cloneItems","Children","toArray","Boolean","cloneElement","getPredicateValue","predicate","payload","reducer","_extends","Menu","animation","_ref$animation","onHidden","_ref$onHidden","onShown","_ref$onShown","_objectWithoutPropertiesLoose","useReducer","x","y","visible","triggerEvent","propsFromTrigger","willLeave","_useReducer","setState","nodeRef","didMount","wasVisible","usePrevious","menuController","stopPropagation","pos","isTouchEvent","changedTouches","clientX","clientY","getMousePosition","setTimeout","hide","button","ctrlKey","exit","hasExitAnimation","_window","window","windowWidth","innerWidth","windowHeight","innerHeight","_nodeRef$current","menuWidth","offsetWidth","menuHeight","offsetHeight","_y","handleKeyboard","addEventListener","removeEventListener","cssClasses","cx","_cx3","_cx","_cx2","enter","computeAnimationClasses","menuStyle","left","top","opacity","Object","assign","onAnimationEnd","role","Item","_ref$onClick","disabled","_ref$disabled","hidden","_ref$hidden","handlerParams","isDisabled","onKeyDown","tabIndex","width","height","backgroundColor","padding","borderRadius","viewBox","fill","xmlns","d","minHeight","marginLeft"],"mappings":"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","file":"static/js/27.bf0399ac.chunk.js","sourcesContent":["import {Button, Input, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showCreateMockExam, showSubjectSelectModal} from '@store/actions/modal'\r\nimport {PlusCircle, X} from \"react-feather\";\r\nimport './CreateMockExam.css'\r\nimport {SelectOutlinedWrapper} from \"../../components/SelectOutlined/SelectOutlinedWrapper\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {SubjectSelectModal} from \"../SubjectSelectModal/SubjectSelectModal\";\r\nimport QuestionWrapper from \"../../components/QuestionWrapper/QuestionWrapper\";\r\nimport axios from \"../../../utility/axios\";\r\nimport DurationPicker from \"react-duration-picker\";\r\nimport Select from \"react-select\";\r\nimport {selectThemeColors} from '@utils'\r\n\r\nexport const CreateMockExam = ({\r\n                                   task,\r\n                                   onChange = undefined,\r\n                                   inlineMode = false,\r\n                                   qaInsertMode = false,\r\n                                   onFinished\r\n                               }) => {\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    // const [creators, setCreators] = useState([]);\r\n\r\n    const [subject, setSubject] = useState(null);\r\n    const [examList, setExamList] = useState([]);\r\n    const [selectedExam, setSelectedExam] = useState(undefined);\r\n    const [examCode, setExamCode] = useState(undefined);\r\n    const [examYear, setExamYear] = useState(undefined);\r\n\r\n    const [instruction, setInstruction] = useState('')\r\n    const [duration, setDuration] = useState({\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0\r\n    });\r\n    const [initialDuration, setInitialDuration] = useState({\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0\r\n    });\r\n\r\n    // questions\r\n    const [questions, setQuestions] = useState([{index: 0, isExpanding: true}])\r\n\r\n    useEffect(() => {\r\n        if (task) {\r\n            if (qaInsertMode) {\r\n                setQuestions(task?.questions ?? [{index: 0, isExpanding: true}])\r\n            } else {\r\n                setInitialDuration({\r\n                    hours: Math.floor(task.duration / 3600),\r\n                    minutes: Math.floor(task.duration % 3600 / 60),\r\n                    seconds: task.duration % 3600 % 60\r\n                })\r\n                setInstruction(task.taskInstruction)\r\n                setQuestions(task.questions.map((item, index) => ({\r\n                    index, isExpanding: false,\r\n                    questionTitle: item.questionTitle,\r\n                    questionType: item.questionType === 'theory' ? 'theory' : item.questionType + '-' + item.optionStyle,\r\n                    sbsg: item.sbsg,\r\n                    questionContent: {\r\n                        options: item.options,\r\n                        correctAnswers: item.correctAnswers,\r\n                        optionStyle: item.optionStyle,\r\n                        optionType: item.optionType,\r\n                        theoryCorrectAnswer: item.theoryCorrectAnswer,\r\n                    }\r\n                })))\r\n                setSubject({\r\n                    _id: task?.subjectId,\r\n                    title: task.subjectTitle,\r\n                    educationLevel: {\r\n                        _id: task.educationLevel,\r\n                        title: task.educationLevelTitle\r\n                    },\r\n                    syllabus: {\r\n                        _id: task.syllabus,\r\n                        title: task.syllabusTitle\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            setSubject(undefined)\r\n            setInstruction('')\r\n            setQuestions([{index: 0, isExpanding: true}])\r\n        }\r\n\r\n        getExamList()\r\n    }, [task])\r\n\r\n    const getExamList = async () => {\r\n        const res = await axios.post('/resource/exam/getAllExams')\r\n        if (res) {\r\n            setExamList(res.data)\r\n        }\r\n    }\r\n\r\n    const onDurationChange = (newDuration) => {\r\n        const {hours, minutes, seconds} = newDuration;\r\n        if (hours === duration.hours && minutes === duration.minutes && seconds === duration.seconds)\r\n            return\r\n\r\n        setDuration({hours, minutes, seconds});\r\n    };\r\n\r\n    const addMoreQuestionClicked = () => {\r\n        if (!questions[questions.length - 1]?.isCompleted) {\r\n            return MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Please complete current question.',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n\r\n        questions[questions.length - 1] = {...questions[questions.length - 1], isExpanding: false}\r\n        setQuestions([...questions, {index: questions.length, isExpanding: true}])\r\n    }\r\n\r\n    const publish = async () => {\r\n        if ((questions.length === 1 && !questions[0]?.questionContent) || !subject ||\r\n            ((duration.hours * 3600) + (duration.minutes * 60) + duration.seconds) === 0 ||\r\n            !selectedExam || !examCode || !examYear) {\r\n            return MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Please input correctly.',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n\r\n        let res;\r\n        try {\r\n            let link = '/resource/mockexam'\r\n            if (task)\r\n                link = `/resource/mockexam/${task._id}`\r\n\r\n            res = await axios.post(link, {\r\n                // creators,\r\n                examId: selectedExam.value,\r\n                examYear,\r\n                examCode,\r\n                subjectId: subject._id,\r\n                educationLevel: subject?.educationLevel._id,\r\n                taskInstruction: instruction,\r\n                duration: (duration.hours * 3600) + (duration.minutes * 60) + duration.seconds,\r\n                isTimed: true,\r\n                questions: questions.filter((item) => item !== null).map((question) => {\r\n                    switch (question.questionType) {\r\n                        case \"theory\":\r\n                            return {\r\n                                index: question.index,\r\n                                questionTitle: question.questionTitle,\r\n                                questionType: 'theory',\r\n                                theoryCorrectAnswer: question.questionContent.answer,\r\n                                sbsg: question?.sbsg?.id ?? ''\r\n                            }\r\n                        case \"drag-word\":\r\n                            return {\r\n                                index: question.index,\r\n                                questionTitle: question.questionTitle,\r\n                                questionType: 'drag',\r\n                                options: question?.questionContent?.options,\r\n                                correctAnswers: question?.questionContent?.correctAnswers,\r\n                                sbsg: question?.sbsg?.id ?? ''\r\n                            }\r\n                        case \"drag-image\":\r\n                            return {\r\n                                index: question.index,\r\n                                questionTitle: question.questionTitle,\r\n                                questionType: 'drag',\r\n                                options: question?.questionContent?.options.map((item) => ({\r\n                                    ...item,\r\n                                    title: item.title.split('/')[item.title.split('/').length - 1]\r\n                                })),\r\n                                correctAnswers: question?.questionContent?.correctAnswers,\r\n                                sbsg: question?.sbsg?.id ?? ''\r\n                            }\r\n                        case \"object-word\":\r\n                            return {\r\n                                index: question.index,\r\n                                questionTitle: question.questionTitle,\r\n                                questionType: 'object',\r\n                                optionType: question.questionContent.optionType,\r\n                                options: question?.questionContent?.options,\r\n                                correctAnswers: question?.questionContent?.correctAnswers,\r\n                                sbsg: question?.sbsg?.id ?? ''\r\n                            }\r\n                        case \"object-image\":\r\n                            return {\r\n                                index: question.index,\r\n                                questionTitle: question.questionTitle,\r\n                                questionType: 'object',\r\n                                optionType: question.questionContent.optionType,\r\n                                options: question?.questionContent?.options.map((item) => ({\r\n                                    ...item,\r\n                                    title: item.title.split('/')[item.title.split('/').length - 1]\r\n                                })),\r\n                                correctAnswers: question?.questionContent?.correctAnswers,\r\n                                sbsg: question?.sbsg?.id ?? ''\r\n                            }\r\n                    }\r\n                })\r\n            })\r\n        } catch (e) {\r\n            return MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Something went wrong',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n\r\n        if (res && res.data.success) {\r\n            // setCreators([]);\r\n\r\n            setSubject(undefined);\r\n            setInstruction('')\r\n            setDuration({\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0\r\n            });\r\n            setQuestions([{index: 0, isExpanding: true}])\r\n\r\n            MySwal.fire({\r\n                title: 'Good Job!',\r\n                text: `Mock exam ${task ? 'updated' : 'created'} successfully.`,\r\n                icon: 'success',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-info'\r\n                },\r\n                buttonsStyling: false\r\n            }).then(function (result) {\r\n                dispatch(showCreateMockExam())\r\n            })\r\n        } else {\r\n            return MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Something went wrong',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showCreateMockExam())}\r\n               isOpen={store.showCreateMockExam}\r\n               style={{maxWidth: qaInsertMode ? '60%' : '80%'}}\r\n               className=\"modal-dialog-centered\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showCreateMockExam())}>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    {/*{<AddCreators onCreatorChange={(creators) => setCreators(creators.map((item) => item._id))}/>}*/}\r\n                    <div style={{margin: 'auto'}} className=\"d-flex\">\r\n                        {!inlineMode && <Button className=\"mr-1\" color='gradient-primary ghost'>Save as Draft</Button>}\r\n                        {/*<Button className=\"mr-1\" color='gradient-primary'>Preview</Button>*/}\r\n                        {!inlineMode && <Button color='gradient-primary' onClick={publish}>Publish</Button>}\r\n\r\n                        {inlineMode && <Button className=\"mr-1\" color='gradient-primary ghost'\r\n                                               onClick={() => dispatch(showCreateMockExam())}>Cancel</Button>}\r\n                        {inlineMode && <Button color='gradient-primary' onClick={() => {\r\n                            if (((!qaInsertMode && (duration.hours * 3600) + (duration.minutes * 60) + duration.seconds) === 0) || (questions.length === 1 && !questions[0]?.questionContent)) {\r\n                                return MySwal.fire({\r\n                                    title: 'Error!',\r\n                                    text: 'Please input correctly.',\r\n                                    icon: 'error',\r\n                                    timer: 2000,\r\n                                    position: 'center',\r\n                                    customClass: {\r\n                                        confirmButton: 'btn btn-danger'\r\n                                    },\r\n                                    buttonsStyling: false\r\n                                })\r\n                            }\r\n                            onFinished(questions, duration, instruction);\r\n                            dispatch(showCreateMockExam())\r\n                        }}>Finish</Button>}\r\n                    </div>\r\n                    <Button.Ripple onClick={() => dispatch(showCreateMockExam())} className='btn-icon rounded-circle'\r\n                                   color='flat-danger'>\r\n                        <X size={16}/>\r\n                    </Button.Ripple>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className={qaInsertMode ? 'col-12' : 'col-8'}>\r\n                        {questions.map((item) => <QuestionWrapper question={item}\r\n                                                                  onQuestionUpdated={(newQuestion) => {\r\n                                                                      questions[newQuestion.index] = newQuestion;\r\n                                                                      setQuestions([...questions])\r\n                                                                  }}/>)}\r\n\r\n                        <div>\r\n                            <div className=\"mt-2\">\r\n                                <span style={{cursor: 'pointer'}}\r\n                                      onClick={addMoreQuestionClicked}\r\n                                      className=\"add-more-questions-btn\"><PlusCircle/>&nbsp;&nbsp;Add more Questions</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {!qaInsertMode && <div className=\"col-4\">\r\n                        <div className=\"mt-2\">\r\n                            {!inlineMode &&\r\n                                <SelectOutlinedWrapper onClick={() => dispatch(showSubjectSelectModal())} text=\"Subject\"\r\n                                                       text1={subject ? subject.title : ''}/>}\r\n                            {!inlineMode && <SelectOutlinedWrapper className=\"col-6\" text=\"Syllabus\"\r\n                                                                   text1={subject ? subject.syllabus.title : ''}/>}\r\n                            {!inlineMode && <SelectOutlinedWrapper className=\"col-6\"\r\n                                                                   text=\"Education Level & Class\"\r\n                                                                   text1={subject ? subject.educationLevel.title : ''}/>}\r\n\r\n                            <Select\r\n                                theme={selectThemeColors}\r\n                                className='react-select mt-1 mb-1'\r\n                                classNamePrefix='select'\r\n                                options={examList.map(item => ({value: item._id, label: item.name}))}\r\n                                isClearable={false}\r\n                                value={selectedExam}\r\n                                placeholder=\"Question Type\"\r\n                                onChange={(item) => {\r\n                                    setSelectedExam(item)\r\n                                }}\r\n                            />\r\n\r\n                            <Input type='text' value={examCode} placeholder='Exam Code'\r\n                                   onChange={(e) => setExamCode(e.target.value)}/>\r\n                            <Input type='number' className=\"mt-1\" value={examYear} placeholder='Exam Year'\r\n                                   onChange={(e) => setExamYear(e.target.value)}/>\r\n\r\n                            <div className=\"mt-1 mb-1\">\r\n                                <p>Duration:</p>\r\n                                <DurationPicker\r\n                                    onChange={onDurationChange}\r\n                                    initialDuration={initialDuration}\r\n                                    maxHours={100}\r\n                                />\r\n                            </div>\r\n\r\n                            <Input type='textarea' name='text' rows='2' value={instruction}\r\n                                   placeholder='Task Instruction (Optional)'\r\n                                   onChange={(e) => setInstruction(e.target.value)}/>\r\n\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </ModalBody>\r\n\r\n            <SubjectSelectModal title=\"Subject\" onSelected={(subjectItem) => {\r\n                setSubject(subjectItem)\r\n            }}/>\r\n        </Modal>\r\n    );\r\n};","// ** React Imports\nimport React, {forwardRef, Fragment, useEffect, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, MoreVertical, PlusCircle, Trash} from 'react-feather'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport './MockExam.css'\nimport Avatar from \"../../../@core/components/avatar\";\nimport ResourceRecentCard from \"../../components/ResourceRecentCard/ResourceRecentCard\";\nimport 'react-contexify/dist/ReactContexify.min.css'\nimport '@styles/react/libs/context-menu/context-menu.scss'\nimport {CreateMockExam} from \"../../modals/CreateMockExam/CreateMockExam\";\nimport {showCreateMockExam} from \"../../../redux/actions/modal\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst MockExam = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    const [recentData, setRecentData] = useState([])\n\n    // data table model\n    const [mediaList, setMediaList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    const columns = [\n        {\n            name: 'Exam type',\n            sortable: true,\n            minWidth: '50px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"datatable-first-column\">{row.exam.title}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Subject(s)',\n            selector: 'subjectTitle',\n            sortable: true,\n            minWidth: '300px',\n        },\n        {\n            name: 'Created by',\n            sortable: true,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${row.createdBy.avatar}`}\n                                imgHeight='30' imgWidth='30' status='online'/>&nbsp;\n                        <span>{row.createdBy.firstName}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Level',\n            selector: 'educationLevel',\n            sortable: true,\n            minWidth: '50px'\n        },\n        {\n            name: 'Last updated',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '200px',\n            cell: row => {\n                return <div>{moment(row.updatedAt).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={async (e) => {\n                                                  setEditingRow(row)\n                                                  dispatch(showCreateMockExam(true))\n                                              }}>\n                                    <span className='align-middle ml-50'>Edit</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Trash size={15} style={{cursor: 'pointer'}} onClick={(e) => {\n                            e.preventDefault()\n                            deleteMediaList([row._id])\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    useEffect(async () => {\n        loadRecentInfo()\n        loadData()\n    }, [pageNumber, pageSize, sort])\n\n    const loadRecentInfo = async () => {\n        let response = undefined\n        try {\n            response = await axios.post('/resource/mockexam/getAllME', {\n                pageNumber: 1,\n                pageSize: 5,\n                searchStr: ''\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n        }\n        if (response && response.data.success) {\n            setRecentData(response.data.data)\n        }\n    }\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/resource/mockexam/getAllME', {pageNumber, pageSize, searchStr, sort})\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        if (response) {\n            setTotalPages(response.data.totalPages)\n            setMediaList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteMediaList = async (ids) => {\n        await MySwal.fire({\n            title: 'Oh No, Delete',\n            text: \"Do you want to delete this content?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Delete',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(async function (result) {\n            if (result.value) {\n                dispatch(showLoadingScreen(true))\n                try {\n                    const res = await axios.post(`/resource/study/deleteStudyModules`, {ids})\n                    dispatch(showLoadingScreen(false))\n                    if (res.data.success) {\n                        await MySwal.fire({\n                            title: 'Good job!',\n                            text: 'You deleted study module successfully!',\n                            icon: 'success',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                        loadData()\n                    } else {\n                        MySwal.fire({\n                            title: 'Error!',\n                            text: 'Something went wrong!',\n                            icon: 'error',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                    }\n                } catch (e) {\n                    dispatch(showLoadingScreen(false))\n                    toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                        transition: Slide,\n                        hideProgressBar: true,\n                        autoClose: 2000\n                    })\n                }\n                setSelectedList([])\n            }\n        })\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Fragment>\n            <div>\n                <div className=\"d-flex justify-content-between mb-2\">\n                    <span className=\"video-head-text\">Recently Added</span>\n                    <Button className='ml-2' color='primary' onClick={() => dispatch(showCreateMockExam(true))}>\n                        <PlusCircle size={15}/>\n                        <span className='align-middle ml-50'>Create Exam</span>\n                    </Button>\n                </div>\n\n                <div class=\"mb-1\" style={{overflowX: 'auto', paddingBottom: 5}}>\n                    <div class=\"d-flex\">\n                        {recentData.map((item, idx) => <div class=\"mr-2\">\n                            <ResourceRecentCard\n                                _id={item._id}\n                                title={item.subjectTitle} des={item.topics.join(', ')}\n                                date={undefined}\n                                creatorName={item.creatorFirstName}\n                                creatorAvatar={item.creatorAvatar}\n                                level={item.educationLevel.title}\n                                onEdit={() => {\n                                    setEditingRow(item)\n                                    dispatch(showCreateMockExam(true))\n                                }}\n                                onDelete={() => {\n                                    deleteMediaList([item._id])\n                                }}\n                                onDuplicate={() => {\n                                    setEditingRow(item)\n                                    dispatch(showCreateMockExam(true))\n                                }}\n\n                            />\n                        </div>)}\n                    </div>\n                </div>\n            </div>\n            <Card>\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteMediaList(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={pageNumber + 1}\n                    paginationComponent={CustomPagination}\n                    data={mediaList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n\n            <CreateMockExam/>\n\n        </Fragment>\n    )\n}\n\nexport default MockExam","import React, { useContext, createContext } from 'react';\nimport { RefTracker } from '../hooks';\n\nconst Context = createContext({} as RefTracker);\n\n/**\n * Access parent ref tracker.\n */\nexport function useRefTrackerContext() {\n  return useContext(Context);\n}\n\nexport interface RefTrackerProviderProps {\n  refTracker: RefTracker;\n}\n\nexport const RefTrackerProvider: React.FC<RefTrackerProviderProps> = props => {\n  return (\n    <Context.Provider value={props.refTracker}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n","import { EVENT } from '../constants';\n\nexport type EventType = string | number | symbol;\nexport type Handler<T = any> = (args: T) => void;\n\nexport interface EventManager<E = EventType> {\n  on<T = any>(event: E, handler: Handler<T>): EventManager<E>;\n  off<T = any>(event: E, handler?: Handler<T>): EventManager<E>;\n  emit<T = any>(event: E, args?: T): EventManager<E>;\n}\n\nfunction createEventManager<E = EventType>(): EventManager<E> {\n  const eventList = new Map<E, Set<Handler>>();\n\n  return {\n    on<T = any>(event: E, handler: Handler<T>) {\n      //eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      eventList.has(event)\n        ? eventList.get(event)?.add(handler)\n        : eventList.set(event, new Set([handler]));\n      return this;\n    },\n    off<T = any>(event: E, handler?: Handler<T>) {\n      handler ? eventList.get(event)!.delete(handler) : eventList.delete(event);\n      return this;\n    },\n    emit<T = any>(event: E, args: T) {\n      if (process.env.NODE !== 'production') {\n        const currentEv = (event as unknown) as number;\n\n        if (!eventList.has(event) && currentEv !== EVENT.HIDE_ALL) {\n          console.error(\n            `It seems that the menu you are trying to display is not renderer or you have a menu id mismatch.`,\n            `You used the menu id: ${event}`\n          );\n        }\n      }\n      eventList.has(event) &&\n        eventList.get(event)!.forEach((handler: Handler<T>) => {\n          handler(args);\n        });\n      return this;\n    },\n  };\n}\n\nexport const eventManager = createEventManager();\n","import { useRef } from 'react';\n\nexport interface RefTrackerValue {\n  node: HTMLElement;\n  isSubmenu: boolean;\n  submenuRefTracker?: RefTracker;\n}\n\nexport type RefTracker = ReturnType<typeof useRefTracker>;\n\n/**\n * Used to store children refs\n */\nexport function useRefTracker() {\n  return useRef<Map<HTMLElement, RefTrackerValue>>(new Map()).current;\n}\n","import { eventManager } from './eventManager';\nimport { MenuId, TriggerEvent } from '../types';\nimport { SyntheticEvent } from 'react';\n\nimport { EVENT } from '../constants';\n\nexport interface ShowContextMenuParams {\n  id: MenuId;\n  event: TriggerEvent;\n  props?: any;\n  position?: {\n    x: number;\n    y: number;\n  } | null;\n}\n\nexport interface ContextMenu {\n  show: (params: ShowContextMenuParams) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props, position }) {\n    if (event.preventDefault) event.preventDefault();\n\n    eventManager.emit(EVENT.HIDE_ALL).emit(id, {\n      event: (event as SyntheticEvent).nativeEvent || event,\n      props,\n      position,\n    });\n  },\n  hideAll() {\n    eventManager.emit(EVENT.HIDE_ALL);\n  },\n};\n\nexport { contextMenu };\n","import { contextMenu } from '../core';\nimport { ContextMenuParams, TriggerEvent } from '../types';\n\nexport type UseContextMenuProps = Partial<\n  Pick<ContextMenuParams, 'id' | 'props'>\n>;\n\nexport function useContextMenu(props?: UseContextMenuProps) {\n  return {\n    show(event: TriggerEvent, params?: Omit<ContextMenuParams, 'event'>) {\n      if (process.env.NODE_ENV === 'development') {\n        if (!props?.id && !params?.id)\n          console.error(\n            \"You need to provide an id when initializing the hook `useContextMenu({ id: 'your id' })` or when you display the menu `show(e, { id: 'your id' })`. The later is used to override the one defined during initialization.\"\n          );\n      }\n      contextMenu.show({\n        id: (params?.id || props?.id) as string,\n        props: params?.props || props?.props,\n        event: event,\n        position: params?.position,\n      });\n    },\n    hideAll() {\n      contextMenu.hideAll();\n    },\n  };\n}\n","import { RefTrackerValue } from '../hooks';\nimport { STYLE } from '../constants';\n\ninterface Menu<T = RefTrackerValue> {\n  items: T[];\n  isRoot: boolean;\n  focusedIndex: number;\n  parentNode: HTMLElement;\n}\n\n/**\n * Used to control keyboard navigation\n */\nexport function createMenuController() {\n  const menuList = new Map<HTMLElement, Menu>();\n  let focusedIndex: number;\n  let parentNode: HTMLElement;\n  let isAtRoot: boolean;\n  let currentItems: RefTrackerValue[];\n  let forceCloseSubmenu = false;\n\n  function init(rootMenu: RefTrackerValue[]) {\n    currentItems = rootMenu;\n    focusedIndex = -1;\n    isAtRoot = true;\n  }\n\n  function focusSelectedItem() {\n    currentItems[focusedIndex].node.focus();\n  }\n\n  function isSubmenuFocused() {\n    return focusedIndex >= 0 && currentItems[focusedIndex].isSubmenu;\n  }\n\n  function getSubmenuItems() {\n    return Array.from(currentItems[focusedIndex].submenuRefTracker!.values());\n  }\n\n  function isFocused() {\n    if (focusedIndex === -1) {\n      // focus first item\n      moveDown();\n      return false;\n    }\n\n    return true;\n  }\n\n  function moveDown() {\n    if (focusedIndex + 1 < currentItems.length) {\n      focusedIndex++;\n    } else if (focusedIndex + 1 === currentItems.length) {\n      focusedIndex = 0;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function moveUp() {\n    if (focusedIndex === -1 || focusedIndex === 0) {\n      focusedIndex = currentItems.length - 1;\n    } else if (focusedIndex - 1 < currentItems.length) {\n      focusedIndex--;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function openSubmenu() {\n    if (isFocused() && isSubmenuFocused()) {\n      const submenuItems = getSubmenuItems();\n      const currentNode = currentItems[focusedIndex].node;\n\n      menuList.set(currentNode, {\n        isRoot: isAtRoot,\n        focusedIndex,\n        parentNode: parentNode || currentNode,\n        items: currentItems,\n      });\n\n      currentNode.classList.add(STYLE.submenuOpen);\n      parentNode = currentNode;\n\n      if (submenuItems.length > 0) {\n        focusedIndex = 0;\n        currentItems = submenuItems;\n      } else {\n        forceCloseSubmenu = true;\n      }\n\n      isAtRoot = false;\n\n      focusSelectedItem();\n      return true;\n    }\n    return false;\n  }\n\n  function closeSubmenu() {\n    if (isFocused() && !isAtRoot) {\n      const {\n        isRoot,\n        items,\n        focusedIndex: parentFocusedIndex,\n        parentNode: menuParentNode,\n      } = menuList.get(parentNode)!;\n\n      parentNode.classList.remove(STYLE.submenuOpen);\n\n      currentItems = items;\n      parentNode = menuParentNode;\n\n      if (isRoot) {\n        isAtRoot = true;\n        menuList.clear();\n      }\n      if (!forceCloseSubmenu) {\n        focusedIndex = parentFocusedIndex;\n        focusSelectedItem();\n      }\n    }\n  }\n\n  return {\n    init,\n    moveDown,\n    moveUp,\n    openSubmenu,\n    closeSubmenu,\n  };\n}\n","/*\n * css classes mapping\n * */\nexport const enum STYLE {\n  menu = 'react-contexify',\n  submenu = 'react-contexify react-contexify__submenu',\n  submenuArrow = 'react-contexify__submenu-arrow',\n  submenuOpen = 'react-contexify__submenu--is-open',\n  separator = 'react-contexify__separator',\n  item = 'react-contexify__item',\n  itemDisabled = 'react-contexify__item--disabled',\n  itemContent = 'react-contexify__item__content',\n  theme = 'react-contexify__theme--',\n  animationWillEnter = 'react-contexify__will-enter--',\n  animationWillLeave = 'react-contexify__will-leave--',\n}\n\nexport const enum EVENT {\n  HIDE_ALL,\n}\n\nexport const theme = {\n  light: 'light',\n  dark: 'dark',\n};\n\nexport const animation = {\n  fade: 'fade',\n  flip: 'flip',\n  scale: 'scale',\n  slide: 'slide',\n};\n\nexport const NOOP = () => {};\n","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\n\nimport {\n  BooleanPredicate,\n  PredicateParams,\n  MenuAnimation,\n  TriggerEvent,\n} from '../types';\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isTouchEvent(e: TriggerEvent): e is TouchEvent {\n  return e.type === 'touchend';\n}\n\nexport function cloneItems(\n  children: ReactNode,\n  props: { triggerEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(Boolean),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n\nexport function getMousePosition(e: TriggerEvent) {\n  const pos = {\n    x: 0,\n    y: 0,\n  };\n\n  if (isTouchEvent(e) && e.changedTouches && e.changedTouches.length > 0) {\n    pos.x = e.changedTouches[0].clientX;\n    pos.y = e.changedTouches[0].clientY;\n  } else {\n    pos.x = (e as MouseEvent).clientX;\n    pos.y = (e as MouseEvent).clientY;\n  }\n\n  if (!pos.x || pos.x < 0) pos.x = 0;\n\n  if (!pos.y || pos.y < 0) pos.y = 0;\n\n  return pos;\n}\n\nexport function getPredicateValue(\n  predicate: BooleanPredicate,\n  payload: PredicateParams\n) {\n  return isFn(predicate) ? predicate(payload) : predicate;\n}\n\nexport function hasExitAnimation(animation: MenuAnimation) {\n  return !!(\n    animation &&\n    (isStr(animation) || ('exit' in animation && animation.exit))\n  );\n}\n","/* global: window */\nimport React, {\n  ReactNode,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport cx from 'clsx';\n\nimport { RefTrackerProvider } from './RefTrackerProvider';\n\nimport { eventManager } from '../core/eventManager';\nimport {\n  TriggerEvent,\n  MenuId,\n  ContextMenuParams,\n  MenuAnimation,\n} from '../types';\nimport { usePrevious, useRefTracker } from '../hooks';\nimport { createMenuController } from './menuController';\nimport { NOOP, STYLE, EVENT } from '../constants';\nimport {\n  cloneItems,\n  getMousePosition,\n  hasExitAnimation,\n  isFn,\n  isStr,\n} from './utils';\n\nexport interface MenuProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'id'> {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to\n   * - `.react-contexify__will-enter--${given animation}`\n   * - `.react-contexify__will-leave--${given animation}`\n   *\n   * - To disable all animations you can pass `false`\n   * - To disable only the enter or the exit animation you can provide an object `{enter: false, exit: 'exitAnimation'}`\n   *\n   * - default is set to `scale`\n   *\n   * To use the built-in animation a helper in available\n   * `import { animation } from 'react-contexify`\n   *\n   * animation.fade\n   */\n  animation?: MenuAnimation;\n\n  /**\n   * Invoked after the menu is visible.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked after the menu has been hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  triggerEvent: TriggerEvent;\n  propsFromTrigger: any;\n  willLeave: boolean;\n}\n\nfunction reducer(\n  state: MenuState,\n  payload: Partial<MenuState> | ((state: MenuState) => Partial<MenuState>)\n) {\n  return isFn(payload)\n    ? { ...state, ...payload(state) }\n    : { ...state, ...payload };\n}\n\nexport const Menu: React.FC<MenuProps> = ({\n  id,\n  theme,\n  style,\n  className,\n  children,\n  animation = 'scale',\n  onHidden = NOOP,\n  onShown = NOOP,\n  ...rest\n}) => {\n  const [state, setState] = useReducer(reducer, {\n    x: 0,\n    y: 0,\n    visible: false,\n    triggerEvent: {} as TriggerEvent,\n    propsFromTrigger: null,\n    willLeave: false,\n  });\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const didMount = useRef(false);\n  const wasVisible = usePrevious(state.visible);\n  const refTracker = useRefTracker();\n  const [menuController] = useState(() => createMenuController());\n\n  // subscribe event manager\n  useEffect(() => {\n    didMount.current = true;\n    eventManager.on(id, show).on(EVENT.HIDE_ALL, hide);\n\n    return () => {\n      eventManager.off(id, show).off(EVENT.HIDE_ALL, hide);\n    };\n    // hide rely on setState(dispatch), which is guaranted to be the same across render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // handle show/ hide callback\n  useEffect(() => {\n    if (didMount.current && state.visible !== wasVisible) {\n      state.visible ? onShown() : onHidden();\n    }\n    // wasWisible is a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, onHidden, onShown]);\n\n  // collect menu items for keyboard navigation\n  useEffect(() => {\n    if (!state.visible) {\n      refTracker.clear();\n    } else {\n      menuController.init(Array.from(refTracker.values()));\n    }\n  }, [state.visible, menuController, refTracker]);\n\n  // compute menu position\n  useEffect(() => {\n    if (state.visible) {\n      const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n      const {\n        offsetWidth: menuWidth,\n        offsetHeight: menuHeight,\n      } = nodeRef.current!;\n      let { x, y } = state;\n\n      if (x + menuWidth > windowWidth) {\n        x -= x + menuWidth - windowWidth;\n      }\n\n      if (y + menuHeight > windowHeight) {\n        y -= y + menuHeight - windowHeight;\n      }\n\n      setState({\n        x,\n        y,\n      });\n    }\n\n    // state.visible and state{x,y} are updated together\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible]);\n\n  // subscribe dom events\n  useEffect(() => {\n    function handleKeyboard(e: KeyboardEvent) {\n      e.preventDefault();\n      switch (e.key) {\n        case 'Enter':\n          if (!menuController.openSubmenu()) hide();\n          break;\n        case 'Escape':\n          hide();\n          break;\n        case 'ArrowUp':\n          menuController.moveUp();\n          break;\n        case 'ArrowDown':\n          menuController.moveDown();\n          break;\n        case 'ArrowRight':\n          menuController.openSubmenu();\n          break;\n        case 'ArrowLeft':\n          menuController.closeSubmenu();\n          break;\n      }\n    }\n\n    if (state.visible) {\n      window.addEventListener('resize', hide);\n      window.addEventListener('contextmenu', hide);\n      window.addEventListener('click', hide);\n      window.addEventListener('scroll', hide);\n      window.addEventListener('keydown', handleKeyboard);\n\n      // This let us debug the menu in the console in dev mode\n      if (process.env.NODE_ENV !== 'development') {\n        window.addEventListener('blur', hide);\n      }\n    }\n\n    return () => {\n      window.removeEventListener('resize', hide);\n      window.removeEventListener('contextmenu', hide);\n      window.removeEventListener('click', hide);\n      window.removeEventListener('scroll', hide);\n      window.removeEventListener('keydown', handleKeyboard);\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.removeEventListener('blur', hide);\n      }\n    };\n    // state.visible will let us get the right reference to `hide`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, menuController]);\n\n  function show({ event, props, position }: ContextMenuParams) {\n    event.stopPropagation();\n    const { x, y } = position || getMousePosition(event);\n\n    // prevent react from batching the state update\n    // if the menu is already visible we have to recompute bounding rect based on position\n    setTimeout(() => {\n      setState({\n        visible: true,\n        willLeave: false,\n        x,\n        y,\n        triggerEvent: event,\n        propsFromTrigger: props,\n      });\n    }, 0);\n  }\n\n  function hide(event?: Event) {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    hasExitAnimation(animation)\n      ? setState(state => ({ willLeave: state.visible }))\n      : setState(state => ({ visible: state.visible ? false : state.visible }));\n  }\n\n  function handleAnimationEnd() {\n    if (state.willLeave && state.visible) {\n      setState({ visible: false, willLeave: false });\n    }\n  }\n\n  function computeAnimationClasses() {\n    if (!animation) return null;\n\n    if (isStr(animation)) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation}`]:\n          animation && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation} ${STYLE.animationWillLeave}'disabled'`]:\n          animation && visible && willLeave,\n      });\n    } else if ('enter' in animation && 'exit' in animation) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation.enter}`]:\n          animation.enter && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation.exit} ${STYLE.animationWillLeave}'disabled'`]:\n          animation.exit && visible && willLeave,\n      });\n    }\n\n    return null;\n  }\n\n  const { visible, triggerEvent, propsFromTrigger, x, y, willLeave } = state;\n  const cssClasses = cx(\n    STYLE.menu,\n    className,\n    { [`${STYLE.theme}${theme}`]: theme },\n    computeAnimationClasses()\n  );\n\n  const menuStyle = {\n    ...style,\n    left: x,\n    top: y,\n    opacity: 1,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      {visible && (\n        <div\n          {...rest}\n          className={cssClasses}\n          onAnimationEnd={handleAnimationEnd}\n          style={menuStyle}\n          ref={nodeRef}\n          role=\"menu\"\n        >\n          {cloneItems(children, {\n            propsFromTrigger,\n            triggerEvent,\n          })}\n        </div>\n      )}\n    </RefTrackerProvider>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import React, { ReactNode } from 'react';\nimport cx from 'clsx';\n\nimport {\n  ItemParams,\n  InternalProps,\n  BooleanPredicate,\n  HandlerParamsEvent,\n} from '../types';\nimport { useRefTrackerContext } from './RefTrackerProvider';\nimport { NOOP, STYLE } from '../constants';\nimport { getPredicateValue } from './utils';\n\nexport interface ItemProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden' | 'disabled' | 'onClick'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `data`\n   */\n  data?: any;\n\n  /**\n   * Disable `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemDisabled({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item disabled={isItemDisabled} data={data}>content</Item>\n   * ```\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemHidden({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item hidden={isItemHidden} data={data}>content</Item>\n   * ```\n   */\n  hidden?: BooleanPredicate;\n\n  /**\n   * Callback when the `Item` is clicked.\n   *\n   * @param event The event that occured on the Item node\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   * ```\n   * function handleItemClick({ triggerEvent, event, props, data }: ItemParams<type of props, type of data>){\n   *    // retrieve the id of the Item or any other dom attribute\n   *    const id = e.currentTarget.id;\n   *\n   *    // access the props and the data\n   *    console.log(props, data);\n   *\n   *    // access the coordinate of the mouse when the menu has been displayed\n   *    const {  clientX, clientY } = triggerEvent;\n   *\n   * }\n   *\n   * <Item id=\"item-id\" onClick={handleItemClick} data={{key: 'value'}}>Something</Item>\n   * ```\n   */\n  onClick?: (args: ItemParams) => void;\n}\n\nexport const Item: React.FC<ItemProps> = ({\n  children,\n  className,\n  style,\n  triggerEvent,\n  data,\n  propsFromTrigger,\n  onClick = NOOP,\n  disabled = false,\n  hidden = false,\n  ...rest\n}) => {\n  const refTracker = useRefTrackerContext();\n  const handlerParams = {\n    data,\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    (handlerParams as ItemParams).event = e;\n    isDisabled ? e.stopPropagation() : onClick(handlerParams as ItemParams);\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      refTracker.set(node, {\n        node,\n        isSubmenu: false,\n      });\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (e.key === 'Enter') {\n      (handlerParams as ItemParams).event = e;\n      onClick(handlerParams as ItemParams);\n    }\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  return (\n    <div\n      {...rest}\n      className={cssClasses}\n      style={style}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={trackRef}\n      tabIndex={-1}\n      role=\"menuitem\"\n      aria-disabled={isDisabled}\n    >\n      <div className={STYLE.itemContent}>{children}</div>\n    </div>\n  );\n};\n","import './ResourceRecentCard.css'\r\nimport Avatar from \"../../../@core/components/avatar\";\r\nimport {Item, Menu, useContextMenu} from \"react-contexify\";\r\n\r\nconst ResourceRecentCard = ({\r\n                                _id,\r\n                                title,\r\n                                des,\r\n                                date,\r\n                                creatorName,\r\n                                creatorAvatar,\r\n                                level,\r\n                                onEdit,\r\n                                onDelete,\r\n                                onDuplicate\r\n                            }) => {\r\n\r\n    const {show} = useContextMenu({\r\n        id: 'rrc-menu' + _id\r\n    })\r\n\r\n    return (\r\n        <div style={{width: '350px', height: '100%', backgroundColor: 'white', padding: '28px', borderRadius: '15px'}}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                          d=\"M10 3C10.667 3 11.333 3.253 12 3.76C12.667 3.253 13.333 3 14 3H20C20.5304 3 21.0391 3.21071 21.4142 3.58579C21.7893 3.96086 22 4.46957 22 5V18C22 18.5304 21.7893 19.0391 21.4142 19.4142C21.0391 19.7893 20.5304 20 20 20H13C13 20.552 12.55 21 12 21C11.45 21 11 20.55 11 20H4C3.46957 20 2.96086 19.7893 2.58579 19.4142C2.21071 19.0391 2 18.5304 2 18V5C2 4.46957 2.21071 3.96086 2.58579 3.58579C2.96086 3.21071 3.46957 3 4 3H10ZM10 5H4V18H11V6C11 5.45 10.55 5 10 5ZM20 5H14C13.45 5 13 5.45 13 6V18H20V5Z\"\r\n                          fill=\"#C0C1C3\"/>\r\n                </svg>\r\n                <svg className=\"cursor-pointer\" onClick={show} width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M6.5 10.5C6.89782 10.5 7.27936 10.658 7.56066 10.9393C7.84196 11.2206 8 11.6022 8 12C8 12.3978 7.84196 12.7794 7.56066 13.0607C7.27936 13.342 6.89782 13.5 6.5 13.5C6.10218 13.5 5.72064 13.342 5.43934 13.0607C5.15804 12.7794 5 12.3978 5 12C5 11.6022 5.15804 11.2206 5.43934 10.9393C5.72064 10.658 6.10218 10.5 6.5 10.5ZM12.5 10.5C12.8978 10.5 13.2794 10.658 13.5607 10.9393C13.842 11.2206 14 11.6022 14 12C14 12.3978 13.842 12.7794 13.5607 13.0607C13.2794 13.342 12.8978 13.5 12.5 13.5C12.1022 13.5 11.7206 13.342 11.4393 13.0607C11.158 12.7794 11 12.3978 11 12C11 11.6022 11.158 11.2206 11.4393 10.9393C11.7206 10.658 12.1022 10.5 12.5 10.5ZM18.5 10.5C18.8978 10.5 19.2794 10.658 19.5607 10.9393C19.842 11.2206 20 11.6022 20 12C20 12.3978 19.842 12.7794 19.5607 13.0607C19.2794 13.342 18.8978 13.5 18.5 13.5C18.1022 13.5 17.7206 13.342 17.4393 13.0607C17.158 12.7794 17 12.3978 17 12C17 11.6022 17.158 11.2206 17.4393 10.9393C17.7206 10.658 18.1022 10.5 18.5 10.5Z\"\r\n                        fill=\"black\"/>\r\n                </svg>\r\n            </div>\r\n            <p className=\"rrc-title mt-2\">{title}</p>\r\n            {des !== undefined && <p className=\"rrc-des mb-0\" style={{minHeight: 20}}>{des}</p>}\r\n            {date && <p className=\"rrc-des\">{date}</p>}\r\n            <div className=\"d-flex mt-2 align-items-center\">\r\n                <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${creatorAvatar}`} imgHeight='30'\r\n                        imgWidth='30'\r\n                        status='online'/>\r\n                <span className=\"rrc-username\" style={{marginLeft: 5}}>{creatorName}</span>\r\n                {level && <span className=\"rrc-level ml-2\">{level}</span>}\r\n            </div>\r\n            <Menu id={'rrc-menu' + _id}>\r\n                <Item onClick={onEdit}>Edit</Item>\r\n                <Item onClick={onDelete}>Delete</Item>\r\n                <Item onClick={onDuplicate}>Duplicate</Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceRecentCard"],"sourceRoot":""}