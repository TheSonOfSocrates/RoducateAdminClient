{"version":3,"sources":["assets/images/svg/market-rating.svg","assets/images/svg/market-customer.svg","assets/images/svg/market-products.svg","assets/images/svg/market-order.svg","roducate/pages/sellers/Sellers.js","roducate/modals/AddCategoryModal/AddCategoryModal.js","roducate/pages/category/Category.js","roducate/components/MarketRatingsCard/MarketRatingsCard.js","roducate/components/MarketProductsCard/MarketProductsCard.js","roducate/components/MarketCustomerCard/MarketCustomerCard.js","roducate/components/MarketOrderCard/MarketOrderCard.js","roducate/pages/market_products/MarketProduct.js","roducate/pages/market/Market.js"],"names":["BootstrapCheckbox","require","forwardRef","_ref","ref","onClick","rest","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","_objectSpread","type","Sellers","dispatch","useDispatch","MySwal","useSelector","state","modal","withReactContent","Swal","_useState","useState","_useState2","_slicedToArray","mediaList","setMediaList","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","searchStr","setSearchStr","_useState7","sortBy","sortOrder","_useState8","sort","setSort","_useState9","_useState10","pageSize","setPageSize","_useState11","_useState12","pageNumber","setPageNumber","_useState13","_useState14","totalPages","setTotalPages","_useState15","undefined","_useState16","setEditingRow","columns","name","sortable","minWidth","cell","row","Avatar","img","concat","process","owner","avatar","imgHeight","imgWidth","status","firstName","role","join","style","height","width","marginRight","src","categories","icon","title","selector","isActive","color","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","size","DropdownMenu","right","DropdownItem","href","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","showCreateMockExam","stop","_x","apply","arguments","Trash","cursor","preventDefault","deleteMediaList","_id","viewBox","fill","xmlns","d","useEffect","_callee2","_context2","loadData","_ref4","_callee3","response","_context3","showLoadingScreen","axios","post","sent","t0","toast","error","message","transition","Slide","hideProgressBar","autoClose","data","_ref5","_callee5","ids","_context5","fire","text","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","_ref6","_callee4","result","res","_context4","value","success","timer","position","_x3","_x2","Fragment","Card","CardHeader","UncontrolledButtonDropdown","caret","outline","Row","Col","md","sm","Label","for","Input","id","onChange","parseInt","target","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","map","item","onSort","AddCategoryModal","category","subject","onUpdate","store","setTitle","des","setDes","setIcon","coverImage","createCategory","formData","abrupt","FormData","append","showAddCategoryModal","Modal","toggle","isOpen","ModalBody","textAlign","Button","Ripple","X","placeholder","FileUploader","onFileChange","moment","Category","fetchData","updatedAt","format","isDeleted","isPublished","_ref3","length","_ref7","_callee6","_context6","_ref8","PlusCircle","MarketRatingsCard","show","useContextMenu","logo","default","backgroundColor","padding","borderRadius","Menu","Item","MarketProductsCard","MarketCustomerCard","MarketOrderCard","MarketProduct","images","rate","price","stockAmount","rx","Market","active","setActive","tab","Nav","tabs","margin","NavItem","NavLink","TabContent","activeTab","TabPane","tabId"],"mappings":"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","file":"static/js/22.e71eb30f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/market-rating.d9a2e846.svg\";","export default __webpack_public_path__ + \"static/media/market-customer.04591944.svg\";","export default __webpack_public_path__ + \"static/media/market-products.006c701a.svg\";","export default __webpack_public_path__ + \"static/media/market-order.3fdec9dc.svg\";","// ** React Imports\nimport React, {forwardRef, Fragment, useEffect, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, MoreVertical, Trash} from 'react-feather'\nimport {\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport './Sellers.css'\nimport Avatar from \"../../../@core/components/avatar\";\nimport 'react-contexify/dist/ReactContexify.min.css'\nimport '@styles/react/libs/context-menu/context-menu.scss'\nimport {showCreateMockExam} from \"../../../redux/actions/modal\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst Sellers = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    // data table model\n    const [mediaList, setMediaList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    const columns = [\n        {\n            name: 'User Info',\n            sortable: true,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${row.owner.avatar}`}\n                                imgHeight='30' imgWidth='30' status='online'/>&nbsp;\n                        <div>\n                            <span className=\"datatable-first-column\">{row.owner.firstName}</span><br/>\n                            <span>{row.owner.role.join(', ')}</span>\n                        </div>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Categories',\n            sortable: true,\n            minWidth: '50px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <img style={{height: '30px', width: '30px', marginRight: 10}}\n                             src={process.env.REACT_APP_3BUCKET_URL + row.categories[0].icon}/>\n                        <span className=\"datatable-primary-color\">{row.categories[0].title}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Store Location',\n            selector: 'location',\n            sortable: true,\n            minWidth: '300px',\n        },\n        {\n            name: 'Store Name',\n            selector: 'title',\n            sortable: true,\n            minWidth: '50px'\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return (\n                    <div>\n                        <div>\n                            {isActive[row.owner.status === 'active'].icon}&nbsp;&nbsp;&nbsp;\n                            {row.owner.status === 'active' && <span style={{color: \"#00AB5F\"}}>Active</span>}\n                            {row.owner.status !== 'active' && <span style={{color: \"#FC7753\"}}>Inactive</span>}\n                        </div>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={async (e) => {\n                                                  setEditingRow(row)\n                                                  dispatch(showCreateMockExam(true))\n                                              }}>\n                                    <span className='align-middle ml-50'>Edit</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Trash size={15} style={{cursor: 'pointer'}} onClick={(e) => {\n                            e.preventDefault()\n                            deleteMediaList([row._id])\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#00C56D\"/>\n            </svg>\n            }/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#fc7753\"/>\n            </svg>\n            }/>\n        }\n    }\n\n    useEffect(async () => {\n        loadData()\n    }, [pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/marketplace/getSellers', {pageNumber, pageSize, searchStr, sort})\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        if (response) {\n            setTotalPages(response.data.totalPages)\n            setMediaList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteMediaList = async (ids) => {\n        await MySwal.fire({\n            title: 'Oh No, Delete',\n            text: \"Do you want to delete this content?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Delete',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(async function (result) {\n            if (result.value) {\n                dispatch(showLoadingScreen(true))\n                try {\n                    const res = await axios.post(`/resource/study/deleteStudyModules`, {ids})\n                    dispatch(showLoadingScreen(false))\n                    if (res.data.success) {\n                        await MySwal.fire({\n                            title: 'Good job!',\n                            text: 'You deleted study module successfully!',\n                            icon: 'success',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                        loadData()\n                    } else {\n                        MySwal.fire({\n                            title: 'Error!',\n                            text: 'Something went wrong!',\n                            icon: 'error',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                    }\n                } catch (e) {\n                    dispatch(showLoadingScreen(false))\n                    toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                        transition: Slide,\n                        hideProgressBar: true,\n                        autoClose: 2000\n                    })\n                }\n                setSelectedList([])\n            }\n        })\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Fragment>\n            <Card>\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteMediaList(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={pageNumber + 1}\n                    paginationComponent={CustomPagination}\n                    data={mediaList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n        </Fragment>\n    )\n}\n\nexport default Sellers","import {Button, Input, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showAddCategoryModal} from '@store/actions/modal'\r\nimport {X} from \"react-feather\";\r\nimport './AddCategoryModal.css'\r\nimport FileUploader from \"../../components/FileUploader/FileUploader\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport axios from \"../../../utility/axios\";\r\n\r\nexport const AddCategoryModal = ({subject: category, onUpdate}) => {\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [des, setDes] = useState('')\r\n\r\n    const [icon, setIcon] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if (category) {\r\n            setTitle(title)\r\n            setIcon(category.coverImage)\r\n        } else {\r\n\r\n        }\r\n    }, [category])\r\n\r\n    const createCategory = async () => {\r\n        if (title === '' || !icon || des === '') {\r\n            return MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Something went wrong.',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n\r\n        const formData = new FormData()\r\n        formData.append('title', title)\r\n        formData.append('description', des)\r\n        formData.append('icon', icon)\r\n\r\n        const result = await axios.post('/marketplace/productCategory', formData);\r\n\r\n        if (result.data.success) {\r\n            await MySwal.fire({\r\n                title: 'Good job!',\r\n                text: 'You added category successfully!',\r\n                icon: 'success',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary'\r\n                },\r\n                buttonsStyling: false\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    dispatch(showAddCategoryModal())\r\n                }\r\n            })\r\n        } else {\r\n            MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Something went wrong.',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const onTitleChanged = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const onIconChange = (icon) => {\r\n        setIcon(icon)\r\n    }\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showAddCategoryModal())}\r\n               isOpen={store.showAddCategoryModal}\r\n               className=\"modal-dialog-centered\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showAddCategoryModal())}>\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Button.Ripple onClick={() => dispatch(showAddCategoryModal())} className='btn-icon rounded-circle'\r\n                                   color='flat-danger'>\r\n                        <X size={16}/>\r\n                    </Button.Ripple>\r\n                </div>\r\n                <h1 className=\"add-subject-title\">ADD CATEGORY</h1>\r\n                <Input placeholder='Category title' value={title} onChange={onTitleChanged}/>\r\n\r\n                <br/>\r\n\r\n                <Input type=\"textarea\" placeholder='Category description' value={des}\r\n                       onChange={e => setDes(e.target.value)}/>\r\n\r\n                <br/>\r\n\r\n                <FileUploader onFileChange={onIconChange}/>\r\n                <br/>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <Button color='gradient-primary' onClick={createCategory}>Create category</Button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};","// ** React Imports\nimport React, {forwardRef, Fragment, useEffect, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, MoreVertical, PlusCircle, Trash} from 'react-feather'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport './Category.css'\nimport Avatar from \"../../../@core/components/avatar\";\nimport 'react-contexify/dist/ReactContexify.min.css'\nimport '@styles/react/libs/context-menu/context-menu.scss'\nimport {showAddCategoryModal, showCreateMockExam} from \"../../../redux/actions/modal\";\nimport {AddCategoryModal} from \"../../modals/AddCategoryModal/AddCategoryModal\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst Category = ({fetchData}) => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    // data table model\n    const [mediaList, setMediaList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    const columns = [\n        {\n            name: '#',\n            selector: '_id',\n            sortable: true,\n            minWidth: '100px'\n        },\n        {\n            name: 'Name',\n            sortable: true,\n            minWidth: '250px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <img style={{height: '30px', width: '30px', marginRight: 10}}\n                             src={process.env.REACT_APP_3BUCKET_URL + row.icon}/>\n                        <span className=\"datatable-first-column\">{row.title}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Users',\n            selector: '',\n            sortable: true,\n            minWidth: '50px',\n        },\n        {\n            name: 'Date Modified',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return <div>{moment(row.updatedAt).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return (\n                    <div>\n                        {!row.isDeleted && <div>\n                            {isActive[row.isPublished].icon}&nbsp;&nbsp;&nbsp;\n                            {row.isPublished && <span style={{color: \"#00AB5F\"}}>Active</span>}\n                            {!row.isPublished && <span style={{color: \"#FC7753\"}}>Inactive</span>}\n                        </div>}\n                        {row.isDeleted && <div>\n                            {isActive[false].icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FC7753\"}}>Deleted</span>}\n                        </div>}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={async (e) => {\n                                                  setEditingRow(row)\n                                                  dispatch(showCreateMockExam(true))\n                                              }}>\n                                    <span className='align-middle ml-50'>Edit</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Trash size={15} style={{cursor: 'pointer'}} onClick={(e) => {\n                            e.preventDefault()\n                            deleteMediaList([row._id])\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#00C56D\"/>\n            </svg>\n            }/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#fc7753\"/>\n            </svg>\n            }/>\n        }\n    }\n\n    useEffect(async () => {\n        if (fetchData)\n            loadData()\n    }, [pageNumber, pageSize, sort])\n\n    useEffect(async () => {\n        if (mediaList.length === 0 && fetchData)\n            loadData()\n    }, [fetchData])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/marketplace/productCategory/getAllCategory', {\n                pageNumber,\n                pageSize,\n                searchStr,\n                sort\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        if (response) {\n            setTotalPages(response.data.totalPages)\n            setMediaList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteMediaList = async (ids) => {\n        await MySwal.fire({\n            title: 'Oh No, Delete',\n            text: \"Do you want to delete this content?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Delete',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(async function (result) {\n            if (result.value) {\n                dispatch(showLoadingScreen(true))\n                try {\n                    const res = await axios.post(`/resource/study/deleteStudyModules`, {ids})\n                    dispatch(showLoadingScreen(false))\n                    if (res.data.success) {\n                        await MySwal.fire({\n                            title: 'Good job!',\n                            text: 'You deleted study module successfully!',\n                            icon: 'success',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                        loadData()\n                    } else {\n                        MySwal.fire({\n                            title: 'Error!',\n                            text: 'Something went wrong!',\n                            icon: 'error',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                    }\n                } catch (e) {\n                    dispatch(showLoadingScreen(false))\n                    toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                        transition: Slide,\n                        hideProgressBar: true,\n                        autoClose: 2000\n                    })\n                }\n                setSelectedList([])\n            }\n        })\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Fragment>\n            <Card>\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteMediaList(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                    <Button className='ml-2' color='primary' onClick={() => dispatch(showAddCategoryModal(true))}>\n                        <PlusCircle size={15}/>\n                        <span className='align-middle ml-50'>Create Category</span>\n                    </Button>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={pageNumber + 1}\n                    paginationComponent={CustomPagination}\n                    data={mediaList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n\n            <AddCategoryModal/>\n        </Fragment>\n    )\n}\n\nexport default Category","import './MarketRatingsCard.css'\r\nimport {Item, Menu, useContextMenu} from \"react-contexify\";\r\n\r\nconst MarketRatingsCard = () => {\r\n\r\n    const {show} = useContextMenu({\r\n        id: 'mrc-rating-menu'\r\n    })\r\n\r\n    const logo = require(`@src/assets/images/svg/market-rating.svg`).default\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'white',\r\n            padding: '20px 10px 10px 20px',\r\n            borderRadius: '15px'\r\n        }}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <p className=\"mrc-title\">Ratings</p>\r\n                    <div className=\"mrc-compare-back pl-1 pr-1 ml-0 cursor-pointer\" onClick={show}>\r\n                        <span className=\"mrc-compare-title\">Last Year</span>\r\n                        <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                                  d=\"M10.0303 11.7803C9.88962 11.9209 9.69889 11.9999 9.50001 11.9999C9.30114 11.9999 9.11041 11.9209 8.96976 11.7803L4.72701 7.53751C4.65538 7.46833 4.59824 7.38557 4.55894 7.29407C4.51963 7.20256 4.49894 7.10415 4.49808 7.00456C4.49721 6.90498 4.51619 6.80622 4.5539 6.71405C4.59161 6.62188 4.6473 6.53814 4.71772 6.46772C4.78814 6.3973 4.87188 6.34161 4.96405 6.3039C5.05622 6.26619 5.15498 6.24721 5.25456 6.24808C5.35415 6.24894 5.45256 6.26963 5.54407 6.30894C5.63557 6.34824 5.71833 6.40538 5.78751 6.47701L9.50001 10.1895L13.2125 6.47701C13.354 6.34039 13.5434 6.2648 13.7401 6.26651C13.9367 6.26822 14.1248 6.34709 14.2639 6.48615C14.4029 6.6252 14.4818 6.81331 14.4835 7.00996C14.4852 7.20661 14.4096 7.39606 14.273 7.53751L10.0303 11.7803Z\"\r\n                                  fill=\"#8840E6\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        <span className=\"mrc-user-cont\">8.14K</span>\r\n                        <span className=\"mrc-percent\">+15.6%</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={logo}/>\r\n            </div>\r\n            <Menu id='mrc-rating-menu'>\r\n                <Item>Today</Item>\r\n                <Item>Last Week</Item>\r\n                <Item>Last Month</Item>\r\n                <Item>Last Yar</Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketRatingsCard","import './MarketProductsCard.css'\r\nimport {Item, Menu, useContextMenu} from \"react-contexify\";\r\n\r\nconst MarketProductsCard = () => {\r\n\r\n    const {show} = useContextMenu({\r\n        id: 'mrc-rating-menu'\r\n    })\r\n\r\n    const logo = require(`@src/assets/images/svg/market-customer.svg`).default\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'white',\r\n            padding: '20px 10px 10px 20px',\r\n            borderRadius: '15px'\r\n        }}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <p className=\"mrc-title\">Customers</p>\r\n                    <div className=\"mrc-compare-back pl-1 pr-1 ml-0 cursor-pointer\" onClick={show}>\r\n                        <span className=\"mrc-compare-title\">Last Month</span>\r\n                        <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                                  d=\"M10.0303 11.7803C9.88962 11.9209 9.69889 11.9999 9.50001 11.9999C9.30114 11.9999 9.11041 11.9209 8.96976 11.7803L4.72701 7.53751C4.65538 7.46833 4.59824 7.38557 4.55894 7.29407C4.51963 7.20256 4.49894 7.10415 4.49808 7.00456C4.49721 6.90498 4.51619 6.80622 4.5539 6.71405C4.59161 6.62188 4.6473 6.53814 4.71772 6.46772C4.78814 6.3973 4.87188 6.34161 4.96405 6.3039C5.05622 6.26619 5.15498 6.24721 5.25456 6.24808C5.35415 6.24894 5.45256 6.26963 5.54407 6.30894C5.63557 6.34824 5.71833 6.40538 5.78751 6.47701L9.50001 10.1895L13.2125 6.47701C13.354 6.34039 13.5434 6.2648 13.7401 6.26651C13.9367 6.26822 14.1248 6.34709 14.2639 6.48615C14.4029 6.6252 14.4818 6.81331 14.4835 7.00996C14.4852 7.20661 14.4096 7.39606 14.273 7.53751L10.0303 11.7803Z\"\r\n                                  fill=\"#8840E6\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        <span className=\"mrc-user-cont\">42.4K</span>\r\n                        <span className=\"mrc-percent\">15.6%</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={logo}/>\r\n            </div>\r\n            <Menu id='mrc-rating-menu'>\r\n                <Item>Today</Item>\r\n                <Item>Last Week</Item>\r\n                <Item>Last Month</Item>\r\n                <Item>Last Yar</Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketProductsCard","import './MarketCustomerCard.css'\r\nimport {Item, Menu, useContextMenu} from \"react-contexify\";\r\n\r\nconst MarketCustomerCard = () => {\r\n\r\n    const {show} = useContextMenu({\r\n        id: 'mrc-rating-menu'\r\n    })\r\n\r\n    const logo = require(`@src/assets/images/svg/market-products.svg`).default\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'white',\r\n            padding: '20px 10px 10px 20px',\r\n            borderRadius: '15px'\r\n        }}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <p className=\"mrc-title\">Products</p>\r\n                    <div className=\"mrc-compare-back pl-1 pr-1 ml-0 cursor-pointer\" onClick={show}>\r\n                        <span className=\"mrc-compare-title\">Last Month</span>\r\n                        <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                                  d=\"M10.0303 11.7803C9.88962 11.9209 9.69889 11.9999 9.50001 11.9999C9.30114 11.9999 9.11041 11.9209 8.96976 11.7803L4.72701 7.53751C4.65538 7.46833 4.59824 7.38557 4.55894 7.29407C4.51963 7.20256 4.49894 7.10415 4.49808 7.00456C4.49721 6.90498 4.51619 6.80622 4.5539 6.71405C4.59161 6.62188 4.6473 6.53814 4.71772 6.46772C4.78814 6.3973 4.87188 6.34161 4.96405 6.3039C5.05622 6.26619 5.15498 6.24721 5.25456 6.24808C5.35415 6.24894 5.45256 6.26963 5.54407 6.30894C5.63557 6.34824 5.71833 6.40538 5.78751 6.47701L9.50001 10.1895L13.2125 6.47701C13.354 6.34039 13.5434 6.2648 13.7401 6.26651C13.9367 6.26822 14.1248 6.34709 14.2639 6.48615C14.4029 6.6252 14.4818 6.81331 14.4835 7.00996C14.4852 7.20661 14.4096 7.39606 14.273 7.53751L10.0303 11.7803Z\"\r\n                                  fill=\"#8840E6\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        <span className=\"mrc-user-cont\">12.2K</span>\r\n                        <span className=\"mrc-percent-fail\">-25.5%</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={logo}/>\r\n            </div>\r\n            <Menu id='mrc-rating-menu'>\r\n                <Item>Today</Item>\r\n                <Item>Last Week</Item>\r\n                <Item>Last Month</Item>\r\n                <Item>Last Yar</Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketCustomerCard","import './MarketOrderCard.css'\r\nimport {Item, Menu, useContextMenu} from \"react-contexify\";\r\n\r\nconst MarketOrderCard = () => {\r\n\r\n    const {show} = useContextMenu({\r\n        id: 'mrc-rating-menu'\r\n    })\r\n\r\n    const logo = require(`@src/assets/images/svg/market-order.svg`).default\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'white',\r\n            padding: '20px 10px 10px 20px',\r\n            borderRadius: '15px'\r\n        }}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <p className=\"mrc-title\">Total Orders</p>\r\n                    <div className=\"mrc-compare-back pl-1 pr-1 ml-0 cursor-pointer\" onClick={show}>\r\n                        <span className=\"mrc-compare-title\">Last Month</span>\r\n                        <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n                                  d=\"M10.0303 11.7803C9.88962 11.9209 9.69889 11.9999 9.50001 11.9999C9.30114 11.9999 9.11041 11.9209 8.96976 11.7803L4.72701 7.53751C4.65538 7.46833 4.59824 7.38557 4.55894 7.29407C4.51963 7.20256 4.49894 7.10415 4.49808 7.00456C4.49721 6.90498 4.51619 6.80622 4.5539 6.71405C4.59161 6.62188 4.6473 6.53814 4.71772 6.46772C4.78814 6.3973 4.87188 6.34161 4.96405 6.3039C5.05622 6.26619 5.15498 6.24721 5.25456 6.24808C5.35415 6.24894 5.45256 6.26963 5.54407 6.30894C5.63557 6.34824 5.71833 6.40538 5.78751 6.47701L9.50001 10.1895L13.2125 6.47701C13.354 6.34039 13.5434 6.2648 13.7401 6.26651C13.9367 6.26822 14.1248 6.34709 14.2639 6.48615C14.4029 6.6252 14.4818 6.81331 14.4835 7.00996C14.4852 7.20661 14.4096 7.39606 14.273 7.53751L10.0303 11.7803Z\"\r\n                                  fill=\"#8840E6\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"pt-1\">\r\n                        <span className=\"mrc-user-cont\">4.25K</span>\r\n                        <span className=\"mrc-percent\">+15.6%</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={logo}/>\r\n            </div>\r\n            <Menu id='mrc-rating-menu'>\r\n                <Item>Today</Item>\r\n                <Item>Last Week</Item>\r\n                <Item>Last Month</Item>\r\n                <Item>Last Yar</Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketOrderCard","// ** React Imports\nimport React, {forwardRef, Fragment, useEffect, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, MoreVertical, Trash} from 'react-feather'\nimport {\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport './MarketProduct.css'\nimport Avatar from \"../../../@core/components/avatar\";\nimport 'react-contexify/dist/ReactContexify.min.css'\nimport '@styles/react/libs/context-menu/context-menu.scss'\nimport {showCreateMockExam} from \"../../../redux/actions/modal\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst MarketProduct = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    // data table model\n    const [mediaList, setMediaList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    const columns = [\n        {\n            name: 'Product name',\n            sortable: true,\n            minWidth: '250px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <img style={{height: '30px', width: '30px', marginRight: 10}}\n                             src={process.env.REACT_APP_3BUCKET_URL + row.images[0]}/>&nbsp;\n                        <div>\n                            <span className=\"datatable-first-column\">{row.title}</span><br/>\n                        </div>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Rating',\n            sortable: true,\n            minWidth: '50px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M14.6562 7.14863L11.8375 9.60863L12.6818 13.2711C12.7265 13.4626 12.7138 13.663 12.6452 13.8472C12.5766 14.0315 12.4552 14.1914 12.2962 14.3071C12.1372 14.4227 11.9477 14.489 11.7512 14.4975C11.5548 14.5059 11.3602 14.4564 11.1918 14.3549L7.99747 12.4174L4.80996 14.3549C4.64157 14.4564 4.447 14.5059 4.25057 14.4975C4.05415 14.489 3.86459 14.4227 3.70559 14.3071C3.54659 14.1914 3.42521 14.0315 3.35662 13.8472C3.28803 13.663 3.27528 13.4626 3.31996 13.2711L4.16309 9.61238L1.34372 7.14863C1.1946 7.02002 1.08677 6.85024 1.03375 6.66059C0.980734 6.47094 0.98489 6.26986 1.0457 6.08257C1.10651 5.89527 1.22126 5.7301 1.37556 5.60776C1.52987 5.48542 1.71686 5.41137 1.91309 5.39488L5.62934 5.073L7.07997 1.613C7.15572 1.43145 7.2835 1.27637 7.44721 1.16729C7.61092 1.05821 7.80324 1 7.99997 1C8.19669 1 8.38901 1.05821 8.55272 1.16729C8.71643 1.27637 8.84421 1.43145 8.91997 1.613L10.375 5.073L14.09 5.39488C14.2862 5.41137 14.4732 5.48542 14.6275 5.60776C14.7818 5.7301 14.8966 5.89527 14.9574 6.08257C15.0182 6.26986 15.0223 6.47094 14.9693 6.66059C14.9163 6.85024 14.8085 7.02002 14.6593 7.14863H14.6562Z\"\n                                fill=\"#FCB22B\"/>\n                        </svg>&nbsp;&nbsp;&nbsp;\n                        <span className=\"datatable-primary-color\">{row.rate}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Categories',\n            sortable: true,\n            minWidth: '250px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <img style={{height: '30px', width: '30px', marginRight: 10}}\n                             src={process.env.REACT_APP_3BUCKET_URL + row.category.icon}/>\n                        <span className=\"datatable-primary-color\">{row.category.title}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Price',\n            sortable: true,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <span>₦{row.price}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Store Name',\n            selector: 'storeName',\n            sortable: true,\n            minWidth: '200px'\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            minWidth: '200px',\n            cell: row => {\n                return (\n                    <div>\n                        <div>\n                            {isActive[row.stockAmount > 0].icon}&nbsp;&nbsp;&nbsp;\n                            {row.stockAmount > 0 && <span style={{color: \"#00AB5F\"}}>Available</span>}\n                            {row.stockAmount === 0 && <span style={{color: \"#FC7753\"}}>Sold Out</span>}\n                        </div>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={async (e) => {\n                                                  setEditingRow(row)\n                                                  dispatch(showCreateMockExam(true))\n                                              }}>\n                                    <span className='align-middle ml-50'>Edit</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Trash size={15} style={{cursor: 'pointer'}} onClick={(e) => {\n                            e.preventDefault()\n                            deleteMediaList([row._id])\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#C5F2C7\"/>\n                <path\n                    d=\"M9.649 5.09759C9.84631 5.02377 10.0619 5.01414 10.265 5.07009L10.351 5.09759L13.851 6.41009C14.0285 6.47663 14.1834 6.59224 14.2976 6.74344C14.4119 6.89464 14.4809 7.0752 14.4965 7.26409L14.5 7.34659V10.0281C14.5 10.8383 14.2812 11.6335 13.8668 12.3297C13.4524 13.0259 12.8577 13.5973 12.1455 13.9836L12.0125 14.0531L10.3355 14.8916C10.2432 14.9377 10.1423 14.9642 10.0392 14.9696C9.93616 14.9749 9.8331 14.9589 9.7365 14.9226L9.6645 14.8916L7.9875 14.0531C7.26281 13.6907 6.64939 13.1394 6.212 12.4574C5.77462 11.7754 5.52949 10.9879 5.5025 10.1781L5.5 10.0281V7.34659C5.5 7.15715 5.55381 6.97162 5.65517 6.81157C5.75652 6.65153 5.90125 6.52357 6.0725 6.44259L6.149 6.41009L9.649 5.09759ZM10 6.03409L6.5 7.34659V10.0281C6.50001 10.6556 6.66873 11.2716 6.98848 11.8115C7.30823 12.3514 7.76726 12.7954 8.3175 13.0971L8.435 13.1586L10 13.9411L11.565 13.1586C12.1264 12.878 12.6019 12.4516 12.9419 11.924C13.2819 11.3965 13.4738 10.7872 13.4975 10.1601L13.5 10.0281V7.34659L10 6.03409ZM9.5715 8.07609C9.63709 7.96659 9.74207 7.88631 9.86493 7.85172C9.9878 7.81712 10.1192 7.83083 10.2323 7.89002C10.3454 7.94922 10.4316 8.04942 10.4732 8.1701C10.5148 8.29078 10.5086 8.42279 10.456 8.53909L10.4285 8.59059L9.8835 9.50059H10.991C11.364 9.50059 11.6015 9.88659 11.451 10.2141L11.424 10.2651L10.429 11.9241C10.364 12.0348 10.2589 12.1162 10.1355 12.1515C10.0121 12.1869 9.87983 12.1734 9.76609 12.1139C9.65235 12.0544 9.56586 11.9534 9.52451 11.8319C9.48317 11.7104 9.49015 11.5776 9.544 11.4611L9.5715 11.4096L10.116 10.5001H9.0085C8.92404 10.5001 8.84093 10.4789 8.76677 10.4385C8.69261 10.3981 8.62978 10.3397 8.58401 10.2687C8.53825 10.1977 8.51102 10.1164 8.50481 10.0322C8.49861 9.94795 8.51363 9.86351 8.5485 9.78659L8.5755 9.73509L9.5705 8.07609H9.5715Z\"\n                    fill=\"#00C56D\"/>\n            </svg>}/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#FFFAF2\"/>\n                <path\n                    d=\"M9.649 5.09759C9.84631 5.02377 10.0619 5.01414 10.265 5.07009L10.351 5.09759L13.851 6.41009C14.0285 6.47663 14.1834 6.59224 14.2976 6.74344C14.4119 6.89464 14.4809 7.0752 14.4965 7.26409L14.5 7.34659V10.0281C14.5 10.8383 14.2812 11.6335 13.8668 12.3297C13.4524 13.0259 12.8577 13.5973 12.1455 13.9836L12.0125 14.0531L10.3355 14.8916C10.2432 14.9377 10.1423 14.9642 10.0392 14.9696C9.93616 14.9749 9.8331 14.9589 9.7365 14.9226L9.6645 14.8916L7.9875 14.0531C7.26281 13.6907 6.64939 13.1394 6.212 12.4574C5.77462 11.7754 5.52949 10.9879 5.5025 10.1781L5.5 10.0281V7.34659C5.5 7.15715 5.55381 6.97162 5.65517 6.81157C5.75652 6.65153 5.90125 6.52357 6.0725 6.44259L6.149 6.41009L9.649 5.09759ZM10 6.03409L6.5 7.34659V10.0281C6.50001 10.6556 6.66873 11.2716 6.98848 11.8115C7.30823 12.3514 7.76726 12.7954 8.3175 13.0971L8.435 13.1586L10 13.9411L11.565 13.1586C12.1264 12.878 12.6019 12.4516 12.9419 11.924C13.2819 11.3965 13.4738 10.7872 13.4975 10.1601L13.5 10.0281V7.34659L10 6.03409ZM9.5715 8.07609C9.63709 7.96659 9.74207 7.88631 9.86493 7.85172C9.9878 7.81712 10.1192 7.83083 10.2323 7.89002C10.3454 7.94922 10.4316 8.04942 10.4732 8.1701C10.5148 8.29078 10.5086 8.42279 10.456 8.53909L10.4285 8.59059L9.8835 9.50059H10.991C11.364 9.50059 11.6015 9.88659 11.451 10.2141L11.424 10.2651L10.429 11.9241C10.364 12.0348 10.2589 12.1162 10.1355 12.1515C10.0121 12.1869 9.87983 12.1734 9.76609 12.1139C9.65235 12.0544 9.56586 11.9534 9.52451 11.8319C9.48317 11.7104 9.49015 11.5776 9.544 11.4611L9.5715 11.4096L10.116 10.5001H9.0085C8.92404 10.5001 8.84093 10.4789 8.76677 10.4385C8.69261 10.3981 8.62978 10.3397 8.58401 10.2687C8.53825 10.1977 8.51102 10.1164 8.50481 10.0322C8.49861 9.94795 8.51363 9.86351 8.5485 9.78659L8.5755 9.73509L9.5705 8.07609H9.5715Z\"\n                    fill=\"#FC7753\"/>\n            </svg>}/>\n        }\n    }\n\n    useEffect(async () => {\n        loadData()\n    }, [pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/marketplace/getProducts', {pageNumber, pageSize, searchStr, sort})\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        if (response) {\n            setTotalPages(response.data.totalPages)\n            setMediaList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteMediaList = async (ids) => {\n        await MySwal.fire({\n            title: 'Oh No, Delete',\n            text: \"Do you want to delete this content?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Delete',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(async function (result) {\n            if (result.value) {\n                dispatch(showLoadingScreen(true))\n                try {\n                    const res = await axios.post(`/resource/study/deleteStudyModules`, {ids})\n                    dispatch(showLoadingScreen(false))\n                    if (res.data.success) {\n                        await MySwal.fire({\n                            title: 'Good job!',\n                            text: 'You deleted study module successfully!',\n                            icon: 'success',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                        loadData()\n                    } else {\n                        MySwal.fire({\n                            title: 'Error!',\n                            text: 'Something went wrong!',\n                            icon: 'error',\n                            timer: 2000,\n                            position: 'center',\n                            customClass: {\n                                confirmButton: 'btn btn-primary'\n                            },\n                            buttonsStyling: false\n                        })\n                    }\n                } catch (e) {\n                    dispatch(showLoadingScreen(false))\n                    toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                        transition: Slide,\n                        hideProgressBar: true,\n                        autoClose: 2000\n                    })\n                }\n                setSelectedList([])\n            }\n        })\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Fragment>\n            <Card>\n                <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                    <UncontrolledButtonDropdown>\n                        <DropdownToggle color='secondary' caret outline>\n                            <span className='align-middle ml-50'>Action</span>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem className='w-100' onClick={() => deleteMediaList(selectedList)}>\n                                <span className='align-middle ml-50'>Delete</span>\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledButtonDropdown>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                        <div className='d-flex align-items-center'>\n                            <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                            <Input\n                                className='dataTable-select'\n                                type='select'\n                                id='sort-select'\n                                value={pageSize}\n                                onChange={e => setPageSize(parseInt(e.target.value))}\n                            >\n                                <option value={5}>5</option>\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </Input>\n                        </div>\n                    </Col>\n\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchStr}\n                            onChange={(e) => setSearchStr(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    paginationServer\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={7}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10}/>}\n                    paginationDefaultPage={pageNumber + 1}\n                    paginationComponent={CustomPagination}\n                    data={mediaList}\n                    selectableRowsComponent={BootstrapCheckbox}\n                    onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                    onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                />\n            </Card>\n        </Fragment>\n    )\n}\n\nexport default MarketProduct","// ** React Imports\nimport React, {Fragment, useState} from 'react'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Third Party Components\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport './Market.css'\nimport Sellers from \"../sellers/Sellers\";\nimport Category from \"../category/Category\";\nimport MarketRatingsCard from \"../../components/MarketRatingsCard/MarketRatingsCard\";\nimport MarketProductsCard from \"../../components/MarketProductsCard/MarketProductsCard\";\nimport MarketCustomerCard from \"../../components/MarketCustomerCard/MarketCustomerCard\";\nimport MarketOrderCard from \"../../components/MarketOrderCard/MarketOrderCard\";\nimport MarketProduct from \"../market_products/MarketProduct\";\n\nconst Market = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const MySwal = withReactContent(Swal)\n\n    const [active, setActive] = useState('sellers')\n\n    const toggle = tab => {\n        if (active !== tab) {\n            setActive(tab)\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"row mb-2\">\n                <div className=\"col-3\">\n                    <MarketRatingsCard/>\n                </div>\n                <div className=\"col-3\">\n                    <MarketProductsCard/>\n                </div>\n                <div className=\"col-3\">\n                    <MarketCustomerCard/>\n                </div>\n                <div className=\"col-3\">\n                    <MarketOrderCard/>\n                </div>\n            </div>\n            <div>\n                <div className=\"d-flex justify-content-between mb-1 align-items-center\">\n                    <Nav tabs style={{margin: 'auto', height: 'fit-content'}}>\n                        <NavItem>\n                            <NavLink\n                                active={active === 'sellers'}\n                                onClick={() => {\n                                    toggle('sellers')\n                                }}\n                            >\n                                Sellers\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={active === 'products'}\n                                onClick={() => {\n                                    toggle('products')\n                                }}\n                            >\n                                Products\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={active === 'categories'}\n                                onClick={() => {\n                                    toggle('categories')\n                                }}\n                            >\n                                Categories\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </div>\n            </div>\n\n            <TabContent className='py-50' activeTab={active}>\n                <TabPane tabId='sellers'>\n                    <Sellers/>\n                </TabPane>\n                <TabPane tabId='products'>\n                    <MarketProduct/>\n                </TabPane>\n                <TabPane tabId='categories'>\n                    <Category fetchData={active === 'categories'}/>\n                </TabPane>\n            </TabContent>\n        </Fragment>\n    )\n}\n\nexport default Market"],"sourceRoot":""}