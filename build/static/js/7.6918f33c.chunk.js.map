{"version":3,"sources":["roducate/pages/admins/Admins.js","roducate/components/MultiSelect/MultiSelect.js","roducate/modals/AddRoleModal/AddRoleModal.js","roducate/modals/RoleSelectModal/RoleSelectModal.js","roducate/modals/AccessSelectModal/AccessSelectModal.js","roducate/modals/CreateAdmin/CreateAdmin.js"],"names":["moment","require","BootstrapCheckbox","forwardRef","_ref","ref","onClick","rest","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","_objectSpread","type","Admins","_ref2","_ref2$userType","userType","dispatch","useDispatch","_useState","useSelector","state","modal","useState","_useState2","_slicedToArray","dataList","setDataList","_useState3","_useState4","selectedList","setSelectedList","_useState5","_useState6","searchStr","setSearchStr","_useState7","sortBy","sortOrder","_useState8","sort","setSort","_useState9","_useState10","pageSize","setPageSize","_useState11","_useState12","pageNumber","setPageNumber","_useState13","_useState14","totalPages","setTotalPages","_useState15","undefined","_useState16","setEditingRow","columns","name","sortable","minWidth","cell","row","Avatar","img","concat","process","avatar","imgHeight","imgWidth","status","firstName","width","_isActive$row$verifie","_isActive$false","isDeleted","isActive","verified","icon","style","color","role","join","selector","lastLoginDate","format","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","size","DropdownMenu","right","DropdownItem","href","e","preventDefault","deleteData","_id","Trash","Edit","find","item","showAddSubjectModal","MySwal","withReactContent","Swal","height","viewBox","fill","xmlns","d","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loadData","stop","_ref4","_callee2","response","_context2","showLoadingScreen","axios","post","sent","t0","toast","error","message","transition","Slide","hideProgressBar","autoClose","data","apply","arguments","_ref5","_callee3","ids","res","_context3","success","fire","title","text","timer","position","customClass","confirmButton","buttonsStyling","_x","Card","CardHeader","UncontrolledButtonDropdown","caret","outline","Button","showCreateAdmin","PlusCircle","Row","Col","md","sm","Label","for","Input","id","value","onChange","parseInt","target","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","map","onSort","CreateAdmin","MultiSelect","onSelected","displayField","idField","_ref$filter","filter","selectedItemList","selectedDataList","setSelectedDataList","maxHeight","overflow","marginBottom","toLowerCase","includes","tmpList","isExist","some","_step","_iterator","_createForOfIteratorHelper","s","n","done","push","err","f","_toConsumableArray","onItemSelected","item1","AddRoleModal","onUpdate","store","setRole","addRole","then","result","showAddRoleModal","toString","Modal","toggle","isOpen","ModalBody","textAlign","Ripple","X","FormGroup","placeholder","RoleSelectModal","selectedTitle","setSelectedTitle","setId","setFilter","syllabuses","setSyllabuses","fetchData","_fetchData","get","showRoleSelectModal","InputGroup","InputGroupAddon","addonType","InputGroupText","Search","focus","SingleSelect","selectedId","cursor","AccessSelectModal","setSelectedItemList","showAccessSelectModal","length","_ref$admin","admin","setFirstName","lastName","setLastName","gender","setGender","email","setEmail","permissionList","setPermissionList","optionType","addAdmin","link","adminData","console","log","permissions","label","x","rx","Select","theme","selectThemeColors","classNamePrefix","options","isClearable","disabled","SelectOutlinedWrapper","text1","items"],"mappings":"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","file":"static/js/7.6918f33c.chunk.js","sourcesContent":["// ** React Imports\nimport React, {forwardRef, useEffect, useState} from 'react'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, Edit, MoreVertical, PlusCircle, Trash} from 'react-feather'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport Avatar from \"../../../@core/components/avatar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport './Admins.css'\nimport {showCreateAdmin} from \"../../../redux/actions/modal\";\nimport {CreateAdmin} from \"../../modals/CreateAdmin/CreateAdmin\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst Admins = ({userType = 'admin'}) => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    // data table model\n    const [dataList, setDataList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    // data table columns\n    const columns = [\n        {\n            name: 'User Info',\n            sortable: true,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${row.avatar}`}\n                                imgHeight='30' imgWidth='30' status='online'/>&nbsp;\n                        <span>{row.firstName}</span>\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            width: '150px',\n            cell: row => {\n                return (\n                    <div>\n                        {!row.isDeleted && <div>\n                            {isActive[row.verified]?.icon}&nbsp;&nbsp;&nbsp;\n                            {row.verified && <span style={{color: \"#00AB5F\"}}>Active</span>}\n                            {!row.verified && <span style={{color: \"#FC7753\"}}>Inactive</span>}\n                        </div>}\n                        {row.isDeleted && <div>\n                            {isActive[false]?.icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FC7753\"}}>Deleted</span>}\n                        </div>}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'User type',\n            sortable: false,\n            width: '150px',\n            cell: row => {\n                return (\n                    <div>{row.role.join(', ')}</div>\n                )\n            }\n        },\n        {\n            name: 'Email',\n            selector: 'email',\n            sortable: false,\n            minWidth: '200px'\n        },\n        {\n            name: 'Last login',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return <div>{moment(row.lastLoginDate).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={(e) => {\n                                                  e.preventDefault()\n                                                  deleteData([row._id])\n                                              }}>\n                                    <Trash size={15}/>\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Edit size={15} onClick={() => {\n                            setEditingRow(dataList.find(item => item._id === row._id))\n                            dispatch(showAddSubjectModal())\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const MySwal = withReactContent(Swal)\n\n    const isActive = {\n        \"true\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#00C56D\"/>\n            </svg>\n            }/>\n        },\n        \"false\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.5955 9.999C6.66116 9.99746 6.72648 10.0089 6.78774 10.0326C6.84899 10.0563 6.90497 10.0918 6.9525 10.1371C7.00002 10.1825 7.03814 10.2367 7.06469 10.2968C7.09125 10.3569 7.10571 10.4216 7.10725 10.4873C7.10879 10.5529 7.09739 10.6182 7.07369 10.6795C7.04998 10.7407 7.01445 10.7967 6.96911 10.8442C6.92377 10.8918 6.86952 10.9299 6.80945 10.9564C6.74937 10.983 6.68466 10.9975 6.619 10.999L6.5 11L6.381 10.9985C6.31534 10.997 6.25063 10.9825 6.19055 10.9559C6.13048 10.9294 6.07623 10.8913 6.03089 10.8437C5.98555 10.7962 5.95002 10.7402 5.92631 10.679C5.90261 10.6177 5.89121 10.5524 5.89275 10.4867C5.89429 10.4211 5.90875 10.3564 5.93531 10.2963C5.96186 10.2362 5.99998 10.182 6.0475 10.1366C6.09503 10.0913 6.15101 10.0558 6.21226 10.0321C6.27352 10.0084 6.33884 9.99696 6.4045 9.9985L6.5 10L6.5955 9.999ZM9.269 9.5825C9.30326 9.63854 9.32614 9.70078 9.33633 9.76566C9.34653 9.83054 9.34384 9.8968 9.32843 9.96064C9.31301 10.0245 9.28517 10.0847 9.24649 10.1377C9.20781 10.1908 9.15905 10.2358 9.103 10.27C9.03529 10.3113 8.9666 10.351 8.897 10.389C8.83938 10.4205 8.77612 10.4404 8.71083 10.4474C8.64554 10.4545 8.57949 10.4487 8.51646 10.4302C8.38917 10.3929 8.2819 10.3066 8.21825 10.1903C8.1546 10.0739 8.13978 9.937 8.17705 9.80971C8.21432 9.68242 8.30064 9.57515 8.417 9.5115C8.47276 9.48118 8.52778 9.4495 8.582 9.4165C8.69513 9.34748 8.83104 9.32619 8.95986 9.35731C9.08868 9.38844 9.19987 9.46943 9.269 9.5825ZM4.4185 9.4165C4.4725 9.4495 4.5275 9.4815 4.5835 9.5115C4.69986 9.57522 4.78615 9.68255 4.82338 9.80989C4.8606 9.93723 4.84572 10.0741 4.782 10.1905C4.71828 10.3069 4.61095 10.3931 4.48361 10.4304C4.35627 10.4676 4.21936 10.4527 4.103 10.389C4.03338 10.351 3.96469 10.3113 3.897 10.27C3.78382 10.2008 3.70275 10.0896 3.67161 9.96063C3.64048 9.8317 3.66184 9.69568 3.731 9.5825C3.80016 9.46932 3.91144 9.38824 4.04037 9.35711C4.1693 9.32598 4.30532 9.34735 4.4185 9.4165ZM6.5 3C7.29565 3 8.05871 3.31607 8.62132 3.87868C9.18393 4.44129 9.5 5.20435 9.5 6C9.5 6.79565 9.18393 7.55871 8.62132 8.12132C8.05871 8.68393 7.29565 9 6.5 9C5.70435 9 4.94129 8.68393 4.37868 8.12132C3.81607 7.55871 3.5 6.79565 3.5 6C3.5 5.20435 3.81607 4.44129 4.37868 3.87868C4.94129 3.31607 5.70435 3 6.5 3ZM10.69 7.7185C10.8064 7.78209 10.8927 7.8893 10.93 8.01654C10.9673 8.14378 10.9526 8.28064 10.889 8.397C10.851 8.467 10.811 8.5355 10.77 8.603C10.7358 8.65904 10.6908 8.70779 10.6377 8.74646C10.5846 8.78513 10.5245 8.81297 10.4606 8.82839C10.3317 8.85952 10.1957 8.83816 10.0825 8.769C9.96932 8.69984 9.88824 8.58856 9.85711 8.45963C9.82598 8.3307 9.84735 8.19468 9.9165 8.0815C9.9495 8.0275 9.9815 7.9725 10.0115 7.9165C10.0431 7.8589 10.0857 7.80809 10.1369 7.76697C10.1881 7.72584 10.2469 7.69521 10.31 7.67683C10.373 7.65844 10.4391 7.65266 10.5044 7.65981C10.5697 7.66696 10.6329 7.6869 10.6905 7.7185H10.69ZM2.9885 7.917C3.01882 7.97276 3.0505 8.02778 3.0835 8.082C3.11848 8.13806 3.142 8.20049 3.15271 8.26569C3.16341 8.33089 3.16109 8.39757 3.14587 8.46187C3.13065 8.52617 3.10283 8.58681 3.06404 8.64029C3.02524 8.69378 2.97622 8.73904 2.91983 8.77347C2.86343 8.80789 2.80077 8.8308 2.73546 8.84087C2.67016 8.85093 2.60351 8.84795 2.53936 8.8321C2.47522 8.81624 2.41485 8.78784 2.36175 8.74851C2.30865 8.70919 2.26387 8.65973 2.23 8.603C2.1887 8.53529 2.14902 8.4666 2.111 8.397C2.04735 8.28064 2.03253 8.14375 2.0698 8.01646C2.10707 7.88917 2.19339 7.7819 2.30975 7.71825C2.42611 7.6546 2.563 7.63978 2.69029 7.67705C2.81758 7.71432 2.92485 7.80064 2.9885 7.917ZM6.5 4C5.96957 4 5.46086 4.21071 5.08579 4.58579C4.71071 4.96086 4.5 5.46957 4.5 6C4.5 6.53043 4.71071 7.03914 5.08579 7.41421C5.46086 7.78929 5.96957 8 6.5 8C7.03043 8 7.53914 7.78929 7.91421 7.41421C8.28929 7.03914 8.5 6.53043 8.5 6C8.5 5.46957 8.28929 4.96086 7.91421 4.58579C7.53914 4.21071 7.03043 4 6.5 4ZM6.5 5C6.76522 5 7.01957 5.10536 7.20711 5.29289C7.39464 5.48043 7.5 5.73478 7.5 6C7.5 6.26522 7.39464 6.51957 7.20711 6.70711C7.01957 6.89464 6.76522 7 6.5 7C6.23478 7 5.98043 6.89464 5.79289 6.70711C5.60536 6.51957 5.5 6.26522 5.5 6C5.5 5.73478 5.60536 5.48043 5.79289 5.29289C5.98043 5.10536 6.23478 5 6.5 5ZM2.013 5.3925C2.07867 5.39406 2.14338 5.40854 2.20345 5.43511C2.26352 5.46169 2.31776 5.49984 2.36308 5.54739C2.4084 5.59494 2.44391 5.65095 2.46757 5.71222C2.49124 5.7735 2.50259 5.83883 2.501 5.9045L2.5 6C2.5 6.032 2.5 6.064 2.501 6.0955C2.50412 6.22811 2.45443 6.35652 2.36286 6.4525C2.2713 6.54847 2.14536 6.60413 2.01275 6.60725C1.88014 6.61037 1.75173 6.56068 1.65576 6.46911C1.55978 6.37755 1.50412 6.25161 1.501 6.119L1.5 6C1.5 5.96 1.5 5.92 1.5015 5.881C1.50299 5.81533 1.51741 5.75061 1.54393 5.69051C1.57044 5.63042 1.60854 5.57614 1.65604 5.53078C1.70354 5.48541 1.75951 5.44985 1.82076 5.42612C1.88201 5.4024 1.94733 5.39097 2.013 5.3925ZM10.987 5.3925C11.0527 5.39097 11.118 5.4024 11.1792 5.42612C11.2405 5.44985 11.2965 5.48541 11.344 5.53078C11.3915 5.57614 11.4296 5.63042 11.4561 5.69051C11.4826 5.75061 11.497 5.81533 11.4985 5.881L11.5 6L11.4985 6.119C11.497 6.18466 11.4825 6.24937 11.4559 6.30945C11.4294 6.36952 11.3913 6.42377 11.3437 6.46911C11.2962 6.51445 11.2402 6.54998 11.179 6.57369C11.1177 6.59739 11.0524 6.60879 10.9867 6.60725C10.9211 6.60571 10.8564 6.59125 10.7963 6.56469C10.7362 6.53814 10.682 6.50002 10.6366 6.4525C10.5913 6.40497 10.5558 6.34899 10.5321 6.28774C10.5084 6.22648 10.497 6.16116 10.4985 6.0955L10.5 6L10.499 5.9045C10.4974 5.83883 10.5088 5.7735 10.5324 5.71222C10.5561 5.65095 10.5916 5.59494 10.6369 5.54739C10.6822 5.49984 10.7365 5.46169 10.7965 5.43511C10.8566 5.40854 10.9213 5.39406 10.987 5.3925ZM10.77 3.397C10.811 3.4645 10.851 3.5335 10.889 3.603C10.9205 3.66062 10.9404 3.72388 10.9474 3.78917C10.9545 3.85446 10.9487 3.92051 10.9302 3.98354C10.9117 4.04657 10.8811 4.10534 10.8399 4.15651C10.7987 4.20768 10.7479 4.25023 10.6903 4.28175C10.5739 4.3454 10.437 4.36022 10.3097 4.32295C10.1824 4.28568 10.0752 4.19936 10.0115 4.083C9.98115 4.02725 9.94947 3.97224 9.9165 3.918C9.88152 3.86194 9.858 3.79951 9.84729 3.73431C9.83659 3.66911 9.83891 3.60243 9.85413 3.53813C9.86935 3.47383 9.89717 3.41319 9.93596 3.35971C9.97476 3.30622 10.0238 3.26096 10.0802 3.22653C10.1366 3.1921 10.1992 3.1692 10.2645 3.15913C10.3298 3.14907 10.3965 3.15205 10.4606 3.1679C10.5248 3.18376 10.5852 3.21216 10.6383 3.25149C10.6913 3.29081 10.7361 3.34027 10.77 3.397ZM2.9175 3.231C2.97355 3.26523 3.02231 3.31017 3.06099 3.36325C3.09967 3.41633 3.12751 3.47652 3.14293 3.54036C3.15834 3.6042 3.16103 3.67046 3.15083 3.73534C3.14064 3.80022 3.11776 3.86246 3.0835 3.9185C3.0505 3.9725 3.0185 4.0275 2.9885 4.0835C2.92478 4.19986 2.81745 4.28615 2.69011 4.32338C2.56277 4.3606 2.42586 4.34572 2.3095 4.282C2.19314 4.21828 2.10685 4.11095 2.06962 3.98361C2.0324 3.85627 2.04728 3.71936 2.111 3.603C2.149 3.533 2.189 3.4645 2.23 3.397C2.26423 3.34095 2.30917 3.29219 2.36225 3.25351C2.41533 3.21483 2.47552 3.18699 2.53936 3.17157C2.6032 3.15616 2.66946 3.15347 2.73434 3.16367C2.79922 3.17386 2.86146 3.19674 2.9175 3.231ZM8.897 1.611C8.967 1.649 9.0355 1.689 9.103 1.73C9.21618 1.79916 9.29726 1.91044 9.32839 2.03937C9.35952 2.1683 9.33816 2.30432 9.269 2.4175C9.19984 2.53068 9.08856 2.61175 8.95963 2.64289C8.8307 2.67402 8.69468 2.65266 8.5815 2.5835C8.52726 2.55053 8.47225 2.51885 8.4165 2.4885C8.30014 2.42478 8.21385 2.31745 8.17662 2.19011C8.1394 2.06277 8.15428 1.92586 8.218 1.8095C8.28172 1.69314 8.38905 1.60685 8.51639 1.56962C8.64373 1.5324 8.78064 1.54728 8.897 1.611ZM4.782 1.8095C4.81356 1.86714 4.83345 1.93044 4.84053 1.99577C4.84761 2.0611 4.84174 2.12719 4.82325 2.19025C4.80477 2.25331 4.77404 2.31211 4.73281 2.36329C4.69159 2.41447 4.64068 2.45701 4.583 2.4885C4.52725 2.51885 4.47224 2.55053 4.418 2.5835C4.30497 2.64863 4.17095 2.66701 4.04456 2.63471C3.91816 2.60241 3.8094 2.52199 3.74148 2.41061C3.67355 2.29923 3.65185 2.16572 3.681 2.03856C3.71015 1.9114 3.78784 1.80067 3.8975 1.73C3.965 1.689 4.034 1.649 4.1035 1.611C4.2198 1.54738 4.35661 1.53255 4.48385 1.56977C4.61108 1.607 4.71833 1.69323 4.782 1.8095ZM6.619 1.0015C6.75161 1.00462 6.87755 1.06028 6.96911 1.15626C7.06068 1.25223 7.11037 1.38064 7.10725 1.51325C7.10413 1.64586 7.04847 1.7718 6.9525 1.86336C6.85652 1.95493 6.72811 2.00462 6.5955 2.0015L6.5 2L6.4045 2.001C6.27189 2.00412 6.14348 1.95443 6.0475 1.86286C5.95153 1.7713 5.89587 1.64536 5.89275 1.51275C5.88963 1.38014 5.93932 1.25173 6.03089 1.15576C6.12245 1.05978 6.24839 1.00412 6.381 1.001L6.5 1L6.619 1.0015Z\"\n                    fill=\"#fc7753\"/>\n            </svg>\n            }/>\n        }\n    }\n\n    useEffect(async () => {\n        loadData()\n    }, [userType, pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/users/getAllUsers', {\n                pageNumber,\n                pageSize,\n                searchStr,\n                sort,\n                userType\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n\n        if (response && response.data) {\n            setTotalPages(response.data.totalPages)\n            setDataList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteData = async (ids) => {\n        dispatch(showLoadingScreen(true))\n        try {\n            const res = await axios.post('/users/deleteUsers', {ids})\n            dispatch(showLoadingScreen(false))\n            if (res.data.success) {\n                await MySwal.fire({\n                    title: 'Good job!',\n                    text: 'You deleted user successfully!',\n                    icon: 'success',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n\n                loadData()\n            } else {\n                MySwal.fire({\n                    title: 'Error!',\n                    text: 'Something went wrong!',\n                    icon: 'error',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n            }\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        setSelectedList([])\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <Card>\n            <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                <UncontrolledButtonDropdown>\n                    <DropdownToggle color='secondary' caret outline>\n                        <span className='align-middle ml-50'>Action</span>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem className='w-100' onClick={() => deleteData(selectedList)}>\n                            <span className='align-middle ml-50'>Delete</span>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledButtonDropdown>\n                <Button className='ml-2' color='primary' onClick={() => dispatch(showCreateAdmin(true))}>\n                    <PlusCircle size={15}/>\n                    <span className='align-middle ml-50'>Add Admin</span>\n                </Button>\n            </CardHeader>\n            <Row className='justify-content-end mx-0'>\n                <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                    <div className='d-flex align-items-center'>\n                        <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                        <Input\n                            className='dataTable-select'\n                            type='select'\n                            id='sort-select'\n                            value={pageSize}\n                            onChange={e => setPageSize(parseInt(e.target.value))}\n                        >\n                            <option value={5}>5</option>\n                            <option value={10}>10</option>\n                            <option value={25}>25</option>\n                            <option value={50}>50</option>\n                            <option value={75}>75</option>\n                            <option value={100}>100</option>\n                        </Input>\n                    </div>\n                </Col>\n\n                <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                    <Label className='mr-1' for='search-input'>\n                        Search\n                    </Label>\n                    <Input\n                        className='dataTable-filter mb-50'\n                        type='text'\n                        bsSize='sm'\n                        id='search-input'\n                        value={searchStr}\n                        onChange={(e) => setSearchStr(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                    />\n                </Col>\n            </Row>\n            <DataTable\n                noHeader\n                pagination\n                paginationServer\n                selectableRows\n                columns={columns}\n                paginationPerPage={7}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10}/>}\n                paginationDefaultPage={1}\n                paginationComponent={CustomPagination}\n                data={dataList}\n                selectableRowsComponent={BootstrapCheckbox}\n                onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n            />\n\n            <CreateAdmin/>\n        </Card>\n    )\n}\n\nexport default Admins","import {useEffect, useState} from \"react\";\r\nimport './MultiSelect.css'\r\n\r\nexport const MultiSelect = ({data, onSelected, displayField, idField, filter = '', selectedItemList}) => {\r\n\r\n    const [selectedDataList, setSelectedDataList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setSelectedDataList(selectedItemList)\r\n    }, []);\r\n\r\n    const onItemSelected = (title, _id) => {\r\n        let tmpList = []\r\n        const isExist = selectedDataList.some(item => item[idField] === _id)\r\n        if (isExist) {\r\n            for (let item of selectedDataList) {\r\n                if (item.id !== _id) {\r\n                    tmpList.push({title, _id})\r\n                }\r\n            }\r\n        } else {\r\n            tmpList = [...selectedDataList, {title, _id}]\r\n        }\r\n\r\n        setSelectedDataList(tmpList)\r\n        onSelected(tmpList)\r\n    }\r\n\r\n    return (\r\n        <div style={{maxHeight: 300, overflow: 'overlay', marginBottom: 20}}>\r\n            {\r\n                data.map((item) => item[displayField].toLowerCase().includes(filter.toLowerCase()) && <div>\r\n                    <div className=\"d-flex justify-content-between mb-1 ml-1\">\r\n                        <span className=\"SingleSelect-sub-select\">{item[displayField]}</span>\r\n                        <div onClick={() => onItemSelected(item[displayField], item[idField])}>\r\n                            {!selectedDataList.some(item1 => item1[idField] === item[idField]) &&\r\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M12 2C17.523 2 22 6.477 22 12C22 17.523 17.523 22 12 22C6.477 22 2 17.523 2 12C2 6.477 6.477 2 12 2ZM12 4C9.87827 4 7.84344 4.84285 6.34315 6.34315C4.84285 7.84344 4 9.87827 4 12C4 14.1217 4.84285 16.1566 6.34315 17.6569C7.84344 19.1571 9.87827 20 12 20C14.1217 20 16.1566 19.1571 17.6569 17.6569C19.1571 16.1566 20 14.1217 20 12C20 9.87827 19.1571 7.84344 17.6569 6.34315C16.1566 4.84285 14.1217 4 12 4Z\"\r\n                                        fill=\"#CACACC\"/>\r\n                                </svg>}\r\n                            {selectedDataList.some(item1 => item1[idField] === item[idField]) &&\r\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M12 2C17.523 2 22 6.477 22 12C22 17.523 17.523 22 12 22C6.477 22 2 17.523 2 12C2 6.477 6.477 2 12 2ZM15.535 8.381L10.585 13.331L8.465 11.21C8.37216 11.1171 8.26192 11.0434 8.14059 10.9931C8.01926 10.9428 7.8892 10.9168 7.75785 10.9168C7.49258 10.9167 7.23814 11.022 7.0505 11.2095C6.86286 11.397 6.75739 11.6514 6.7573 11.9166C6.7572 12.1819 6.86249 12.4364 7.05 12.624L9.808 15.382C9.91015 15.4842 10.0314 15.5653 10.1649 15.6206C10.2984 15.6759 10.4415 15.7044 10.586 15.7044C10.7305 15.7044 10.8736 15.6759 11.0071 15.6206C11.1406 15.5653 11.2618 15.4842 11.364 15.382L16.95 9.796C17.1376 9.60836 17.2431 9.35386 17.2431 9.0885C17.2431 8.82314 17.1376 8.56864 16.95 8.381C16.7624 8.19336 16.5079 8.08794 16.2425 8.08794C15.9771 8.08794 15.7226 8.19336 15.535 8.381V8.381Z\"\r\n                                        fill=\"#1E63EE\"/>\r\n                                </svg>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};","import {Button, FormGroup, Input, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showAddRoleModal} from '@store/actions/modal'\r\nimport './AddRoleModal.css'\r\nimport {X} from \"react-feather\";\r\nimport axios from \"../../../utility/axios\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport const AddRoleModal = ({onUpdate}) => {\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [role, setRole] = useState('');\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const titleChanged = (e) => {\r\n        setRole(e.target.value);\r\n    }\r\n\r\n    const addRole = async () => {\r\n        let link = '/admins/createRole';\r\n\r\n        let result;\r\n        try {\r\n            result = await axios.post(link, {\r\n                title: role\r\n            });\r\n            if (result.status) {\r\n                await MySwal.fire({\r\n                    title: 'Good job!',\r\n                    text: `You created role successfully!`,\r\n                    icon: 'success',\r\n                    position: 'center',\r\n                    timer: 2000,\r\n                    customClass: {\r\n                        confirmButton: 'btn btn-primary'\r\n                    },\r\n                    buttonsStyling: false\r\n                }).then(function (result) {\r\n                    if (onUpdate) onUpdate();\r\n                    dispatch(showAddRoleModal());\r\n                })\r\n            } else {\r\n                await MySwal.fire({\r\n                    title: 'Error',\r\n                    text: 'Something went wrong.',\r\n                    icon: 'error',\r\n                    timer: 2000,\r\n                    position: 'center',\r\n                    customClass: {\r\n                        confirmButton: 'btn btn-danger'\r\n                    },\r\n                    buttonsStyling: false\r\n                })\r\n            }\r\n        } catch (e) {\r\n            await MySwal.fire({\r\n                title: 'Error',\r\n                text: e.toString(),\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showAddRoleModal())}\r\n               isOpen={store.showAddRoleModal}\r\n               className=\"modal-dialog-centered\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showAddRoleModal())}>\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Button.Ripple onClick={() => dispatch(showAddRoleModal())} className='btn-icon rounded-circle'\r\n                                   color='flat-danger'>\r\n                        <X size={16}/>\r\n                    </Button.Ripple>\r\n                </div>\r\n                <h1 className=\"add-subject-title\">ADD ROLE</h1>\r\n                <FormGroup>\r\n                    <Input placeholder='Admin Role' value={role} onChange={titleChanged}/>\r\n                </FormGroup>\r\n                <br/>\r\n\r\n                <div className=\"d-flex justify-content-center mt-1\">\r\n                    <Button color='gradient-primary' onClick={addRole}>Publish</Button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};","import {Button, Input, InputGroup, InputGroupAddon, InputGroupText, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showAddSyllabus, showRoleSelectModal} from '@store/actions/modal'\r\nimport './RoleSelectModal.css'\r\nimport {PlusCircle, Search} from \"react-feather\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"../../../utility/axios\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {SingleSelect} from \"../../components/SingleSelect/SingleSelect\";\r\n// import {AddRoleModal} from \"../AddRoleModal/AddRoleModal\";\r\nimport {showAddRoleModal} from \"../../../redux/actions/modal\";\r\nimport {AddRoleModal} from \"../AddRoleModal/AddRoleModal\";\r\n\r\nexport const RoleSelectModal = ({title, onSelected}) => {\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectedTitle, setSelectedTitle] = useState('')\r\n    const [id, setId] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const [syllabuses, setSyllabuses] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n    }, [syllabuses]);\r\n\r\n    const onChangeFilter = (e) => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    async function fetchData() {\r\n        const response = await axios.get('/admins/getAllRoles')\r\n        if (response.data) {\r\n            setSyllabuses(response.data)\r\n        }\r\n    }\r\n\r\n    const onItemSelected = (title, id) => {\r\n        setSelectedTitle(title)\r\n        setId(id)\r\n    }\r\n\r\n    const onFinalSelect = () => {\r\n        if (selectedTitle === '') {\r\n            MySwal.fire({\r\n                title: 'Error',\r\n                text: 'Please select one',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n            return\r\n        }\r\n        onSelected(selectedTitle, id)\r\n        dispatch(showRoleSelectModal())\r\n    }\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showRoleSelectModal())}\r\n               isOpen={store.showRoleSelectModal}\r\n               className=\"modal-dialog-centered modal-sm\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showRoleSelectModal())}>\r\n                <h1 className=\"SelectListModal-title mt-2 mb-2\">{title}</h1>\r\n\r\n                <InputGroup className='input-group-merge mb-2'>\r\n                    <InputGroupAddon addonType='prepend'>\r\n                        <InputGroupText>\r\n                            <Search size={14}/>\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder='search...' focus onChange={onChangeFilter} value={filter}/>\r\n                </InputGroup>\r\n\r\n                <SingleSelect selectedId={id} data={syllabuses} filter={filter} onSelected={onItemSelected}\r\n                              displayField='title' idField='_id'/>\r\n\r\n                <div className=\"mb-1\" style={{cursor: 'pointer'}} onClick={e => dispatch(showAddRoleModal(true))}>\r\n                    <PlusCircle className=\"mr-1\" color=\"#8840E5\"/>\r\n                    <span style={{color: '#8840E5'}}>Add Role</span>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center mt-1\">\r\n                    <Button color='gradient-primary' onClick={onFinalSelect}>Select</Button>\r\n                </div>\r\n            </ModalBody>\r\n\r\n            <AddRoleModal onUpdate={fetchData}/>\r\n        </Modal>\r\n    );\r\n};","import {Button, Input, InputGroup, InputGroupAddon, InputGroupText, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showAccessSelectModal} from '@store/actions/modal'\r\nimport './AccessSelectModal.css'\r\nimport {Search} from \"react-feather\";\r\nimport {useState} from \"react\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {SingleSelect} from \"../../components/SingleSelect/SingleSelect\";\r\nimport {MultiSelect} from \"../../components/MultiSelect/MultiSelect\";\r\n\r\nexport const AccessSelectModal = ({title, onSelected}) => {\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const [syllabuses, setSyllabuses] = useState([\r\n        {\r\n            title: 'Create',\r\n            _id: 'create'\r\n        },\r\n        {\r\n            title: 'Activities',\r\n            _id: 'Activities'\r\n        },\r\n        {\r\n            title: 'Plans',\r\n            _id: 'Plans'\r\n        },\r\n        {\r\n            title: 'Resources',\r\n            _id: 'Resources'\r\n        },\r\n        {\r\n            title: 'Library',\r\n            _id: 'Library'\r\n        },\r\n        {\r\n            title: 'Sales',\r\n            _id: 'Sales'\r\n        }, {\r\n            title: 'Market',\r\n            _id: 'Market'\r\n        }, {\r\n            title: 'Products',\r\n            _id: 'Products'\r\n        },\r\n        {\r\n            title: 'Events',\r\n            _id: 'Events'\r\n        },\r\n        {\r\n            title: 'Rewards',\r\n            _id: 'Rewards'\r\n        },\r\n        {\r\n            title: 'Users',\r\n            _id: 'Users'\r\n        },\r\n        {\r\n            title: 'Admins',\r\n            _id: 'Admins'\r\n        },\r\n        {\r\n            title: 'Schools',\r\n            _id: 'Schools'\r\n        },\r\n        {\r\n            title: 'Sponsors',\r\n            _id: 'Sponsors'\r\n        },\r\n        {\r\n            title: 'APIs & SDKs',\r\n            _id: 'APIs & SDKs'\r\n        },\r\n        {\r\n            title: 'Settings',\r\n            _id: 'Settings'\r\n        }\r\n    ])\r\n\r\n    const [selectedItemList, setSelectedItemList] = useState([])\r\n\r\n    const onChangeFilter = (e) => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    const onItemSelected = (tmpList) => {\r\n        setSelectedItemList(tmpList)\r\n    }\r\n\r\n    const onFinalSelect = () => {\r\n        if (selectedItemList.length === 0) {\r\n            MySwal.fire({\r\n                title: 'Error',\r\n                text: 'Please select one',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n            return\r\n        }\r\n        onSelected(selectedItemList)\r\n        dispatch(showAccessSelectModal())\r\n    }\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showAccessSelectModal())}\r\n               isOpen={store.showAccessSelectModal}\r\n               className=\"modal-dialog-centered modal-sm\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showAccessSelectModal())}>\r\n                <h1 className=\"SelectListModal-title mt-2 mb-2\">{title}</h1>\r\n\r\n                <InputGroup className='input-group-merge mb-2'>\r\n                    <InputGroupAddon addonType='prepend'>\r\n                        <InputGroupText>\r\n                            <Search size={14}/>\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder='search...' focus onChange={onChangeFilter} value={filter}/>\r\n                </InputGroup>\r\n\r\n                <MultiSelect idField=\"_id\" displayField=\"title\" filter={filter} data={syllabuses} selectedItemList={selectedItemList}\r\n                                                 onSelected={onItemSelected}/>\r\n\r\n                <div className=\"d-flex justify-content-center mt-1\">\r\n                    <Button color='gradient-primary' onClick={onFinalSelect}>Select</Button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};","import {Button, FormGroup, Input, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showCreateAdmin} from '@store/actions/modal'\r\nimport './CreateAdmin.css'\r\nimport {X} from \"react-feather\";\r\nimport axios from \"../../../utility/axios\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Select from \"react-select\";\r\nimport {selectThemeColors} from \"../../../utility/Utils\";\r\nimport {RoleSelectModal} from \"../RoleSelectModal/RoleSelectModal\";\r\nimport {AccessSelectModal} from \"../AccessSelectModal/AccessSelectModal\";\r\nimport {SelectOutlinedWrapper} from \"../../components/SelectOutlined/SelectOutlinedWrapper\";\r\nimport {showAccessSelectModal, showRoleSelectModal} from \"../../../redux/actions/modal\";\r\n\r\nexport const CreateAdmin = ({admin = undefined, onUpdate}) => {\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [gender, setGender] = useState(undefined);\r\n    const [email, setEmail] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [permissionList, setPermissionList] = useState([]);\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    useEffect(() => {\r\n        if (admin) {\r\n            setFirstName(admin.firstName)\r\n            setLastName(admin.lastName)\r\n            setEmail(admin.email)\r\n            setGender(optionType.find(item => item.value === admin.gender))\r\n        } else {\r\n            setFirstName('')\r\n            setLastName('')\r\n        }\r\n    }, [admin])\r\n\r\n    const addAdmin = async () => {\r\n        console.log(role)\r\n        let link = '/admins';\r\n        let adminData = {\r\n            firstName,\r\n            lastName,\r\n            gender: gender.value,\r\n            email,\r\n            role: role.id,\r\n            permissions: permissionList.map(item => item.title).join(', ')\r\n        }\r\n        if (admin) {\r\n            link = `/setting/updateProfile`\r\n            adminData = {\r\n                firstName,\r\n                lastName,\r\n                gender: gender.value\r\n            }\r\n        }\r\n\r\n        let result;\r\n        try {\r\n            result = await axios.post(link, adminData);\r\n            if (result.status) {\r\n                await MySwal.fire({\r\n                    title: 'Good job!',\r\n                    text: `You ${admin ? 'updated' : 'created'} admin successfully!`,\r\n                    icon: 'success',\r\n                    position: 'center',\r\n                    timer: 2000,\r\n                    customClass: {\r\n                        confirmButton: 'btn btn-primary'\r\n                    },\r\n                    buttonsStyling: false\r\n                }).then(function (result) {\r\n                    if (onUpdate) onUpdate();\r\n                    dispatch(showCreateAdmin());\r\n                })\r\n            } else {\r\n                await MySwal.fire({\r\n                    title: 'Error',\r\n                    text: 'Something went wrong.',\r\n                    icon: 'error',\r\n                    timer: 2000,\r\n                    position: 'center',\r\n                    customClass: {\r\n                        confirmButton: 'btn btn-danger'\r\n                    },\r\n                    buttonsStyling: false\r\n                })\r\n            }\r\n        } catch (e) {\r\n            await MySwal.fire({\r\n                title: 'Error',\r\n                text: e.toString(),\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const optionType = [\r\n        {value: 'male', label: 'Male'},\r\n        {value: 'female', label: 'Female'}\r\n    ]\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showCreateAdmin())}\r\n               isOpen={store.showCreateAdmin}\r\n               className=\"modal-dialog-centered\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showCreateAdmin())}>\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Button.Ripple onClick={() => dispatch(showCreateAdmin())} className='btn-icon rounded-circle'\r\n                                   color='flat-danger'>\r\n                        <X size={16}/>\r\n                    </Button.Ripple>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center mb-1\">\r\n                    <svg width=\"96\" height=\"95\" viewBox=\"0 0 96 95\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <rect x=\"0.5\" width=\"95\" height=\"95\" rx=\"47.5\" fill=\"#0089FD\" fill-opacity=\"0.06\"/>\r\n                        <path\r\n                            d=\"M57.1667 52.082C60.1194 52.0822 62.9581 53.2222 65.0907 55.2644C67.2234 57.3065 68.4854 60.0931 68.6135 63.0431L68.625 63.5404V65.832C68.6254 66.9884 68.1887 68.1021 67.4024 68.95C66.6162 69.7978 65.5385 70.3172 64.3854 70.4039L64.0417 70.4154H31.9583C30.802 70.4157 29.6883 69.979 28.8404 69.1928C27.9925 68.4065 27.4732 67.3288 27.3865 66.1758L27.375 65.832V63.5404C27.3752 60.5876 28.5152 57.749 30.5573 55.6163C32.5995 53.4836 35.3861 52.2216 38.336 52.0935L38.8333 52.082H57.1667ZM48 24.582C51.0389 24.582 53.9534 25.7892 56.1023 27.9381C58.2511 30.087 59.4583 33.0014 59.4583 36.0404C59.4583 39.0793 58.2511 41.9938 56.1023 44.1426C53.9534 46.2915 51.0389 47.4987 48 47.4987C44.9611 47.4987 42.0466 46.2915 39.8977 44.1426C37.7489 41.9938 36.5417 39.0793 36.5417 36.0404C36.5417 33.0014 37.7489 30.087 39.8977 27.9381C42.0466 25.7892 44.9611 24.582 48 24.582Z\"\r\n                            fill=\"#0089FD\"/>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <Input placeholder='First Name' value={firstName} onChange={e => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Input placeholder='Last Name' value={lastName} onChange={e => setLastName(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <Select\r\n                    theme={selectThemeColors}\r\n                    className='react-select mt-1 mb-1'\r\n                    classNamePrefix='select'\r\n                    options={optionType}\r\n                    isClearable={false}\r\n                    value={gender}\r\n                    placeholder=\"Gender\"\r\n                    onChange={(item) => setGender(item)}\r\n                />\r\n\r\n                <FormGroup className=\"mb-1\">\r\n                    <Input placeholder='Email' disabled={admin} type=\"email\" value={email}\r\n                           onChange={(e) => setEmail(e.target.value)}/>\r\n                </FormGroup>\r\n\r\n                {!admin && <SelectOutlinedWrapper className=\"mb-1\" onClick={() => dispatch(showRoleSelectModal(true))}\r\n                                                  text=\"Set Role\"\r\n                                                  text1={role?.title}/>}\r\n\r\n                {!admin && <SelectOutlinedWrapper onClick={() => dispatch(showAccessSelectModal(true))} text=\"Access\"\r\n                                                  text1={permissionList?.map(item => item.title).join(', ')}/>}\r\n\r\n                <div className=\"d-flex justify-content-center mt-1\">\r\n                    <Button color='gradient-primary' onClick={addAdmin}>{admin ? 'Update' : 'Create Admin'}</Button>\r\n                </div>\r\n            </ModalBody>\r\n\r\n            <RoleSelectModal onSelected={(title, id) => setRole({title, id})} title={'Admin Role'}/>\r\n            <AccessSelectModal onSelected={(items) => setPermissionList(items)} title=\"Admin Access\"/>\r\n        </Modal>\r\n    );\r\n};"],"sourceRoot":""}