{"version":3,"sources":["roducate/modals/CreateEvent/CreateEvent.js","roducate/pages/events/Event.js"],"names":["CreateEvent","_ref","_ref$event","event","undefined","_ref$onChange","onChange","MySwal","withReactContent","Swal","store","useSelector","state","modal","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","amount","setAmount","_useState5","_useState6","description","setDescription","_useState7","_useState8","userType","setUserType","_useState9","_useState10","eventType","setEventType","_useState11","_useState12","ageLimit","setAgeLimit","_useState13","Date","_useState14","startDate","setStartDate","_useState15","_useState16","endDate","setEndDate","_useState17","_useState18","icon","setIcon","useEffect","showCreateEvent","create","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isPublished","formData","result","wrap","_context","prev","next","abrupt","fire","text","timer","position","customClass","confirmButton","buttonsStyling","FormData","append","toUTCString","toLowerCase","Number","isInteger","value","axios","post","concat","_id","sent","data","success","then","stop","_x","apply","arguments","ageLimitOptions","label","eventTypeOptions","_jsxs","Modal","toggle","isOpen","className","children","ModalBody","_jsx","Button","Ripple","color","outline","onClick","X","size","Select","theme","selectThemeColors","classNamePrefix","find","item","options","isClearable","Input","placeholder","style","marginBottom","e","target","Flatpickr","id","date","SelectOutlinedWrapper","showUserTypeSelectModal","text1","charAt","toUpperCase","substring","type","name","rows","FileUploader","onFileChange","UserTypeSelectModal","onSelected","moment","require","BootstrapCheckbox","forwardRef","ref","rest","_objectWithoutProperties","_excluded","_objectSpread","Event","eventListByDate","setEventListByDate","dataList","setDataList","selectedList","setSelectedList","searchStr","setSearchStr","sortBy","sortOrder","sort","setSort","pageSize","setPageSize","pageNumber","setPageNumber","totalPages","setTotalPages","currentDate","setCurrentDate","_useState19","_useState20","editingRow","setEditingRow","getEventListByDate","response","showLoadingScreen","eventDate","t0","toast","error","message","transition","Slide","hideProgressBar","autoClose","columns","sortable","minWidth","cell","row","height","src","process","coverImages","selector","createdAt","toLocaleString","format","_isActive$pass","_isActive$pass2","_isActive$pass3","_isActive$pass4","getTime","isActive","isDeleted","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","MoreVertical","DropdownMenu","right","DropdownItem","href","preventDefault","deleteData","Trash","Edit","Avatar","width","viewBox","fill","xmlns","d","stroke","_callee2","_context2","loadData","_ref4","_callee3","_context3","_ref5","_callee4","ids","res","_context4","PlusCircle","Card","CardHeader","UncontrolledButtonDropdown","caret","Row","Col","md","sm","Label","for","parseInt","bsSize","onKeyPress","key","DataTable","noHeader","pagination","paginationServer","selectableRows","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","selectableRowsComponent","onSelectedRowsChange","selectedRows","map","onSort","inline"],"mappings":"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","file":"static/js/37.ea77c722.chunk.js","sourcesContent":["import {Button, Input, Modal, ModalBody} from \"reactstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showCreateEvent, showUserTypeSelectModal} from '@store/actions/modal'\r\nimport {X} from \"react-feather\";\r\nimport './CreateEvent.css'\r\nimport {SelectOutlinedWrapper} from \"../../components/SelectOutlined/SelectOutlinedWrapper\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport axios from \"../../../utility/axios\";\r\nimport {UserTypeSelectModal} from \"../UserTypeSelectModal/UserTypeSelectModal\";\r\nimport Select from \"react-select\";\r\nimport {selectThemeColors} from '@utils'\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport FileUploader from \"../../components/FileUploader/FileUploader\";\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\nexport const CreateEvent = ({event = undefined, onChange = undefined}) => {\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const store = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [userType, setUserType] = useState(undefined);\r\n    const [eventType, setEventType] = useState('free')\r\n    const [ageLimit, setAgeLimit] = useState(0)\r\n\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date())\r\n\r\n    const [icon, setIcon] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if (event) {\r\n            setTitle(event?.title)\r\n            setDescription(event?.description)\r\n            setUserType(event.userType)\r\n            setAgeLimit(event.ageLimit)\r\n        } else {\r\n            setTitle('')\r\n            setDescription('')\r\n            setUserType(undefined)\r\n            setAgeLimit(0)\r\n        }\r\n    }, [store.showCreateEvent])\r\n\r\n    const onIconChange = (icon) => {\r\n        setIcon(icon)\r\n    }\r\n\r\n    const onChangeDescription = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const create = async (isPublished) => {\r\n        if (title === '' || !userType || ageLimit === 0) {\r\n            return MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Please input correctly.',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n\r\n        const formData = new FormData()\r\n        formData.append('title', title)\r\n        formData.append('description', description)\r\n        formData.append('startDate', startDate.toUTCString())\r\n        formData.append('endDate', endDate.toUTCString())\r\n        formData.append('eventImages', icon)\r\n        formData.append('fee', eventType === 'free' ? 0 : amount)\r\n        formData.append('userType', userType.toLowerCase())\r\n        formData.append('ageLimit', Number.isInteger(ageLimit) ? ageLimit : ageLimit.value)\r\n\r\n        let result;\r\n        if (event)\r\n            result = await axios.post(`/event/updateEvent/${event._id}`, formData);\r\n        else\r\n            result = await axios.post(`/event`, formData);\r\n\r\n        if (result.data.success) {\r\n            await MySwal.fire({\r\n                title: 'Good job!',\r\n                text: `You ${event ? 'updated' : 'added'} event successfully!`,\r\n                icon: 'success',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary'\r\n                },\r\n                buttonsStyling: false\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    dispatch(showCreateEvent())\r\n                    if (onChange) onChange()\r\n                }\r\n            })\r\n        } else {\r\n            MySwal.fire({\r\n                title: 'Error!',\r\n                text: 'Something went wrong.',\r\n                icon: 'error',\r\n                timer: 2000,\r\n                position: 'center',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n        }\r\n    }\r\n\r\n    const onTitleChanged = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const onUserTypeSelected = (title) => {\r\n        setUserType(title)\r\n    }\r\n\r\n    const ageLimitOptions = [\r\n        {value: 5, label: '5+'},\r\n        {value: 12, label: '12+'},\r\n        {value: 15, label: '15+'},\r\n        {value: 18, label: '18+'}\r\n    ]\r\n\r\n    const eventTypeOptions = [\r\n        {value: 'free', label: 'Free Event'},\r\n        {value: 'paid', label: 'Paid Event'}\r\n    ]\r\n\r\n    return (\r\n        <Modal toggle={() => dispatch(showCreateEvent())}\r\n               isOpen={store.showCreateEvent}\r\n               className=\"modal-dialog-centered modal-lg\"\r\n        >\r\n            <ModalBody toggle={() => dispatch(showCreateEvent())}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <Button.Ripple color='info' outline onClick={() => create(false)}>\r\n                        Save as Draft\r\n                    </Button.Ripple>\r\n                    <Button.Ripple onClick={() => dispatch(showCreateEvent())}\r\n                                   className='btn-icon rounded-circle'\r\n                                   color='flat-danger'>\r\n                        <X size={16}/>\r\n                    </Button.Ripple>\r\n                </div>\r\n                <h1 className=\"add-event-title\">{(event ? 'EDIT ' : 'CREATE ') + 'EVENT'}</h1>\r\n\r\n                <Select\r\n                    theme={selectThemeColors}\r\n                    className='react-select mb-1'\r\n                    classNamePrefix='select'\r\n                    value={eventTypeOptions.find((item) => item.value === eventType)}\r\n                    options={eventTypeOptions}\r\n                    isClearable={false}\r\n                    onChange={(value) => setEventType(value.value)}\r\n                />\r\n\r\n                <Input placeholder={`Event title`} style={{marginBottom: 20}}\r\n                       value={title} onChange={onTitleChanged}/>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <span>Start Date:</span>\r\n                        <Flatpickr\r\n                            value={startDate}\r\n                            data-enable-time\r\n                            id='date-time-picker1'\r\n                            className='form-control'\r\n                            onChange={date => setStartDate(date)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <span>End Date:</span>\r\n                        <Flatpickr\r\n                            value={endDate}\r\n                            data-enable-time\r\n                            id='date-time-picker2'\r\n                            className='form-control'\r\n                            onChange={date => setEndDate(date)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6\">\r\n                        <SelectOutlinedWrapper className=\"col-6\" onClick={() => dispatch(showUserTypeSelectModal())}\r\n                                               text=\"User type\"\r\n                                               text1={userType ? userType?.charAt(0).toUpperCase() + userType?.substring(1) : ''}/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Select\r\n                            theme={selectThemeColors}\r\n                            className='react-select'\r\n                            classNamePrefix='select'\r\n                            value={ageLimitOptions.find((item) => item.value === ageLimit)}\r\n                            options={ageLimitOptions}\r\n                            isClearable={false}\r\n                            onChange={(value) => setAgeLimit(value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Input className=\"mb-1\" type='textarea' name='text' rows='2' value={description}\r\n                       placeholder='Description'\r\n                       onChange={onChangeDescription}/>\r\n\r\n                {eventType === 'paid' && <div className=\"col-6 pl-0\">\r\n                    <Input placeholder=\"Amount\" type=\"number\" style={{marginBottom: 20}}\r\n                           value={amount} onChange={(e) => setAmount(e.target.value)}/>\r\n                </div>}\r\n\r\n                <FileUploader onFileChange={onIconChange}/>\r\n\r\n                <div className=\"d-flex justify-content-center mt-2\">\r\n                    <Button color='gradient-primary' onClick={() => create(true)}>Create event</Button>\r\n                </div>\r\n            </ModalBody>\r\n\r\n            <UserTypeSelectModal title=\"User type\" onSelected={onUserTypeSelected}/>\r\n        </Modal>\r\n    );\r\n};","// ** React Imports\nimport React, {forwardRef, useEffect, useState} from 'react'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {Slide, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'; // import the CSS file for styling\nimport {ChevronDown, Edit, MoreVertical, PlusCircle, Trash, X} from 'react-feather'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Input,\n    Label,\n    Row,\n    UncontrolledButtonDropdown,\n    UncontrolledDropdown\n} from 'reactstrap'\nimport axios from \"../../../utility/axios\";\nimport Avatar from \"../../../@core/components/avatar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nimport {showLoadingScreen} from '@store/actions/layout'\nimport {showCreateEvent} from \"../../../redux/actions/modal\";\nimport './Event.css'\nimport {CreateEvent} from \"../../modals/CreateEvent/CreateEvent\";\nimport Flatpickr from \"react-flatpickr\";\n\nconst moment = require('moment');\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({onClick, ...rest}, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick}/>\n    </div>\n))\n\nconst Event = () => {\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.modal)\n\n    const [eventListByDate, setEventListByDate] = useState([])\n\n    // data table model\n    const [dataList, setDataList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n\n    // data table rendering\n    const [searchStr, setSearchStr] = useState('')\n    const [sort, setSort] = useState({sortBy: '_id', sortOrder: 'asc'})\n    const [pageSize, setPageSize] = useState(5)\n    const [pageNumber, setPageNumber] = useState(1)\n    const [totalPages, setTotalPages] = useState(1)\n    const [currentDate, setCurrentDate] = useState(new Date())\n\n    // data table operation (edit, delete)\n    const [editingRow, setEditingRow] = useState(undefined)\n\n    useEffect(() => {\n        getEventListByDate()\n    }, [currentDate])\n\n    const getEventListByDate = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/event/getEventByDate', {\n                eventDate: new Date(currentDate).toUTCString()\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n\n        if (response && response.data) {\n            setEventListByDate(response.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    // data table columns\n    const columns = [\n        {\n            name: 'Thumbnail',\n            sortable: false,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <img style={{height: '40px'}} src={process.env.REACT_APP_3BUCKET_URL + row.coverImages[0]}/>\n                )\n            }\n        },\n        {\n            name: 'Event title',\n            selector: 'title',\n            sortable: false,\n            minWidth: '200px'\n        },\n        {\n            name: 'Date & Time',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return <div>{moment(row.createdAt.toLocaleString()).format('DD MMM YYYY h:mm A')}</div>\n            }\n        },\n        {\n            name: 'Status',\n            sortable: true,\n            minWidth: '150px',\n            cell: row => {\n                return (\n                    <div>\n                        {new Date().getTime() > new Date(row.endDate).getTime() && <div>\n                            {isActive['pass']?.icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FCB22B\"}}>Pass</span>}\n                        </div>}\n                        {new Date().getTime() < new Date(row.endDate).getTime() && new Date().getTime() > new Date(row.startDate).getTime() &&\n                            <div>\n                                {isActive['pass']?.icon}&nbsp;&nbsp;&nbsp;\n                                {<span style={{color: \"#00AB5F\"}}>Ongoing</span>}\n                            </div>}\n                        {new Date().getTime() < new Date(row.startDate).getTime() && <div>\n                            {isActive['pass']?.icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#1E63EE\"}}>Upcoming</span>}\n                        </div>}\n                        {row.isDeleted && <div>\n                            {isActive['pass']?.icon}&nbsp;&nbsp;&nbsp;\n                            {<span style={{color: \"#FC7753\"}}>Cancelled</span>}\n                        </div>}\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15}/>\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='#' className='w-100'\n                                              onClick={(e) => {\n                                                  e.preventDefault()\n                                                  deleteData([row._id])\n                                              }}>\n                                    <Trash size={15}/>\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <Edit size={15} onClick={() => {\n                            setEditingRow(dataList.find(item => item._id === row._id))\n                            dispatch(showCreateEvent(true))\n                        }}/>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const MySwal = withReactContent(Swal)\n\n    const isActive = {\n        \"pass\": {\n            icon: <Avatar color='light-success' icon={<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\"\n                                                           xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M8 1.5C8.12247 1.50002 8.24067 1.54498 8.33219 1.62636C8.4237 1.70774 8.48217 1.81987 8.4965 1.9415L8.5 2V2.5H9.5C9.75229 2.49992 9.99528 2.5952 10.1803 2.76675C10.3653 2.93829 10.4786 3.17342 10.4975 3.425L10.5 3.5V9.5C10.5001 9.75229 10.4048 9.99528 10.2333 10.1803C10.0617 10.3653 9.82658 10.4786 9.575 10.4975L9.5 10.5H2.5C2.24771 10.5001 2.00472 10.4048 1.81973 10.2333C1.63474 10.0617 1.52142 9.82658 1.5025 9.575L1.5 9.5V3.5C1.49992 3.24771 1.5952 3.00472 1.76675 2.81973C1.93829 2.63474 2.17342 2.52142 2.425 2.5025L2.5 2.5H3.5V2C3.50014 1.87256 3.54894 1.74998 3.63642 1.65732C3.72391 1.56465 3.84348 1.50888 3.9707 1.50141C4.09792 1.49395 4.22319 1.53534 4.32092 1.61713C4.41864 1.69893 4.48145 1.81495 4.4965 1.9415L4.5 2V2.5H7.5V2C7.5 1.86739 7.55268 1.74021 7.64645 1.64645C7.74021 1.55268 7.86739 1.5 8 1.5ZM9.5 6H2.5V9.5H9.5V6ZM9.5 3.5H2.5V5H9.5V3.5Z\"\n                    fill=\"#FCB22B\"/>\n            </svg>}/>\n        },\n        \"ongoing\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6 1C8.7615 1 11 3.2385 11 6C11 8.7615 8.7615 11 6 11C3.2385 11 1 8.7615 1 6C1 3.2385 3.2385 1 6 1ZM6 2C4.93913 2 3.92172 2.42143 3.17157 3.17157C2.42143 3.92172 2 4.93913 2 6C2 7.06087 2.42143 8.07828 3.17157 8.82843C3.92172 9.57857 4.93913 10 6 10C7.06087 10 8.07828 9.57857 8.82843 8.82843C9.57857 8.07828 10 7.06087 10 6C10 4.93913 9.57857 3.92172 8.82843 3.17157C8.07828 2.42143 7.06087 2 6 2ZM6 3C6.12247 3.00002 6.24067 3.04498 6.33219 3.12636C6.4237 3.20774 6.48217 3.31987 6.4965 3.4415L6.5 3.5V5.793L7.8535 7.1465C7.94317 7.23648 7.99524 7.35722 7.99911 7.48419C8.00299 7.61117 7.95839 7.73486 7.87438 7.83014C7.79036 7.92542 7.67322 7.98515 7.54676 7.9972C7.4203 8.00925 7.294 7.97271 7.1935 7.895L7.1465 7.8535L5.6465 6.3535C5.56879 6.27572 5.51888 6.1745 5.5045 6.0655L5.5 6V3.5C5.5 3.36739 5.55268 3.24021 5.64645 3.14645C5.74021 3.05268 5.86739 3 6 3Z\"\n                    fill=\"#00AB5F\"/>\n            </svg>}/>\n        },\n        \"upcoming\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6 1C8.7615 1 11 3.2385 11 6C11 8.7615 8.7615 11 6 11C3.2385 11 1 8.7615 1 6C1 3.2385 3.2385 1 6 1ZM6 2C4.93913 2 3.92172 2.42143 3.17157 3.17157C2.42143 3.92172 2 4.93913 2 6C2 7.06087 2.42143 8.07828 3.17157 8.82843C3.92172 9.57857 4.93913 10 6 10C7.06087 10 8.07828 9.57857 8.82843 8.82843C9.57857 8.07828 10 7.06087 10 6C10 4.93913 9.57857 3.92172 8.82843 3.17157C8.07828 2.42143 7.06087 2 6 2ZM6 3C6.12247 3.00002 6.24067 3.04498 6.33219 3.12636C6.4237 3.20774 6.48217 3.31987 6.4965 3.4415L6.5 3.5V5.793L7.8535 7.1465C7.94317 7.23648 7.99524 7.35722 7.99911 7.48419C8.00299 7.61117 7.95839 7.73486 7.87438 7.83014C7.79036 7.92542 7.67322 7.98515 7.54676 7.9972C7.4203 8.00925 7.294 7.97271 7.1935 7.895L7.1465 7.8535L5.6465 6.3535C5.56879 6.27572 5.51888 6.1745 5.5045 6.0655L5.5 6V3.5C5.5 3.36739 5.55268 3.24021 5.64645 3.14645C5.74021 3.05268 5.86739 3 6 3Z\"\n                    fill=\"#1E63EE\"/>\n            </svg>}/>\n        },\n        \"cancelled\": {\n            icon: <Avatar color='light-danger' icon={<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M4.50537 11.4955L8.0007 8.00022L11.496 11.4955M11.496 4.50488L8.00004 8.00022L4.50537 4.50488\"\n                      stroke=\"#FC7753\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>}/>\n        }\n    }\n\n    useEffect(async () => {\n        if (!store.showCreateEvent)\n            loadData()\n    }, [store.showCreateEvent, pageNumber, pageSize, sort])\n\n    const loadData = async () => {\n        dispatch(showLoadingScreen(true))\n        let response = undefined\n        try {\n            response = await axios.post('/event/getAllEvent', {\n                pageNumber,\n                pageSize,\n                searchStr,\n                sort\n            })\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n\n        if (response && response.data) {\n            setTotalPages(response.data.totalPages)\n            setDataList(response.data.data)\n        }\n\n        dispatch(showLoadingScreen(false))\n    }\n\n    const deleteData = async (ids) => {\n        dispatch(showLoadingScreen(true))\n        try {\n            const res = await axios.post('/event/deleteEvents', {ids})\n            dispatch(showLoadingScreen(false))\n            if (res.data.success) {\n                await MySwal.fire({\n                    title: 'Good job!',\n                    text: 'You deleted syllabus successfully!',\n                    icon: 'success',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n\n                loadData()\n            } else {\n                MySwal.fire({\n                    title: 'Error!',\n                    text: 'Something went wrong!',\n                    icon: 'error',\n                    timer: 2000,\n                    position: 'center',\n                    customClass: {\n                        confirmButton: 'btn btn-primary'\n                    },\n                    buttonsStyling: false\n                })\n            }\n        } catch (e) {\n            dispatch(showLoadingScreen(false))\n            toast.error(<span style={{color: 'white'}}>{e.message}</span>, {\n                transition: Slide,\n                hideProgressBar: true,\n                autoClose: 2000\n            })\n        }\n        setSelectedList([])\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => {\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                breakLabel='...'\n                pageCount={totalPages || 1}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                activeClassName='active'\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n                onPageChange={page => setPageNumber(++page.selected)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                breakClassName='page-item'\n                breakLinkClassName='page-link'\n                containerClassName={\n                    'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n                }\n            />\n        )\n    }\n\n    return (\n        <div>\n            <div className=\"row d-flex justify-content-between mb-2\">\n                <div className=\"d-flex\">\n                </div>\n                <Button className='ml-2' color='primary' onClick={() => dispatch(showCreateEvent(true))}>\n                    <PlusCircle size={15}/>\n                    <span className='align-middle ml-50'>Add Event</span>\n                </Button>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-9\">\n                    <Card className=\"row\">\n                        <CardHeader\n                            className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n                            <UncontrolledButtonDropdown>\n                                <DropdownToggle color='secondary' caret outline>\n                                    <span className='align-middle ml-50'>Action</span>\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem className='w-100' onClick={() => deleteData(selectedList)}>\n                                        <span className='align-middle ml-50'>Delete</span>\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledButtonDropdown>\n                        </CardHeader>\n                        <Row className='justify-content-end mx-0'>\n                            <Col className='d-flex align-items-center justify-content-start' md='6' sm='12'>\n                                <div className='d-flex align-items-center'>\n                                    <Label for='sort-select' className=\"mb-0\">Rows per page: </Label>\n                                    <Input\n                                        className='dataTable-select'\n                                        type='select'\n                                        id='sort-select'\n                                        value={pageSize}\n                                        onChange={e => setPageSize(parseInt(e.target.value))}\n                                    >\n                                        <option value={5}>5</option>\n                                        <option value={10}>10</option>\n                                        <option value={25}>25</option>\n                                        <option value={50}>50</option>\n                                        <option value={75}>75</option>\n                                        <option value={100}>100</option>\n                                    </Input>\n                                </div>\n                            </Col>\n\n                            <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                                <Label className='mr-1' for='search-input'>\n                                    Search\n                                </Label>\n                                <Input\n                                    className='dataTable-filter mb-50'\n                                    type='text'\n                                    bsSize='sm'\n                                    id='search-input'\n                                    value={searchStr}\n                                    onChange={(e) => setSearchStr(e.target.value)}\n                                    onKeyPress={(e) => e.key === 'Enter' && loadData()}\n                                />\n                            </Col>\n                        </Row>\n                        <DataTable\n                            noHeader\n                            pagination\n                            paginationServer\n                            selectableRows\n                            columns={columns}\n                            paginationPerPage={7}\n                            className='react-dataTable'\n                            sortIcon={<ChevronDown size={10}/>}\n                            paginationDefaultPage={1}\n                            paginationComponent={CustomPagination}\n                            data={dataList}\n                            selectableRowsComponent={BootstrapCheckbox}\n                            onSelectedRowsChange={(e) => setSelectedList(e.selectedRows.map(item => item._id))}\n                            onSort={(e, sortOrder) => setSort({sortBy: e.selector, sortOrder})}\n                        />\n                    </Card>\n                </div>\n                <div className=\"col-3\">\n                    <Flatpickr\n                        className='form-control'\n                        value={currentDate}\n                        options={{inline: true}}\n                        onChange={date => setCurrentDate(date)}\n                    />\n\n                    <Card className=\"mt-1\">\n                        {eventListByDate.map(item => <div className=\"d-flex justify-content-between p-1\">\n                            <img style={{height: '40px'}}\n                                 src={process.env.REACT_APP_3BUCKET_URL + item.coverImages[0]}/>\n                            <div>\n                                <p>{item.title}</p>\n                                <p className=\"mb-0\">{item.startDate.toLocaleString()}</p>\n                            </div>\n                            <Button.Ripple onClick={() => deleteData([item._id])}\n                                           className='btn-icon rounded-circle'\n                                           color='flat-danger'>\n                                <X size={16}/>\n                            </Button.Ripple>\n                        </div>)}\n                    </Card>\n                </div>\n            </div>\n\n            <CreateEvent event={editingRow}/>\n        </div>\n    )\n}\n\nexport default Event"],"sourceRoot":""}