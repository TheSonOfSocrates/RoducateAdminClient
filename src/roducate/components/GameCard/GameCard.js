import './GameCard.css'
import Avatar from "../../../@core/components/avatar";
import {secondsToHMS} from "../../../utility/Utils";
import {useDispatch, useSelector} from "react-redux";

const GameCard = ({game = undefined}) => {
    const store = useSelector(state => state.game)
    const dispatch = useDispatch()

    return (
        <div style={{width: '250px', backgroundColor: 'white', padding: '8px', borderRadius: '10px'}}>
            {game?.thumbnail && <img style={{width: '100%', height: '150px', borderRadius: '10px'}}
                                     src={`${process.env.REACT_APP_3BUCKET_URL}${game?.thumbnail}?version=${Math.floor(Math.random() * 50000) + 1}`}/>}
            <p className="game-card-title mt-1">{game?.title}</p>
            <p className="game-card-des">{game?.description ?? 'No description'}</p>
            <div className="d-flex justify-content-between">
                <div>
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd"
                              d="M4.50076 3.562C4.37503 3.44056 4.20662 3.37337 4.03183 3.37488C3.85703 3.3764 3.68982 3.44652 3.56621 3.57012C3.44261 3.69373 3.3725 3.86093 3.37098 4.03573C3.36946 4.21053 3.43666 4.37893 3.55809 4.50467L4.97209 5.92C5.09719 6.04501 5.26682 6.1152 5.44366 6.11514C5.62051 6.11507 5.79009 6.04476 5.91509 5.91967C6.0401 5.79457 6.11029 5.62494 6.11023 5.4481C6.11017 5.27125 6.03985 5.10167 5.91476 4.97667L4.50143 3.56333L4.50076 3.562ZM7.80076 6.862C7.67503 6.74056 7.50662 6.67337 7.33183 6.67488C7.15703 6.6764 6.98982 6.74652 6.86621 6.87012C6.74261 6.99373 6.6725 7.16093 6.67098 7.33573C6.66946 7.51053 6.73666 7.67893 6.85809 7.80467L12.9861 13.9327C13.1118 14.0541 13.2802 14.1213 13.455 14.1198C13.6298 14.1183 13.797 14.0482 13.9206 13.9245C14.0442 13.8009 14.1144 13.6337 14.1159 13.4589C14.1174 13.2841 14.0502 13.1157 13.9288 12.99L7.80076 6.862ZM11.1008 3.562C11.2257 3.68702 11.296 3.85656 11.296 4.03333C11.296 4.21011 11.2257 4.37965 11.1008 4.50467L9.68609 5.92C9.62415 5.9819 9.55063 6.03099 9.46972 6.06447C9.3888 6.09795 9.30209 6.11517 9.21452 6.11514C9.12696 6.1151 9.04026 6.09783 8.95937 6.06429C8.87848 6.03075 8.80499 5.98161 8.74309 5.91967C8.61809 5.79457 8.5479 5.62494 8.54796 5.4481C8.54802 5.27125 8.61833 5.10167 8.74343 4.97667L10.1574 3.56333C10.2193 3.50135 10.2929 3.45218 10.3738 3.41863C10.4547 3.38508 10.5415 3.36781 10.6291 3.36781C10.7167 3.36781 10.8035 3.38508 10.8844 3.41863C10.9653 3.45218 11.0388 3.50135 11.1008 3.56333V3.562ZM5.91476 9.69067C6.03985 9.56566 6.11017 9.39608 6.11023 9.21924C6.11029 9.04239 6.0401 8.87276 5.91509 8.74767C5.79009 8.62257 5.62051 8.55226 5.44366 8.5522C5.26682 8.55214 5.09719 8.62233 4.97209 8.74733L3.55809 10.162C3.49442 10.2235 3.44363 10.2971 3.40869 10.3784C3.37375 10.4597 3.35536 10.5472 3.35459 10.6357C3.35382 10.7243 3.37069 10.812 3.40421 10.894C3.43773 10.9759 3.48724 11.0503 3.54983 11.1129C3.61243 11.1755 3.68686 11.225 3.76879 11.2585C3.85072 11.2921 3.93851 11.3089 4.02703 11.3082C4.11555 11.3074 4.20303 11.289 4.28436 11.2541C4.3657 11.2191 4.43926 11.1683 4.50076 11.1047L5.91476 9.69067ZM12.6628 7.33333C12.6628 7.51014 12.5925 7.67971 12.4675 7.80474C12.3425 7.92976 12.1729 8 11.9961 8H9.99609C9.81928 8 9.64971 7.92976 9.52469 7.80474C9.39966 7.67971 9.32943 7.51014 9.32943 7.33333C9.32943 7.15652 9.39966 6.98695 9.52469 6.86193C9.64971 6.7369 9.81928 6.66667 9.99609 6.66667H11.9961C12.1729 6.66667 12.3425 6.7369 12.4675 6.86193C12.5925 6.98695 12.6628 7.15652 12.6628 7.33333ZM4.66276 8C4.83957 8 5.00914 7.92976 5.13416 7.80474C5.25919 7.67971 5.32943 7.51014 5.32943 7.33333C5.32943 7.15652 5.25919 6.98695 5.13416 6.86193C5.00914 6.7369 4.83957 6.66667 4.66276 6.66667H2.66276C2.48595 6.66667 2.31638 6.7369 2.19136 6.86193C2.06633 6.98695 1.99609 7.15652 1.99609 7.33333C1.99609 7.51014 2.06633 7.67971 2.19136 7.80474C2.31638 7.92976 2.48595 8 2.66276 8H4.66276ZM7.32943 12.6667C7.15262 12.6667 6.98305 12.5964 6.85802 12.4714C6.733 12.3464 6.66276 12.1768 6.66276 12V10C6.66276 9.82319 6.733 9.65362 6.85802 9.5286C6.98305 9.40357 7.15262 9.33333 7.32943 9.33333C7.50624 9.33333 7.67581 9.40357 7.80083 9.5286C7.92586 9.65362 7.99609 9.82319 7.99609 10V12C7.99609 12.1768 7.92586 12.3464 7.80083 12.4714C7.67581 12.5964 7.50624 12.6667 7.32943 12.6667ZM6.66276 4.66667C6.66276 4.84348 6.733 5.01305 6.85802 5.13807C6.98305 5.2631 7.15262 5.33333 7.32943 5.33333C7.50624 5.33333 7.67581 5.2631 7.80083 5.13807C7.92586 5.01305 7.99609 4.84348 7.99609 4.66667V2.66667C7.99609 2.48986 7.92586 2.32029 7.80083 2.19526C7.67581 2.07024 7.50624 2 7.32943 2C7.15262 2 6.98305 2.07024 6.85802 2.19526C6.733 2.32029 6.66276 2.48986 6.66276 2.66667V4.66667Z"
                              fill="#CACACC"/>
                    </svg>

                    <span className="game-card-category"
                          style={{marginLeft: 5}}>Rate: +</span>
                    <span className="game-card-cnt">{game?.ageLimit}</span>
                </div>
                <span className="game-card-time">{secondsToHMS(new Date(game.updatedAt).getSeconds())}</span>
            </div>
            <div className="d-flex justify-content-between mt-2">
                <div className="d-flex">
                    <Avatar img={`${process.env.REACT_APP_3BUCKET_URL}${game?.createdBy.avatar}`} imgHeight='40'
                            imgWidth='40'
                            status='online'/>
                    <span className="game-card-username">{game?.createdBy.name}</span>
                </div>
            </div>
        </div>
    )
}

export default GameCard